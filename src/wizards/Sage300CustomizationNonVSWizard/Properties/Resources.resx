<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeleteControl" xml:space="preserve">
    <value>Delete Control</value>
  </data>
  <data name="StepDescriptionCreateEdit" xml:space="preserve">
    <value>This will generate the files for a Customization Package (JSON, XML, JS). If an endpoint is required for the customization, use the Customization Plugin in Visual Studio after these files are generated.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Error" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\images\ProgressError.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="CustomDescriptionTip" xml:space="preserve">
    <value>Override or accept the defaulted description for the screen</value>
  </data>
  <data name="HeaderPlacementID" xml:space="preserve">
    <value>Header ID:</value>
  </data>
  <data name="PackageNewTip" xml:space="preserve">
    <value>Select to create a new customization</value>
  </data>
  <data name="BootstrapperRemoveTip" xml:space="preserve">
    <value>Select to remove the Bootstrapper property from the customization</value>
  </data>
  <data name="DetailPlacementID" xml:space="preserve">
    <value>Detail ID:</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="CustomizationName" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="ScreenName" xml:space="preserve">
    <value>Screen Name:</value>
  </data>
  <data name="InvalidSettingRequiredField" xml:space="preserve">
    <value>The {0} has not been specified.</value>
  </data>
  <data name="ScreenTargetScreen" xml:space="preserve">
    <value>Target Screen</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>JSON Files (Manifest.json)|Manifest.json</value>
  </data>
  <data name="ControlType" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="ControlLabel" xml:space="preserve">
    <value>Label:</value>
  </data>
  <data name="GeneratedMessage" xml:space="preserve">
    <value>This file was generated by a tool.</value>
  </data>
  <data name="EditScreen" xml:space="preserve">
    <value>Edit Screen</value>
  </data>
  <data name="ScreenScreenName" xml:space="preserve">
    <value>Custom Screen Name</value>
  </data>
  <data name="Success" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\images\ProgressSuccess.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="IdentificationProperties" xml:space="preserve">
    <value>Identification Properties</value>
  </data>
  <data name="FinderTextID" xml:space="preserve">
    <value>Finder ID:</value>
  </data>
  <data name="ControlName" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="ControlsConfiguration" xml:space="preserve">
    <value>XML File Name:</value>
  </data>
  <data name="TargetScreen" xml:space="preserve">
    <value>Target Screen:</value>
  </data>
  <data name="CustomNameTip" xml:space="preserve">
    <value>Override or accept the defaulted name for the screen</value>
  </data>
  <data name="Generated" xml:space="preserve">
    <value>If endpoints are required for this customization, Load Visual Studio, Select the Customization Wizard Plugin and specify the JSON Manifest created in this wizard to generate a solution.</value>
  </data>
  <data name="PlacementBeforeID" xml:space="preserve">
    <value>Before ID?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="StepDescriptionControls" xml:space="preserve">
    <value>Add a control or controls for this customization. Proceed to the next step if no controls are required for this customization.</value>
  </data>
  <data name="CustomizationNameTip" xml:space="preserve">
    <value>A name to identify the customization (informational only)</value>
  </data>
  <data name="CategoryTip" xml:space="preserve">
    <value>Select a Category to filter the Screen selection</value>
  </data>
  <data name="StepDescriptionGenerated" xml:space="preserve">
    <value>The files noted below have been generated for this customization.</value>
  </data>
  <data name="InsertControlAbove" xml:space="preserve">
    <value>Insert Control Above</value>
  </data>
  <data name="StepDescriptionGenerate" xml:space="preserve">
    <value>Select 'Generate' to generate the files for this customization based upon the content from the previous steps.</value>
  </data>
  <data name="Package" xml:space="preserve">
    <value>Package:</value>
  </data>
  <data name="CancelScreen" xml:space="preserve">
    <value>Cancel Screen Changes</value>
  </data>
  <data name="TextProperties" xml:space="preserve">
    <value>Text Properties</value>
  </data>
  <data name="ControlsBehaviorTip" xml:space="preserve">
    <value>The name of the JavaScript file for events of the customization</value>
  </data>
  <data name="ScreenModule" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="StepTitleControls" xml:space="preserve">
    <value>Add/Edit Controls</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name:</value>
  </data>
  <data name="DeleteScreen" xml:space="preserve">
    <value>Delete Screen</value>
  </data>
  <data name="BusinessPartnerNameTip" xml:space="preserve">
    <value>The business partner name creating the customization</value>
  </data>
  <data name="Compatibility" xml:space="preserve">
    <value>Compatibility:</value>
  </data>
  <data name="StepTitleGenerated" xml:space="preserve">
    <value>Generated Customization Files Complete</value>
  </data>
  <data name="EulaRemoveTip" xml:space="preserve">
    <value>Select to remove the EULA file from the customization</value>
  </data>
  <data name="ControlLabelTip" xml:space="preserve">
    <value>The text for the control if the control supports the Text property</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="SaveScreen" xml:space="preserve">
    <value>Save Screen</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="StepTitleCreateEdit" xml:space="preserve">
    <value>Add/Edit a Customization</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="screenConfig" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\templates\screenConfig.xsd;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="FilterAll" xml:space="preserve">
    <value>All Files (*.*)|*.*</value>
  </data>
  <data name="CustomizationDescriptionTip" xml:space="preserve">
    <value>The description of the customization</value>
  </data>
  <data name="ControlColsTip" xml:space="preserve">
    <value>The number of columns for the control</value>
  </data>
  <data name="TargetScreenTip" xml:space="preserve">
    <value>Select a Screen from the filtered list</value>
  </data>
  <data name="ControlBindingTip" xml:space="preserve">
    <value>The property used for two-way binding is the name of the Data Model property</value>
  </data>
  <data name="AssemblyTip" xml:space="preserve">
    <value>The Assembly file will be created in the Visual Studio Customizard Wizard if an endpoint is needed for this customization</value>
  </data>
  <data name="EditControl" xml:space="preserve">
    <value>Edit Control</value>
  </data>
  <data name="EulaFinderTip" xml:space="preserve">
    <value>Lookup an existing EULA file to be included in the customization</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="InvalidSettingNumericField" xml:space="preserve">
    <value>The {0} must be numeric.</value>
  </data>
  <data name="Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="BindingProperty" xml:space="preserve">
    <value>Binding Property</value>
  </data>
  <data name="ControlNameTip" xml:space="preserve">
    <value>A unique name for the control</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="AssemblyRemoveTip" xml:space="preserve">
    <value>Select to remove the Assembly property from the customization</value>
  </data>
  <data name="Dash" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="Blank" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\images\Blank24.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ScreenCategory" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="InvalidManifest" xml:space="preserve">
    <value>Error encountered accessing manifest.</value>
  </data>
  <data name="AddScreen" xml:space="preserve">
    <value>Add Screen</value>
  </data>
  <data name="DeleteScreens" xml:space="preserve">
    <value>Delete Screens</value>
  </data>
  <data name="ErrorCreatingFile" xml:space="preserve">
    <value>Error creating {0}</value>
  </data>
  <data name="Step" xml:space="preserve">
    <value>Step</value>
  </data>
  <data name="ControlColumns" xml:space="preserve">
    <value>Columns:</value>
  </data>
  <data name="GeneratingFile" xml:space="preserve">
    <value>Generating File {0}...</value>
  </data>
  <data name="PackageIdTip" xml:space="preserve">
    <value>A 36 character GUID to uniquely identify the customization</value>
  </data>
  <data name="ScreenSettings" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\templates\ScreenSettings.xml;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="ModuleId" xml:space="preserve">
    <value>Module Id:</value>
  </data>
  <data name="MaxLength" xml:space="preserve">
    <value>Max Length:</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category:</value>
  </data>
  <data name="ControlsBehavior" xml:space="preserve">
    <value>JS File Name:</value>
  </data>
  <data name="SettingsToGenerateTip" xml:space="preserve">
    <value>The {screen}_Settimgs.xml file(s) will be generated with the following content:</value>
  </data>
  <data name="ControlRowsTip" xml:space="preserve">
    <value>The number of rows for the control</value>
  </data>
  <data name="Assembly" xml:space="preserve">
    <value>Assembly:</value>
  </data>
  <data name="ModuleIdTip" xml:space="preserve">
    <value>Select a Sage Module to filter the Category selection</value>
  </data>
  <data name="ControlFinderTextIdTip" xml:space="preserve">
    <value>The name of the control for the finder's linked text control</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>Folder:</value>
  </data>
  <data name="VersionDefault" xml:space="preserve">
    <value>1.0</value>
  </data>
  <data name="ControlsConfigTip" xml:space="preserve">
    <value>The name of the XML Settings file for controls of the customization</value>
  </data>
  <data name="FolderNameTip" xml:space="preserve">
    <value>The folder for the customization</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="ControlPlacementIdTip" xml:space="preserve">
    <value>The control will be inserted before or after this control</value>
  </data>
  <data name="BootstrapperTip" xml:space="preserve">
    <value>The Bootstrapper file will be created in the Visual Studio Customization Wizard if an endpoint is needed for this customization</value>
  </data>
  <data name="ScreenControlsConfiguration" xml:space="preserve">
    <value>XML Settings filename</value>
  </data>
  <data name="InvalidSettingControlTypeChange" xml:space="preserve">
    <value>Cannot change from a container type (Tab Page, Panel) to a non-container type.</value>
  </data>
  <data name="ControlMaxLengthTip" xml:space="preserve">
    <value>The maximum number of characters allowed for the control</value>
  </data>
  <data name="InsertControlBelow" xml:space="preserve">
    <value>Insert Control Below</value>
  </data>
  <data name="ControlCheckPlacementTip" xml:space="preserve">
    <value>Select to indictate the control is to be placed before the control specified</value>
  </data>
  <data name="ScreenControlsBehavior" xml:space="preserve">
    <value>JavaScript filename</value>
  </data>
  <data name="ControlRows" xml:space="preserve">
    <value>Rows:</value>
  </data>
  <data name="Bootstrapper" xml:space="preserve">
    <value>Bootstrapper:</value>
  </data>
  <data name="CompatibilityDefault" xml:space="preserve">
    <value>73A+</value>
  </data>
  <data name="FinderProperty" xml:space="preserve">
    <value>Finder Property</value>
  </data>
  <data name="EULATip" xml:space="preserve">
    <value>An End User License Agreement file if specified will be included in the Manifest</value>
  </data>
  <data name="PlacementId" xml:space="preserve">
    <value>ID:</value>
  </data>
  <data name="PlacementProperties" xml:space="preserve">
    <value>Placement Properties</value>
  </data>
  <data name="FolderFinderTip" xml:space="preserve">
    <value>Lookup an existing folder for the customization</value>
  </data>
  <data name="StepTitleGenerate" xml:space="preserve">
    <value>Generate Customization Files</value>
  </data>
  <data name="WebCustomization" xml:space="preserve">
    <value>Web Customization</value>
  </data>
  <data name="VersionTip" xml:space="preserve">
    <value>The verison for the customization (informational only)</value>
  </data>
  <data name="PackageFinderTip" xml:space="preserve">
    <value>Lookup an existing customization</value>
  </data>
  <data name="CompatibilityTip" xml:space="preserve">
    <value>The compatibility level of the customization (informational only)</value>
  </data>
  <data name="ControlTypeTip" xml:space="preserve">
    <value>The type of control</value>
  </data>
  <data name="StepTitleScreens" xml:space="preserve">
    <value>Add/Edit Screens</value>
  </data>
  <data name="ScreenDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="StepDescriptionScreens" xml:space="preserve">
    <value>Add a screen or screens for this customization. One screen is recommended; however, multiple screens may be added.</value>
  </data>
  <data name="ManifestToGenerateTip" xml:space="preserve">
    <value>The Manifest.json file will be generated with the following content:</value>
  </data>
  <data name="EULA" xml:space="preserve">
    <value>EULA:</value>
  </data>
  <data name="InvalidSettingNumericValue" xml:space="preserve">
    <value>The {0} does not have a valid value.</value>
  </data>
  <data name="CustomizationDescription" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="AddControl" xml:space="preserve">
    <value>Add Control</value>
  </data>
  <data name="GeneratedWarning" xml:space="preserve">
    <value>Changes to this file may cause incorrect behavior and will be lost if the file is regenerated.</value>
  </data>
  <data name="ControlBinding" xml:space="preserve">
    <value>Binding:</value>
  </data>
  <data name="InvalidSettingRequiredScreen" xml:space="preserve">
    <value>At least one screen must be specified.</value>
  </data>
  <data name="ScreenCustomization" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\templates\ScreenCustomization.js;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="sage300_logo_sq" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\sage300-logo-sq.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>