// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Templates.WebApi
{
    using System.Linq;
    using System.Collections.Generic;
    using Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class Controller : ControllerBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 1 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* The MIT License (MIT) */ 
            
            #line default
            #line hidden
            
            #line 2 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* Copyright (c) 1994-2024 The Sage Group plc or its licensors.  All rights reserved. */ 
            
            #line default
            #line hidden
            
            #line 3 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* */ 
            
            #line default
            #line hidden
            
            #line 4 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* Permission is hereby granted, free of charge, to any person obtaining a copy of */ 
            
            #line default
            #line hidden
            
            #line 5 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* this software and associated documentation files (the "Software"), to deal in */ 
            
            #line default
            #line hidden
            
            #line 6 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* the Software without restriction, including without limitation the rights to use, */ 
            
            #line default
            #line hidden
            
            #line 7 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the */ 
            
            #line default
            #line hidden
            
            #line 8 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* Software, and to permit persons to whom the Software is furnished to do so, */ 
            
            #line default
            #line hidden
            
            #line 9 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* subject to the following conditions: */ 
            
            #line default
            #line hidden
            
            #line 10 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* */ 
            
            #line default
            #line hidden
            
            #line 11 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* The above copyright notice and this permission notice shall be included in all */ 
            
            #line default
            #line hidden
            
            #line 12 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* copies or substantial portions of the Software. */ 
            
            #line default
            #line hidden
            
            #line 13 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* */ 
            
            #line default
            #line hidden
            
            #line 14 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, */ 
            
            #line default
            #line hidden
            
            #line 15 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A */ 
            
            #line default
            #line hidden
            
            #line 16 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT */ 
            
            #line default
            #line hidden
            
            #line 17 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF */ 
            
            #line default
            #line hidden
            
            #line 18 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE */ 
            
            #line default
            #line hidden
            
            #line 19 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 /* OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */ 
            
            #line default
            #line hidden
            
            #line 26 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

    // Locals
    var moduleId = settings.ModuleId;
    var copyright = settings.Copyright;
    var companyNamespace = settings.CompanyNamespace;
    var extension = controllerSettings.BusinessView.Properties[BusinessView.Constants.Extension];
    var modelName = controllerSettings.BusinessView.Properties[BusinessView.Constants.ModelName];
    var resourceName = moduleId + controllerSettings.BusinessView.Properties[BusinessView.Constants.ResourceName];
	var RestrictedViewResourceControllerValue = controllerSettings.BusinessView.Properties[BusinessView.Constants.Verbs];

            
            #line default
            #line hidden
            this.Write("// ");
            
            #line 36 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(copyright));
            
            #line default
            #line hidden
            this.Write("\r\n\r\nusing System.Web.OData.Builder;\r\nusing Unity;\r\nusing ");
            
            #line 40 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(companyNamespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 40 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moduleId));
            
            #line default
            #line hidden
            this.Write(@".WebApi.Models;
using Sage.CA.SBS.ERP.Sage300.Common.WebApi.Attributes;
using Sage.CA.SBS.ERP.Sage300.Common.WebApi.BusinessRepository;
using Sage.CA.SBS.ERP.Sage300.Common.WebApi.Controllers;
using Sage.CA.SBS.ERP.Sage300.Common.WebApi.Interfaces;
using Microsoft.Web.Http;
using System.Web.OData.Routing;
using System.Linq;

namespace ");
            
            #line 49 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(companyNamespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 49 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moduleId));
            
            #line default
            #line hidden
            this.Write(".WebApi.Controllers");
            
            #line 49 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(extension));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    /// <summary>\r\n    /// Class ");
            
            #line 52 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceName));
            
            #line default
            #line hidden
            this.Write("Controller\r\n    /// </summary>\r\n    [ControllerName(\"");
            
            #line 54 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n    [ODataRoutePrefix(\"");
            
            #line 55 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n    ");
            
            #line 56 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RestrictedViewResourceControllerValue));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n    public partial class ");
            
            #line 58 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceName));
            
            #line default
            #line hidden
            this.Write("Controller : ViewResourceController<");
            
            #line 58 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelName));
            
            #line default
            #line hidden
            this.Write(">\r\n    {\r\n        /// <summary>\r\n        /// Initializes a new instance of the <s" +
                    "ee cref=\"");
            
            #line 61 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceName));
            
            #line default
            #line hidden
            this.Write("Controller\"/> class.\r\n        /// </summary>\r\n        /// <param name=\"container\"" +
                    ">The container</param>\r\n        public ");
            
            #line 64 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceName));
            
            #line default
            #line hidden
            this.Write("Controller(IUnityContainer container) : base(container)\r\n        {\r\n        }\r\n\r\n" +
                    "        /// <summary>\r\n        /// Registers this resource as a Web API endpoint" +
                    "\r\n        /// </summary>\r\n        /// <param name=\"builder\"></param>\r\n");
            
            #line 72 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 
var templateFirstLevelEntityList = string.Join(", ", BuildFirstLevelEntityList().Select(e => "T" + e));
var templateFirstLevelEntityListWithConstraints = string.Join("\r\n        ", BuildFirstLevelEntityList().Select(e => "where T" + e + " : class"));

            
            #line default
            #line hidden
            this.Write("\r\n        public static void RegisterODataEntityBase<");
            
            #line 77 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(templateFirstLevelEntityList));
            
            #line default
            #line hidden
            this.Write(">(ODataModelBuilder builder, string entityName)\r\n        ");
            
            #line 78 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(templateFirstLevelEntityListWithConstraints));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            builder.EntitySet<T");
            
            #line 80 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelName));
            
            #line default
            #line hidden
            this.Write(">(entityName);\r\n");
            
            #line 81 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

		foreach (var detail in controllerSettings.Details)
		{
			WriteLine("            builder.ComplexType<T{0}>();", detail.BusinessView.Properties[BusinessView.Constants.ModelName]);
		}

            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n\r\n\r\n        /// <summary>\r\n        /// Base method for registering t" +
                    "his resource as a Web API endpoint \r\n        /// </summary>\r\n");
            
            #line 94 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

        WriteLine("        /// <typeparam name=\"{0}\"></typeparam>", modelName);
        foreach (var detail in controllerSettings.Details)
        {
            WriteLine("        /// <typeparam name=\"{0}\"></typeparam>", detail.BusinessView.Properties[BusinessView.Constants.ModelName]);
        }

            
            #line default
            #line hidden
            this.Write("        /// <param name=\"builder\">ODataModelBuilder</param>\r\n        /// <param n" +
                    "ame=\"entityName\">Entity Name</param>\r\n        /// <param name=\"builder\"></param>" +
                    "\r\n        public static void RegisterODataEntity(ODataModelBuilder builder)\r\n   " +
                    "     {\r\n");
            
            #line 106 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

              WriteLine("            RegisterODataEntityBase<{0}>(builder, \"{1}\");", string.Join(",", BuildFirstLevelEntityList()), resourceName);

            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n");
            
            #line 111 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

	var entityList = new List<string>();
	BuildAllEntities(entityList, controllerSettings);
	var templateEntityList = string.Join(", ", entityList.Select(e => "T" + e));
	var templateEntityList2 = string.Join(", ", entityList);
	var templateEntityListWithConstraints = string.Join("\r\n        ", entityList.Select(e => "where T" + e + " :" + e + ", new()"));

            
            #line default
            #line hidden
            this.Write(@"

        /// <summary>
        /// Specifies the Sage views and their relationships that backs this resource
        /// </summary>
        /// <returns>An instance of IViewEntity which contains the Sage views and corresponding relationships</returns>
        public IViewResourceEntity GetViewEntityHierarchyBase<");
            
            #line 124 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(templateEntityList));
            
            #line default
            #line hidden
            this.Write(">()\r\n        ");
            
            #line 125 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(templateEntityListWithConstraints));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n");
            
            #line 127 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

    DefineEntities(controllerSettings, "");
    DefineRelationships(controllerSettings, "");

            
            #line default
            #line hidden
            this.Write("            return ");
            
            #line 131 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelName));
            
            #line default
            #line hidden
            this.Write(@"Entity;
        }

        /// <summary>
        /// Specifies the Sage views and their relationships that backs this resource
        /// </summary>
        /// <returns>An instance of IViewEntity which contains the Sage views and corresponding relationships</returns>
        protected override IViewResourceEntity GetViewEntityHierarchy()
        {
            return GetViewEntityHierarchyBase<");
            
            #line 140 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(templateEntityList2));
            
            #line default
            #line hidden
            this.Write(">();\r\n        }\r\n    }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 144 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

    public void DefineEntities(ControllerSettings current, string Prefix)
    {
        var keyType = (current.KeyProperties.Count == 0) ? "" : current.KeyType == ViewKeyType.Sequenced ? "ViewKeyType.Sequenced" : "ViewKeyType.Ordered";
        var keySegments = "";
        foreach (var keyProperty in current.KeyProperties)
        {
            keySegments += string.Format(@", (m => m.{0})", keyProperty);
        }
		var viewModelName = current.BusinessView.Properties[BusinessView.Constants.ModelName];

        
        #line default
        #line hidden
        
        #line 154 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write("            var ");

        
        #line default
        #line hidden
        
        #line 155 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Prefix));

        
        #line default
        #line hidden
        
        #line 155 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(viewModelName));

        
        #line default
        #line hidden
        
        #line 155 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write("Entity = ViewResourceEntity<T");

        
        #line default
        #line hidden
        
        #line 155 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(viewModelName));

        
        #line default
        #line hidden
        
        #line 155 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(">.Create(");

        
        #line default
        #line hidden
        
        #line 155 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(keyType));

        
        #line default
        #line hidden
        
        #line 155 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(keySegments));

        
        #line default
        #line hidden
        
        #line 155 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(");\r\n");

        
        #line default
        #line hidden
        
        #line 156 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

        foreach (var detailSettings in current.Details)
        {
            DefineEntities(detailSettings, Prefix + viewModelName + "_");
        }
    }

        
        #line default
        #line hidden
        
        #line 163 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

    public void DefineRelationships(ControllerSettings current, string Prefix)
    {
        foreach (var detailSettings in current.Details)
        {
			var headerViewModelName = current.BusinessView.Properties[BusinessView.Constants.ModelName];
			var detailsViewModelName = detailSettings.BusinessView.Properties[BusinessView.Constants.ModelName];
			var detailsViewPropertyName = detailSettings.BusinessView.Properties[BusinessView.Constants.PropertyName];


        
        #line default
        #line hidden
        
        #line 172 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write("            ");

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Prefix));

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(headerViewModelName));

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write("Entity.AddDetail(");

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Prefix));

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(headerViewModelName));

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(detailsViewModelName));

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write("Entity, (m => m.");

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(detailsViewPropertyName));

        
        #line default
        #line hidden
        
        #line 173 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
this.Write("));\r\n");

        
        #line default
        #line hidden
        
        #line 174 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

            DefineRelationships(detailSettings, Prefix + headerViewModelName + "_");
        }
    }

        
        #line default
        #line hidden
        
        #line 180 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 private List<string> BuildFirstLevelEntityList()
{
	var entityList = new List<string>();
	entityList.Add(controllerSettings.BusinessView.Properties[BusinessView.Constants.ModelName]);
	foreach (var detail in controllerSettings.Details)
	{
		entityList.Add(detail.BusinessView.Properties[BusinessView.Constants.ModelName]);
	}
	return entityList;
} 

        
        #line default
        #line hidden
        
        #line 192 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"
 private void BuildAllEntities(List<string> entities, ControllerSettings controllerSettings)
{
	entities.Add(controllerSettings.BusinessView.Properties[BusinessView.Constants.ModelName]);
	foreach (var detail in controllerSettings.Details)
	{
		BuildAllEntities(entities, detail);
	}
}

        
        #line default
        #line hidden
        
        #line 1 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\Sage300CodeGenerationWizard\Templates\WebApi\Controller.tt"

private global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings _settingsField;

/// <summary>
/// Access the settings parameter of the template.
/// </summary>
private global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings settings
{
    get
    {
        return this._settingsField;
    }
}

private global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.ControllerSettings _controllerSettingsField;

/// <summary>
/// Access the controllerSettings parameter of the template.
/// </summary>
private global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.ControllerSettings controllerSettings
{
    get
    {
        return this._controllerSettingsField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool settingsValueAcquired = false;
if (this.Session.ContainsKey("settings"))
{
    this._settingsField = ((global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings)(this.Session["settings"]));
    settingsValueAcquired = true;
}
if ((settingsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("settings");
    if ((data != null))
    {
        this._settingsField = ((global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings)(data));
    }
}
bool controllerSettingsValueAcquired = false;
if (this.Session.ContainsKey("controllerSettings"))
{
    this._controllerSettingsField = ((global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.ControllerSettings)(this.Session["controllerSettings"]));
    controllerSettingsValueAcquired = true;
}
if ((controllerSettingsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("controllerSettings");
    if ((data != null))
    {
        this._controllerSettingsField = ((global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.ControllerSettings)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class ControllerBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        public System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
