<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Entity" xml:space="preserve">
    <value>TU ReceiptHeader</value>
  </data>
  <data name="SequenceNumber" xml:space="preserve">
    <value>Sequence Number</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ReceiptDate" xml:space="preserve">
    <value>Receipt Date</value>
  </data>
  <data name="FiscalYear" xml:space="preserve">
    <value>Fiscal Year</value>
  </data>
  <data name="FiscalPeriod" xml:space="preserve">
    <value>Fiscal Period</value>
  </data>
  <data name="PurchaseOrderNumber" xml:space="preserve">
    <value>Purchase Order Number</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="ReceiptType" xml:space="preserve">
    <value>Receipt Type</value>
  </data>
  <data name="RateOperation" xml:space="preserve">
    <value>Rate Operation</value>
  </data>
  <data name="VendorNumber" xml:space="preserve">
    <value>Vendor Number</value>
  </data>
  <data name="ReceiptCurrency" xml:space="preserve">
    <value>Receipt Currency</value>
  </data>
  <data name="ExchangeRate" xml:space="preserve">
    <value>Exchange Rate</value>
  </data>
  <data name="RateType" xml:space="preserve">
    <value>Rate Type</value>
  </data>
  <data name="RateDate" xml:space="preserve">
    <value>Rate Date</value>
  </data>
  <data name="RateOverride" xml:space="preserve">
    <value>Rate Override</value>
  </data>
  <data name="AdditionalCost" xml:space="preserve">
    <value>Additional Cost</value>
  </data>
  <data name="OrigAdditionalCostFunc" xml:space="preserve">
    <value>Orig. Additional Cost-Func.</value>
  </data>
  <data name="OrigAdditionalCostSource" xml:space="preserve">
    <value>Orig. Additional Cost-Source</value>
  </data>
  <data name="AdditionalCostCurrency" xml:space="preserve">
    <value>Additional Cost Currency</value>
  </data>
  <data name="TotalExtendedCostFunctional" xml:space="preserve">
    <value>Total Extended Cost-Functional</value>
  </data>
  <data name="TotalExtendedCostSource" xml:space="preserve">
    <value>Total Extended Cost-Source</value>
  </data>
  <data name="TotalExtendedCostAdjusted" xml:space="preserve">
    <value>Total Extended Cost-Adjusted</value>
  </data>
  <data name="TotalAdjustedCostFunctional" xml:space="preserve">
    <value>Total Adjusted Cost-Functional</value>
  </data>
  <data name="TotalReturnCost" xml:space="preserve">
    <value>Total Return Cost</value>
  </data>
  <data name="NumberOfDetailswithCost" xml:space="preserve">
    <value>Number of Details with Cost</value>
  </data>
  <data name="RequireLabels" xml:space="preserve">
    <value>Require Labels</value>
  </data>
  <data name="AdditionalCostAllocationType" xml:space="preserve">
    <value>Additional Cost Allocation Type</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="OriginalTotalCostSource" xml:space="preserve">
    <value>Original Total Cost-Source</value>
  </data>
  <data name="OriginalTotalCostFunctional" xml:space="preserve">
    <value>Original Total Cost-Functional</value>
  </data>
  <data name="AdditionalCostFunctional" xml:space="preserve">
    <value>Additional Cost-Functional</value>
  </data>
  <data name="TotalCostReceiptAdditional" xml:space="preserve">
    <value>Total Cost-Receipt &amp; Additional</value>
  </data>
  <data name="TotalAdjCostReceiptAddl" xml:space="preserve">
    <value>Total Adj. Cost-Receipt &amp; Addl.</value>
  </data>
  <data name="ReceiptCurrencyDecimals" xml:space="preserve">
    <value>Receipt Currency Decimals</value>
  </data>
  <data name="VendorShortName" xml:space="preserve">
    <value>Vendor Short Name</value>
  </data>
  <data name="ICUniqueDocumentNumber" xml:space="preserve">
    <value>IC-Unique Document Number</value>
  </data>
  <data name="VendorExists" xml:space="preserve">
    <value>Vendor Exists</value>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>Record Deleted</value>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>Transaction Number</value>
  </data>
  <data name="RecordStatus" xml:space="preserve">
    <value>Record Status</value>
  </data>
  <data name="ReceiptNumber" xml:space="preserve">
    <value>Receipt Number</value>
  </data>
  <data name="NextDetailLineNumber" xml:space="preserve">
    <value>Next Detail Line Number</value>
  </data>
  <data name="RecordPrinted" xml:space="preserve">
    <value>Record Printed</value>
  </data>
  <data name="PostSequenceNumber" xml:space="preserve">
    <value>Post Sequence Number</value>
  </data>
  <data name="OptionalFields" xml:space="preserve">
    <value>Optional Fields</value>
  </data>
  <data name="ProcessCommand" xml:space="preserve">
    <value>Process Command</value>
  </data>
  <data name="VendorName" xml:space="preserve">
    <value>Vendor Name</value>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>Entered By</value>
  </data>
  <data name="PostingDate" xml:space="preserve">
    <value>Posting Date</value>
  </data>
  <data name="Num1" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Num2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Num3" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Num4" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="Num5" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="Num6" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="Num7" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="Num8" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="Num9" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="Num10" xml:space="preserve">
    <value>10</value>
  </data>
  <data name="Num11" xml:space="preserve">
    <value>11</value>
  </data>
  <data name="Num12" xml:space="preserve">
    <value>12</value>
  </data>
  <data name="Receipt" xml:space="preserve">
    <value>Receipt</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Adjustment" xml:space="preserve">
    <value>Adjustment</value>
  </data>
  <data name="Multiply" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="Divide" xml:space="preserve">
    <value>Divide</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Leave" xml:space="preserve">
    <value>Leave</value>
  </data>
  <data name="Prorate" xml:space="preserve">
    <value>Prorate</value>
  </data>
  <data name="Entered" xml:space="preserve">
    <value>Entered</value>
  </data>
  <data name="Posted" xml:space="preserve">
    <value>Posted</value>
  </data>
  <data name="Costed" xml:space="preserve">
    <value>Costed</value>
  </data>
  <data name="DayEndCompleted" xml:space="preserve">
    <value>Day End Completed</value>
  </data>
  <data name="NothingToProcess" xml:space="preserve">
    <value>Nothing to Process</value>
  </data>
  <data name="InsertOptionalFields" xml:space="preserve">
    <value>Insert Optional Fields</value>
  </data>
  <data name="AdjustedCost" xml:space="preserve">
    <value>Adjusted Cost</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="CurrencyRates" xml:space="preserve">
    <value>Currency Rates</value>
  </data>
  <data name="CustomerNumber" xml:space="preserve">
    <value>Customer Number</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ExtendedCost" xml:space="preserve">
    <value>Extended Cost</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="FunctionalCurrency" xml:space="preserve">
    <value>Functional Currency</value>
  </data>
  <data name="ItemDescription" xml:space="preserve">
    <value>Item Description</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ItemNumber" xml:space="preserve">
    <value>Item Number</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Labels" xml:space="preserve">
    <value>Labels</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="LineNumber" xml:space="preserve">
    <value>Line Number</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="LocationQuantities" xml:space="preserve">
    <value>Location Quantities</value>
  </data>
  <data name="ManItemNumber" xml:space="preserve">
    <value>Manufacturer's Item Number</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ManufacturersItemNumber" xml:space="preserve">
    <value>Manufacturer's Item Number</value>
  </data>
  <data name="PostWarning1" xml:space="preserve">
    <value>Do you want to delete this {0} after posting?</value>
    <comment>Used for post warning</comment>
  </data>
  <data name="PostWarning2" xml:space="preserve">
    <value>If you choose Yes, you will not be able to view the {0} details later or drill down to the details from General Ledger.</value>
    <comment>Used for post warning</comment>
  </data>
  <data name="PostWarning3" xml:space="preserve">
    <value>If you choose No, you can delete the {0} using the  I/C Clear History screen.</value>
    <comment>Used for post warning</comment>
  </data>
  <data name="PriceList" xml:space="preserve">
    <value>Price List</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="QuantityReceived" xml:space="preserve">
    <value>Quantity Received</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="QuantityReturned" xml:space="preserve">
    <value>Quantity Returned</value>
  </data>
  <data name="RateSelection" xml:space="preserve">
    <value>Rate Selection</value>
  </data>
  <data name="RateTypes" xml:space="preserve">
    <value>Rate Types</value>
  </data>
  <data name="ReceiptDetailOptField" xml:space="preserve">
    <value>Receipt Details Optional Fields</value>
  </data>
  <data name="ReceiptHeaders" xml:space="preserve">
    <value>Receipt</value>
  </data>
  <data name="ReceiptLower" xml:space="preserve">
    <value>receipt</value>
  </data>
  <data name="ReceiptOptField" xml:space="preserve">
    <value>Receipt Optional Field</value>
  </data>
  <data name="Receipts" xml:space="preserve">
    <value>Receipts</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ReturnedCost" xml:space="preserve">
    <value>Returned Cost</value>
  </data>
  <data name="ReturnLower" xml:space="preserve">
    <value>return</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ShipmentNumber" xml:space="preserve">
    <value>Shipment Number</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="TotalAdjusted" xml:space="preserve">
    <value>Total Adjusted</value>
  </data>
  <data name="TotalCost" xml:space="preserve">
    <value>Total Cost</value>
  </data>
  <data name="UnitCost" xml:space="preserve">
    <value>Unit Cost</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="UnitOfMeasure" xml:space="preserve">
    <value>Unit of Measure</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="UnitPrice" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="UnitsOfMeasure" xml:space="preserve">
    <value>Units of Measure</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="CurrencyRateSpreadError" xml:space="preserve">
    <value>The currency rate entered lies outside the spread specified in the currency tables. Do you want to continue?</value>
  </data>
  <data name="DateOutOfRange" xml:space="preserve">
    <value>The date entered lies outside the range specified in the company profile. Accept this date?</value>
    <comment>Date Range validation</comment>
  </data>
  <data name="DeletedRecord" xml:space="preserve">
    <value>The {0} has been deleted</value>
    <comment>Deleted the record</comment>
  </data>
  <data name="SaveMessage" xml:space="preserve">
    <value>Saved successfully. The record has to be posted before it will be costed.The system will only be updated with serial and/or lot details when the document is posted. Receipt number: {0}.</value>
  </data>
</root>