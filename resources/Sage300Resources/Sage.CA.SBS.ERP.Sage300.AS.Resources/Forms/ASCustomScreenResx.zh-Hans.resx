<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Module" xml:space="preserve">
    <value>模块</value>
  </data>
  <data name="ManageHeader" xml:space="preserve">
    <value>管理自定义</value>
  </data>
  <data name="Assign" xml:space="preserve">
    <value>分派</value>
  </data>
  <data name="AdvancedMode" xml:space="preserve">
    <value>高级模式</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="ImportHeader" xml:space="preserve">
    <value>导入自定义包</value>
  </data>
  <data name="PackageDesc" xml:space="preserve">
    <value>包描述</value>
  </data>
  <data name="PackageFile" xml:space="preserve">
    <value>包文件</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>是否确要删除此包？</value>
  </data>
  <data name="DetailHeader" xml:space="preserve">
    <value>自定义明细</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>自定义</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="EnableAll" xml:space="preserve">
    <value>启用全部</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>优先</value>
  </data>
  <data name="Manage" xml:space="preserve">
    <value>管理</value>
  </data>
  <data name="PackageID" xml:space="preserve">
    <value>包标识</value>
  </data>
  <data name="DisableAll" xml:space="preserve">
    <value>禁用全部</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>公司</value>
  </data>
  <data name="TargetScreen" xml:space="preserve">
    <value>目标屏幕</value>
  </data>
  <data name="Vendor" xml:space="preserve">
    <value>供应商</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>已禁用</value>
  </data>
  <data name="DuplicateMessage" xml:space="preserve">
    <value>此包先前已导入。如果要导入新版本，必须先删除先前导入的版本。</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>已启用</value>
  </data>
  <data name="ImportMessage" xml:space="preserve">
    <value>自定义包成功导入。</value>
  </data>
  <data name="InvalidPackage" xml:space="preserve">
    <value>选择一个有效的自定义包。</value>
  </data>
  <data name="SaveMessage" xml:space="preserve">
    <value>自定义包设置成功保存。</value>
  </data>
  <data name="AllImportedDesc" xml:space="preserve">
    <value>所有导入的包</value>
  </data>
  <data name="AssignPackage" xml:space="preserve">
    <value>自定义包成功分派。</value>
  </data>
  <data name="SaveConfirmation" xml:space="preserve">
    <value>有对此包未保存的更改。是否继续？</value>
  </data>
  <data name="ColumnName" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="DeletePackage" xml:space="preserve">
    <value>是否删除此包？</value>
  </data>
  <data name="DuplicatePriority" xml:space="preserve">
    <value>优先级{0}已分派给此屏幕的另一自定义。</value>
  </data>
  <data name="DeployCustomization" xml:space="preserve">
    <value>部署自定义</value>
  </data>
  <data name="ThisScreen" xml:space="preserve">
    <value>这一屏幕</value>
  </data>
  <data name="IsEqualTo" xml:space="preserve">
    <value>等于</value>
  </data>
  <data name="StartsWith" xml:space="preserve">
    <value>以此开头</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>筛选器</value>
  </data>
  <data name="FilterInfo" xml:space="preserve">
    <value>显示条目，其值：</value>
  </data>
</root>