<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Entity" xml:space="preserve">
    <value>G/L Source Journal Profiles</value>
    <comment>Screen Title</comment>
  </data>
  <data name="GL0019" xml:space="preserve">
    <value>Source Journal Profiles</value>
  </data>
  <data name="Limit50" xml:space="preserve">
    <value>You cannot add more source codes to this profile because the maximum number of source codes (50) have already been added.</value>
    <comment>Error</comment>
  </data>
  <data name="RecordExists" xml:space="preserve">
    <value>Source Code {0} "{1}" is already specified in this Source Journal Profile.</value>
  </data>
  <data name="SourceCodeID01" xml:space="preserve">
    <value>Source Code ID 01</value>
  </data>
  <data name="SourceCodeID02" xml:space="preserve">
    <value>Source Code ID 02</value>
  </data>
  <data name="SourceCodeID03" xml:space="preserve">
    <value>Source Code ID 03</value>
  </data>
  <data name="SourceCodeID04" xml:space="preserve">
    <value>Source Code ID 04</value>
  </data>
  <data name="SourceCodeID05" xml:space="preserve">
    <value>Source Code ID 05</value>
  </data>
  <data name="SourceCodeID06" xml:space="preserve">
    <value>Source Code ID 06</value>
  </data>
  <data name="SourceCodeID07" xml:space="preserve">
    <value>Source Code ID 07</value>
  </data>
  <data name="SourceCodeID08" xml:space="preserve">
    <value>Source Code ID 08</value>
  </data>
  <data name="SourceCodeID09" xml:space="preserve">
    <value>Source Code ID 09</value>
  </data>
  <data name="SourceCodeID10" xml:space="preserve">
    <value>Source Code ID 10</value>
  </data>
  <data name="SourceCodeID11" xml:space="preserve">
    <value>Source Code ID 11</value>
  </data>
  <data name="SourceCodeID12" xml:space="preserve">
    <value>Source Code ID 12</value>
  </data>
  <data name="SourceCodeID13" xml:space="preserve">
    <value>Source Code ID 13</value>
  </data>
  <data name="SourceCodeID14" xml:space="preserve">
    <value>Source Code ID 14</value>
  </data>
  <data name="SourceCodeID15" xml:space="preserve">
    <value>Source Code ID 15</value>
  </data>
  <data name="SourceCodeID16" xml:space="preserve">
    <value>Source Code ID 16</value>
  </data>
  <data name="SourceCodeID17" xml:space="preserve">
    <value>Source Code ID 17</value>
  </data>
  <data name="SourceCodeID18" xml:space="preserve">
    <value>Source Code ID 18</value>
  </data>
  <data name="SourceCodeID19" xml:space="preserve">
    <value>Source Code ID 19</value>
  </data>
  <data name="SourceCodeID20" xml:space="preserve">
    <value>Source Code ID 20</value>
  </data>
  <data name="SourceCodeID21" xml:space="preserve">
    <value>Source Code ID 21</value>
  </data>
  <data name="SourceCodeID22" xml:space="preserve">
    <value>Source Code ID 22</value>
  </data>
  <data name="SourceCodeID23" xml:space="preserve">
    <value>Source Code ID 23</value>
  </data>
  <data name="SourceCodeID24" xml:space="preserve">
    <value>Source Code ID 24</value>
  </data>
  <data name="SourceCodeID25" xml:space="preserve">
    <value>Source Code ID 25</value>
  </data>
  <data name="SourceCodeID26" xml:space="preserve">
    <value>Source Code ID 26</value>
  </data>
  <data name="SourceCodeID27" xml:space="preserve">
    <value>Source Code ID 27</value>
  </data>
  <data name="SourceCodeID28" xml:space="preserve">
    <value>Source Code ID 28</value>
  </data>
  <data name="SourceCodeID29" xml:space="preserve">
    <value>Source Code ID 29</value>
  </data>
  <data name="SourceCodeID30" xml:space="preserve">
    <value>Source Code ID 30</value>
  </data>
  <data name="SourceCodeID31" xml:space="preserve">
    <value>Source Code ID 31</value>
  </data>
  <data name="SourceCodeID32" xml:space="preserve">
    <value>Source Code ID 32</value>
  </data>
  <data name="SourceCodeID33" xml:space="preserve">
    <value>Source Code ID 33</value>
  </data>
  <data name="SourceCodeID34" xml:space="preserve">
    <value>Source Code ID 34</value>
  </data>
  <data name="SourceCodeID35" xml:space="preserve">
    <value>Source Code ID 35</value>
  </data>
  <data name="SourceCodeID36" xml:space="preserve">
    <value>Source Code ID 36</value>
  </data>
  <data name="SourceCodeID37" xml:space="preserve">
    <value>Source Code ID 37</value>
  </data>
  <data name="SourceCodeID38" xml:space="preserve">
    <value>Source Code ID 38</value>
  </data>
  <data name="SourceCodeID39" xml:space="preserve">
    <value>Source Code ID 39</value>
  </data>
  <data name="SourceCodeID40" xml:space="preserve">
    <value>Source Code ID 40</value>
  </data>
  <data name="SourceCodeID41" xml:space="preserve">
    <value>Source Code ID 41</value>
  </data>
  <data name="SourceCodeID42" xml:space="preserve">
    <value>Source Code ID 42</value>
  </data>
  <data name="SourceCodeID43" xml:space="preserve">
    <value>Source Code ID 43</value>
  </data>
  <data name="SourceCodeID44" xml:space="preserve">
    <value>Source Code ID 44</value>
  </data>
  <data name="SourceCodeID45" xml:space="preserve">
    <value>Source Code ID 45</value>
  </data>
  <data name="SourceCodeID46" xml:space="preserve">
    <value>Source Code ID 46</value>
  </data>
  <data name="SourceCodeID47" xml:space="preserve">
    <value>Source Code ID 47</value>
  </data>
  <data name="SourceCodeID48" xml:space="preserve">
    <value>Source Code ID 48</value>
  </data>
  <data name="SourceCodeID49" xml:space="preserve">
    <value>Source Code ID 49</value>
  </data>
  <data name="SourceCodeID50" xml:space="preserve">
    <value>Source Code ID 50</value>
  </data>
  <data name="SourceJournalName" xml:space="preserve">
    <value>Profile</value>
    <comment>Field</comment>
  </data>
  <data name="SourceJournalProfile" xml:space="preserve">
    <value>Source Journal Profile</value>
    <comment>Field</comment>
  </data>
  <data name="SourceType01" xml:space="preserve">
    <value>Source Type 01</value>
  </data>
  <data name="SourceType02" xml:space="preserve">
    <value>Source Type 02</value>
  </data>
  <data name="SourceType03" xml:space="preserve">
    <value>Source Type 03</value>
  </data>
  <data name="SourceType04" xml:space="preserve">
    <value>Source Type 04</value>
  </data>
  <data name="SourceType05" xml:space="preserve">
    <value>Source Type 05</value>
  </data>
  <data name="SourceType06" xml:space="preserve">
    <value>Source Type 06</value>
  </data>
  <data name="SourceType07" xml:space="preserve">
    <value>Source Type 07</value>
  </data>
  <data name="SourceType08" xml:space="preserve">
    <value>Source Type 08</value>
  </data>
  <data name="SourceType09" xml:space="preserve">
    <value>Source Type 09</value>
  </data>
  <data name="SourceType10" xml:space="preserve">
    <value>Source Type 10</value>
  </data>
  <data name="SourceType11" xml:space="preserve">
    <value>Source Type 11</value>
  </data>
  <data name="SourceType12" xml:space="preserve">
    <value>Source Type 12</value>
  </data>
  <data name="SourceType13" xml:space="preserve">
    <value>Source Type 13</value>
  </data>
  <data name="SourceType14" xml:space="preserve">
    <value>Source Type 14</value>
  </data>
  <data name="SourceType15" xml:space="preserve">
    <value>Source Type 15</value>
  </data>
  <data name="SourceType16" xml:space="preserve">
    <value>Source Type 16</value>
  </data>
  <data name="SourceType17" xml:space="preserve">
    <value>Source Type 17</value>
  </data>
  <data name="SourceType18" xml:space="preserve">
    <value>Source Type 18</value>
  </data>
  <data name="SourceType19" xml:space="preserve">
    <value>Source Type 19</value>
  </data>
  <data name="SourceType20" xml:space="preserve">
    <value>Source Type 20</value>
  </data>
  <data name="SourceType21" xml:space="preserve">
    <value>Source Type 21</value>
  </data>
  <data name="SourceType22" xml:space="preserve">
    <value>Source Type 22</value>
  </data>
  <data name="SourceType23" xml:space="preserve">
    <value>Source Type 23</value>
  </data>
  <data name="SourceType24" xml:space="preserve">
    <value>Source Type 24</value>
  </data>
  <data name="SourceType25" xml:space="preserve">
    <value>Source Type 25</value>
  </data>
  <data name="SourceType26" xml:space="preserve">
    <value>Source Type 26</value>
  </data>
  <data name="SourceType27" xml:space="preserve">
    <value>Source Type 27</value>
  </data>
  <data name="SourceType28" xml:space="preserve">
    <value>Source Type 28</value>
  </data>
  <data name="SourceType29" xml:space="preserve">
    <value>Source Type 29</value>
  </data>
  <data name="SourceType30" xml:space="preserve">
    <value>Source Type 30</value>
  </data>
  <data name="SourceType31" xml:space="preserve">
    <value>Source Type 31</value>
  </data>
  <data name="SourceType32" xml:space="preserve">
    <value>Source Type 32</value>
  </data>
  <data name="SourceType33" xml:space="preserve">
    <value>Source Type 33</value>
  </data>
  <data name="SourceType34" xml:space="preserve">
    <value>Source Type 34</value>
  </data>
  <data name="SourceType35" xml:space="preserve">
    <value>Source Type 35</value>
  </data>
  <data name="SourceType36" xml:space="preserve">
    <value>Source Type 36</value>
  </data>
  <data name="SourceType37" xml:space="preserve">
    <value>Source Type 37</value>
  </data>
  <data name="SourceType38" xml:space="preserve">
    <value>Source Type 38</value>
  </data>
  <data name="SourceType39" xml:space="preserve">
    <value>Source Type 39</value>
  </data>
  <data name="SourceType40" xml:space="preserve">
    <value>Source Type 40</value>
  </data>
  <data name="SourceType41" xml:space="preserve">
    <value>Source Type 41</value>
  </data>
  <data name="SourceType42" xml:space="preserve">
    <value>Source Type 42</value>
  </data>
  <data name="SourceType43" xml:space="preserve">
    <value>Source Type 43</value>
  </data>
  <data name="SourceType44" xml:space="preserve">
    <value>Source Type 44</value>
  </data>
  <data name="SourceType45" xml:space="preserve">
    <value>Source Type 45</value>
  </data>
  <data name="SourceType46" xml:space="preserve">
    <value>Source Type 46</value>
  </data>
  <data name="SourceType47" xml:space="preserve">
    <value>Source Type 47</value>
  </data>
  <data name="SourceType48" xml:space="preserve">
    <value>Source Type 48</value>
  </data>
  <data name="SourceType49" xml:space="preserve">
    <value>Source Type 49</value>
  </data>
  <data name="SourceType50" xml:space="preserve">
    <value>Source Type 50</value>
  </data>
</root>