<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CloseToSegment" xml:space="preserve">
    <value>Clôturer au segment</value>
    <comment>Column</comment>
  </data>
  <data name="ControlAccount" xml:space="preserve">
    <value>Compte de contrôle</value>
    <comment>Column</comment>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Créer</value>
    <comment>Column</comment>
  </data>
  <data name="CreateAccountPreviewHeader" xml:space="preserve">
    <value>Aperçu de création des comptes de GL</value>
    <comment>Screen Title</comment>
  </data>
  <data name="DefaultCurrency" xml:space="preserve">
    <value>Devise par défaut</value>
    <comment>Column</comment>
  </data>
  <data name="NormalBalance" xml:space="preserve">
    <value>Solde courant</value>
    <comment>Column</comment>
  </data>
  <data name="PostIn" xml:space="preserve">
    <value>Report en</value>
    <comment>Column</comment>
  </data>
  <data name="PostToAccount" xml:space="preserve">
    <value>Reporter au compte</value>
    <comment>Column</comment>
  </data>
  <data name="PreviewAccountOptionalFields" xml:space="preserve">
    <value>Aperçu des champs optionnels de compte</value>
    <comment>Field</comment>
  </data>
  <data name="PreviewMulticurrencyDetails" xml:space="preserve">
    <value>Aperçu des détails multidevises</value>
    <comment>Field</comment>
  </data>
  <data name="PreviewSubledgerDetails" xml:space="preserve">
    <value>Aperçu des détails de livre auxiliaire</value>
    <comment>Field</comment>
  </data>
  <data name="Processed" xml:space="preserve">
    <value>Traité</value>
    <comment>Column</comment>
  </data>
  <data name="StartingAccount" xml:space="preserve">
    <value>Compte de début</value>
    <comment>Field</comment>
  </data>
  <data name="StructureCode" xml:space="preserve">
    <value>Code structure</value>
    <comment>Field</comment>
  </data>
  <data name="TransOptionalFields" xml:space="preserve">
    <value>Champs optionnels de transaction</value>
    <comment>Button</comment>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
    <comment>Column</comment>
  </data>
  <data name="UnitOfMeasure" xml:space="preserve">
    <value>Unité de mesure</value>
    <comment>Field</comment>
  </data>
  <data name="AccountGroupCode" xml:space="preserve">
    <value>Code groupe de comptes</value>
    <comment>Column</comment>
  </data>
  <data name="AccountGroupSortCode" xml:space="preserve">
    <value>Code tri du groupe de comptes</value>
    <comment>Field</comment>
  </data>
  <data name="AccountSegmentCode1" xml:space="preserve">
    <value>Code segment de compte 1</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AccountSegmentCode10" xml:space="preserve">
    <value>Code segment de compte 10</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AccountSegmentCode2" xml:space="preserve">
    <value>Code segment de compte 2</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AccountSegmentCode3" xml:space="preserve">
    <value>Code segment de compte 3</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AccountSegmentCode4" xml:space="preserve">
    <value>Code segment de compte 4</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AccountSegmentCode5" xml:space="preserve">
    <value>Code segment de compte 5</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AccountSegmentCode6" xml:space="preserve">
    <value>Code segment de compte 6</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AccountSegmentCode7" xml:space="preserve">
    <value>Code segment de compte 7</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AccountSegmentCode8" xml:space="preserve">
    <value>Code segment de compte 8</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AccountSegmentCode9" xml:space="preserve">
    <value>Code segment de compte 9</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AllocationPercentTotal" xml:space="preserve">
    <value>Pourcentage total de ventilation</value>
    <comment>Field</comment>
  </data>
  <data name="AllocationsAllowed" xml:space="preserve">
    <value>Ventilations autorisées</value>
    <comment>Field</comment>
  </data>
  <data name="AllocOffsetAccount" xml:space="preserve">
    <value>Compte compensation ventilation</value>
    <comment>Field</comment>
  </data>
  <data name="AllocSourceType" xml:space="preserve">
    <value>Type source de ventilation</value>
    <comment>Field</comment>
  </data>
  <data name="ConsolidatedJournals" xml:space="preserve">
    <value>Journaux consolidés</value>
    <comment>Field</comment>
  </data>
  <data name="CreateSwitch" xml:space="preserve">
    <value>Option Créer</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultCurrencyCode" xml:space="preserve">
    <value>Code devise par défaut</value>
    <comment>Field</comment>
  </data>
  <data name="PosttoSegmentID" xml:space="preserve">
    <value>Report au code segment</value>
    <comment>Field</comment>
  </data>
  <data name="PosttoSegmentIDCopy" xml:space="preserve">
    <value>Reporter à Copier code segment</value>
    <comment>Field</comment>
  </data>
  <data name="PreviewAccount" xml:space="preserve">
    <value>Aperçu du compte</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessSwitch" xml:space="preserve">
    <value>Option Traiter</value>
    <comment>Field</comment>
  </data>
  <data name="QuantitiesAllowed" xml:space="preserve">
    <value>Quantités autorisées</value>
    <comment>Field</comment>
  </data>
  <data name="SpecificCurrency" xml:space="preserve">
    <value>Devise spécifique</value>
    <comment>Field</comment>
  </data>
  <data name="UnformattedAccount" xml:space="preserve">
    <value>Compte non formaté</value>
    <comment>Field</comment>
  </data>
  <data name="YearLastClosed" xml:space="preserve">
    <value>Dernier exercice fermé</value>
    <comment>Field</comment>
  </data>
  <data name="CurrencyDescription" xml:space="preserve">
    <value>Description devise</value>
    <comment>Field</comment>
  </data>
  <data name="SourceCurrency" xml:space="preserve">
    <value>Devise transaction</value>
    <comment>Field</comment>
  </data>
  <data name="RevaluationCode" xml:space="preserve">
    <value>Code réévaluation</value>
    <comment>Field</comment>
  </data>
  <data name="CurrencyCode" xml:space="preserve">
    <value>Code de devise</value>
    <comment>Field</comment>
  </data>
  <data name="EntityName" xml:space="preserve">
    <value>GL0046</value>
    <comment>Import/Export</comment>
  </data>
  <data name="GL0046" xml:space="preserve">
    <value>Aperçu des comptes</value>
    <comment>Title</comment>
  </data>
  <data name="GL0047" xml:space="preserve">
    <value>Aperçu devises valides comptes</value>
    <comment>Field</comment>
  </data>
  <data name="GL0048" xml:space="preserve">
    <value>Aperçu livre auxiliaire compte</value>
    <comment>Field</comment>
  </data>
  <data name="GL0407" xml:space="preserve">
    <value>Champs optionnels compte</value>
    <comment>Field</comment>
  </data>
  <data name="GL0408" xml:space="preserve">
    <value>Champs opt cpte de transaction</value>
    <comment>Field</comment>
  </data>
</root>