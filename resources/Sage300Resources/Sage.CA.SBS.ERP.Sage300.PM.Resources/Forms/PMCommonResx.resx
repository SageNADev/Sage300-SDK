<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddEdit" xml:space="preserve">
    <value>Add/Edit</value>
  </data>
  <data name="ARItemNumber" xml:space="preserve">
    <value>A/R Item Number</value>
  </data>
  <data name="ARItemNumberDescription" xml:space="preserve">
    <value>A/R Item Description</value>
  </data>
  <data name="ARUnitOfMeasure" xml:space="preserve">
    <value>A/R Unit Of Measure</value>
  </data>
  <data name="BillingAmount" xml:space="preserve">
    <value>Billing Amount</value>
  </data>
  <data name="BillingRate" xml:space="preserve">
    <value>Billing Rate</value>
  </data>
  <data name="BillingType" xml:space="preserve">
    <value>Billing Type</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="CategoryDescription" xml:space="preserve">
    <value>Category Description</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="Contract" xml:space="preserve">
    <value>Contract</value>
  </data>
  <data name="ContractDescription" xml:space="preserve">
    <value>Contract Description</value>
  </data>
  <data name="CostAccount" xml:space="preserve">
    <value>Cost Account</value>
  </data>
  <data name="CostAccountDescription" xml:space="preserve">
    <value>Cost Account Description</value>
  </data>
  <data name="DateOutOfRange" xml:space="preserve">
    <value>Warning. Date is not within the acceptable range as defined in the company profile. Accept this date?</value>
  </data>
  <data name="DetailOptionalFields" xml:space="preserve">
    <value>Detail Optional Fields</value>
  </data>
  <data name="DocumentNumber" xml:space="preserve">
    <value>Document Number</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ExtendedCost" xml:space="preserve">
    <value>Extended Cost</value>
  </data>
  <data name="ICAccountDescription" xml:space="preserve">
    <value>I/C Account Description</value>
  </data>
  <data name="ItemNumberDescription" xml:space="preserve">
    <value>Item Description</value>
  </data>
  <data name="LineNumber" xml:space="preserve">
    <value>Line Number</value>
  </data>
  <data name="LocationDescription" xml:space="preserve">
    <value>Location Description</value>
  </data>
  <data name="NoLine" xml:space="preserve">
    <value>Line Number {0} does not exist.</value>
  </data>
  <data name="NoRecord" xml:space="preserve">
    <value>{0} {1} does not exist.</value>
  </data>
  <data name="PeriodLocked" xml:space="preserve">
    <value>Date {0} corresponds to period {1} in fiscal year {2}, which is locked for Project and Job Costing in Common Services Fiscal Calendar.</value>
  </data>
  <data name="PartialPeriodLocked" xml:space="preserve">
    <value>which is locked for Project and Job Costing in Common Services Fiscal Calendar.</value>
  </data>
  <data name="PostingDateOverride" xml:space="preserve">
    <value>Posting Date Override</value>
  </data>
  <data name="AssignACategory" xml:space="preserve">
    <value>Assign a Category</value>
  </data>
  <data name="AssignAResource" xml:space="preserve">
    <value>Assign a Resource</value>
  </data>
  <data name="PostInsufficientQty" xml:space="preserve">
    <value>Posting this {0} will reduce the item quantity to below zero at this location. Do you want to proceed?</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="ProjectDescription" xml:space="preserve">
    <value>Project Description</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Resource" xml:space="preserve">
    <value>Resource</value>
  </data>
  <data name="ResourceDescription" xml:space="preserve">
    <value>Resource Description</value>
  </data>
  <data name="TaxAuthority" xml:space="preserve">
    <value>Tax Authority</value>
  </data>
  <data name="TaxAuthorityDescription" xml:space="preserve">
    <value>Tax Authority Description</value>
  </data>
  <data name="TaxClass" xml:space="preserve">
    <value>Tax Class</value>
  </data>
  <data name="TaxClassDescritpion" xml:space="preserve">
    <value>Tax Class Description</value>
  </data>
  <data name="TaxIncluded" xml:space="preserve">
    <value>Tax Included</value>
  </data>
  <data name="UnitCost" xml:space="preserve">
    <value>Unit Cost</value>
  </data>
  <data name="WIPAccount" xml:space="preserve">
    <value>WIP/COS Account</value>
  </data>
  <data name="WIPAccountDescription" xml:space="preserve">
    <value>WIP/COS Account Description</value>
  </data>
  <data name="WorkInProgressAccount" xml:space="preserve">
    <value>Work in Progress Account</value>
  </data>
  <data name="WorkInProgressAccountDescription" xml:space="preserve">
    <value>Work in Progress Account Description</value>
  </data>
  <data name="YearPeriod" xml:space="preserve">
    <value>Year/Period</value>
  </data>
  <data name="PostSuccess" xml:space="preserve">
    <value>Posting completed. {0}: {1}.</value>
  </data>
  <data name="Module" xml:space="preserve">
    <value>PJC</value>
  </data>
  <data name="AddNewLineMessage" xml:space="preserve">
    <value>Do you want to add this detail line?</value>
  </data>
  <data name="SaveChangesMessage" xml:space="preserve">
    <value>Do you want to save changes to this detail line?</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="BillingCurrency" xml:space="preserve">
    <value>Billing Currency</value>
  </data>
  <data name="CostCurrency" xml:space="preserve">
    <value>Cost Currency</value>
  </data>
  <data name="TransactionDateBeforeProjectStartDate" xml:space="preserve">
    <value>The transaction date is before the starting date of the Project.</value>
  </data>
  <data name="TransactionDate" xml:space="preserve">
    <value>Transaction Date</value>
  </data>
  <data name="Expense" xml:space="preserve">
    <value>Expense</value>
  </data>
  <data name="CostOfSalesAccount" xml:space="preserve">
    <value>Cost of Sales Account</value>
  </data>
  <data name="CostOfSalesAccountDescription" xml:space="preserve">
    <value>Cost of Sales Account Description</value>
  </data>
  <data name="EditDetails" xml:space="preserve">
    <value>Edit Details</value>
  </data>
  <data name="ViewDetails" xml:space="preserve">
    <value>View Details</value>
  </data>
  <data name="OptionalFieldValidation" xml:space="preserve">
    <value>Optional field {0} is not defined for this in Project and Job Costing.</value>
  </data>
  <data name="OptionalFieldValueValidation" xml:space="preserve">
    <value>Value {0} does not exist for optional field {1}.</value>
  </data>
  <data name="ExtendedBillingAmount" xml:space="preserve">
    <value>Extended Billing Amount</value>
  </data>
  <data name="CannotLessThanZero" xml:space="preserve">
    <value>cannot be less than zero.</value>
  </data>
  <data name="TaxAuthorityDoesNotAllowIncludedTax" xml:space="preserve">
    <value>Tax authority {0} does not allow included taxes.</value>
  </data>
  <data name="TaxClassDoesNotExist" xml:space="preserve">
    <value>Tax class does not exist for tax authority {0}.</value>
  </data>
  <data name="UOMDoesNotMatch" xml:space="preserve">
    <value>The Unit of Measure specified does not match the Unit of Measure on the {0}.</value>
  </data>
  <data name="CannotDeleteRequiredOptionalField" xml:space="preserve">
    <value>You cannot delete required optional field.</value>
  </data>
  <data name="CannotOpenView" xml:space="preserve">
    <value>Cannot open view </value>
  </data>
  <data name="EquipmentDescription" xml:space="preserve">
    <value>Equipment Description</value>
  </data>
  <data name="ARItem" xml:space="preserve">
    <value>AR Item</value>
  </data>
  <data name="ARUOM" xml:space="preserve">
    <value>ARUOM</value>
  </data>
  <data name="CurrencyDescription" xml:space="preserve">
    <value>Currency Description</value>
  </data>
  <data name="EquipmentDetail" xml:space="preserve">
    <value>Equipment Detail</value>
  </data>
  <data name="ARItemNoDoesNotExist" xml:space="preserve">
    <value>A/R Item No. {0} does not exist.</value>
  </data>
  <data name="UOMNotEntered" xml:space="preserve">
    <value>Unit of Measure not entered or defined for this item.</value>
  </data>
  <data name="IsNotAValidCurrencyCode" xml:space="preserve">
    <value>{0} is not a valid currency code.</value>
  </data>
  <data name="CannotBeLessThanZero" xml:space="preserve">
    <value>{0} cannot be less than zero.</value>
  </data>
  <data name="YouCannotDeleteAnEquipmentCode" xml:space="preserve">
    <value>You cannot delete an equipment code that is assigned to a {0}.</value>
  </data>
  <data name="ProjectSectionText" xml:space="preserve">
    <value>Default Settings for Standard {0}</value>
  </data>
  <data name="PJCEquipment" xml:space="preserve">
    <value>PJC Equipment</value>
  </data>
  <data name="AdjustmentType" xml:space="preserve">
    <value>Adjustment Type</value>
  </data>
  <data name="Adjustment" xml:space="preserve">
    <value>Adjustment</value>
  </data>
  <data name="Transfer" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="AP" xml:space="preserve">
    <value>A/P Only</value>
  </data>
  <data name="AR" xml:space="preserve">
    <value>A/R Only</value>
  </data>
  <data name="CP" xml:space="preserve">
    <value>Canadian Payroll Only</value>
  </data>
  <data name="IC" xml:space="preserve">
    <value>I/C Only</value>
  </data>
  <data name="OE" xml:space="preserve">
    <value>O/E Only</value>
  </data>
  <data name="PM" xml:space="preserve">
    <value>PJC Only</value>
  </data>
  <data name="PO" xml:space="preserve">
    <value>P/O Only</value>
  </data>
  <data name="UP" xml:space="preserve">
    <value>US Payroll Only</value>
  </data>
  <data name="CheckInquiry" xml:space="preserve">
    <value>Cheque Inquiry</value>
  </data>
  <data name="MiscellaneousCode" xml:space="preserve">
    <value>Miscellaneous Code</value>
  </data>
  <data name="InvalidLength" xml:space="preserve">
    <value>{0} must be {1} characters long</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>You cannot delete the default {0} structure.</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>WebSite</value>
  </data>
  <data name="OverheadCode" xml:space="preserve">
    <value>Overhead Code</value>
  </data>
  <data name="ChargesCode" xml:space="preserve">
    <value>Charges Code</value>
  </data>
  <data name="SourceCodes" xml:space="preserve">
    <value>Source Codes</value>
  </data>
</root>