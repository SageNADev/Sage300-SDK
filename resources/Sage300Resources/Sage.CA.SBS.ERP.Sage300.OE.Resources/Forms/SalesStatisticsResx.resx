<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AUIAverageCap" xml:space="preserve">
    <value>Average</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUIAvgSalesLostCap" xml:space="preserve">
    <value>Average Sales Lost</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUICreditNoteCustCurrCap" xml:space="preserve">
    <value>Credit Notes Customer Currency</value>
    <comment>Table Column</comment>
  </data>
  <data name="AUICreditNoteFuncCurrCap" xml:space="preserve">
    <value>Credit Notes Functional Currency</value>
    <comment>Table Column</comment>
  </data>
  <data name="AUIDebitNoteCustCurrCap" xml:space="preserve">
    <value>Debit Notes Customer Currency</value>
    <comment>Table Column</comment>
  </data>
  <data name="AUIDebitNoteFuncCurrCap" xml:space="preserve">
    <value>Debit Notes Functional Currency</value>
    <comment>Table Column</comment>
  </data>
  <data name="AUIErrInvalidPeriodRangeMessage" xml:space="preserve">
    <value>Select a valid Fiscal Period.</value>
    <comment>Error</comment>
  </data>
  <data name="AUIErrInvalidYearMessage" xml:space="preserve">
    <value>Fiscal Year is inactive.</value>
    <comment>Error</comment>
  </data>
  <data name="AUIInvoicesCrdNotes" xml:space="preserve">
    <value>Invoices, Credit Notes, and Debit Notes</value>
    <comment>Table header</comment>
  </data>
  <data name="AUIInvoicesCustCurrCap" xml:space="preserve">
    <value>Invoices Customer Currency</value>
    <comment>Table Column</comment>
  </data>
  <data name="AUIInvoicesFuncCurrCap" xml:space="preserve">
    <value>Invoices Functional Currency</value>
    <comment>Table Column</comment>
  </data>
  <data name="AUILargestCap" xml:space="preserve">
    <value>Largest</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUIlblSalesCap" xml:space="preserve">
    <value>Sales</value>
    <comment>Table header</comment>
  </data>
  <data name="AUINetInvAmtCap" xml:space="preserve">
    <value>Net Invoice Amount</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUINetQtySoldCap" xml:space="preserve">
    <value>Net Quantity Sold</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUINetSalesAmtCap" xml:space="preserve">
    <value>Net Sales Amount</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUINoOfOrdersCap" xml:space="preserve">
    <value>Number of Orders</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUINumberCap" xml:space="preserve">
    <value>Number</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUISmallestCap" xml:space="preserve">
    <value>Smallest</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUITotSalesLostCap" xml:space="preserve">
    <value>Total Sales Lost</value>
    <comment>Table Row</comment>
  </data>
  <data name="AUIWarnMsgAddMC" xml:space="preserve">
    <value>Add sales statistics for year {0}, period {1}, and currency {2}?</value>
    <comment>Message</comment>
  </data>
  <data name="AUIWarnMsgAddSC" xml:space="preserve">
    <value>Add sales statistics for year {0}, period {1}?</value>
    <comment>Message</comment>
  </data>
  <data name="AUIWarnMsgDeleteMC" xml:space="preserve">
    <value>Delete statistics for year {0}, period {1}, and currency {2}?</value>
    <comment>Message</comment>
  </data>
  <data name="AUIWarnMsgDeleteSC" xml:space="preserve">
    <value>Delete statistics for year {0}, period {1}?</value>
    <comment>Message</comment>
  </data>
  <data name="AUIWarnMsgSaveMC" xml:space="preserve">
    <value>Save changes to sales statistics for year {0}, period {1}, and currency {2}?</value>
    <comment>Message</comment>
  </data>
  <data name="AUIWarnMsgSaveSC" xml:space="preserve">
    <value>Save changes to sales statistics for year {0}, period {1}?</value>
    <comment>Message</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>O/E Sales Statistics</value>
    <comment>Screen Title</comment>
  </data>
  <data name="InvalidYear" xml:space="preserve">
    <value>Cannot find Year {0}.</value>
    <comment>Error</comment>
  </data>
  <data name="OE0700" xml:space="preserve">
    <value>Sales Statistics</value>
    <comment>Import/Export</comment>
  </data>
  <data name="InvalidCurrency" xml:space="preserve">
    <value>Cannot find the specified Currency Code.</value>
    <comment>Error</comment>
  </data>
  <data name="InvoiceCrtDbNotes" xml:space="preserve">
    <value>Invoices and Credit/Debit Notes</value>
    <comment>Import/Export</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Are you sure you want to delete the sales statistics?</value>
    <comment>Confirmation</comment>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Deleted successfully.</value>
    <comment>Success</comment>
  </data>
  <data name="AverageCreditNoteFunc" xml:space="preserve">
    <value>Average Credit Note Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AverageCreditNoteSrce" xml:space="preserve">
    <value>Average Credit Note Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AverageDebitNoteFunc" xml:space="preserve">
    <value>Average Debit Note Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AverageDebitNoteSrce" xml:space="preserve">
    <value>Average Debit Note Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AverageInvoiceFunc" xml:space="preserve">
    <value>Average Invoice Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AverageInvoiceSrce" xml:space="preserve">
    <value>Average Invoice Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AverageSalesLostFunc" xml:space="preserve">
    <value>Average Sales Lost Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="AverageSalesLostSrce" xml:space="preserve">
    <value>Average Sales Lost Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="CostOfSalesFunc" xml:space="preserve">
    <value>Cost of Sales Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="CostOfSalesSrce" xml:space="preserve">
    <value>Cost of Sales Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="CustomerLargestCreditNote" xml:space="preserve">
    <value>Customer Largest Credit Note</value>
    <comment>Import/Export</comment>
  </data>
  <data name="CustomerLargestDebitNote" xml:space="preserve">
    <value>Customer Largest Debit Note</value>
    <comment>Import/Export</comment>
  </data>
  <data name="CustomerLargestInvoice" xml:space="preserve">
    <value>Customer Largest Invoice</value>
    <comment>Import/Export</comment>
  </data>
  <data name="CustomerSmallestCreditNote" xml:space="preserve">
    <value>Customer Smallest Credit Note</value>
    <comment>Import/Export</comment>
  </data>
  <data name="CustomerSmallestDebitNote" xml:space="preserve">
    <value>Customer Smallest Debit Note</value>
    <comment>Import/Export</comment>
  </data>
  <data name="CustomerSmallestInvoice" xml:space="preserve">
    <value>Customer Smallest Invoice</value>
    <comment>Import/Export</comment>
  </data>
  <data name="LargestCreditNoteFunc" xml:space="preserve">
    <value>Largest Credit Note Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="LargestCreditNoteSrce" xml:space="preserve">
    <value>Largest Credit Note Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="LargestDebitNoteFunc" xml:space="preserve">
    <value>Largest Debit Note Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="LargestDebitNoteSrce" xml:space="preserve">
    <value>Largest Debit Note Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="LargestInvoiceFunc" xml:space="preserve">
    <value>Largest Invoice Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="LargestInvoiceSrce" xml:space="preserve">
    <value>Largest Invoice Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="MarginFunc" xml:space="preserve">
    <value>Margin Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="MarginSrce" xml:space="preserve">
    <value>Margin Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="NetInvoiceAmountFunc" xml:space="preserve">
    <value>Net Invoice Amount Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="NetInvoiceAmountSrce" xml:space="preserve">
    <value>Net Invoice Amount Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="NetSalesAmountFunc" xml:space="preserve">
    <value>Net Sales Amount Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="NetSalesAmountSrce" xml:space="preserve">
    <value>Net Sales Amount Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="NumberOfCreditNotes" xml:space="preserve">
    <value>Number of Credit Notes</value>
    <comment>Import/Export</comment>
  </data>
  <data name="NumberOfDebitNotes" xml:space="preserve">
    <value>Number of Debit Notes</value>
    <comment>Import/Export</comment>
  </data>
  <data name="NumberOfInvoices" xml:space="preserve">
    <value>Number of Invoices</value>
    <comment>Import/Export</comment>
  </data>
  <data name="SmallestCreditNoteFunc" xml:space="preserve">
    <value>Smallest Credit Note Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="SmallestCreditNoteSrce" xml:space="preserve">
    <value>Smallest Credit Note Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="SmallestDebitNoteFunc" xml:space="preserve">
    <value>Smallest Debit Note Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="SmallestDebitNoteSrce" xml:space="preserve">
    <value>Smallest Debit Note Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="SmallestInvoiceFunc" xml:space="preserve">
    <value>Smallest Invoice Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="SmallestInvoiceSrce" xml:space="preserve">
    <value>Smallest Invoice Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="TotalSalesLostFunc" xml:space="preserve">
    <value>Total Sales Lost Functional Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="TotalSalesLostSrce" xml:space="preserve">
    <value>Total Sales Lost Customer Currency</value>
    <comment>Import/Export</comment>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Detail</value>
    <comment>Import/Export</comment>
  </data>
</root>