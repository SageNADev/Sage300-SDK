<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreditDebitNoteDetails" xml:space="preserve">
    <value>Détails de note crédit/débit</value>
    <comment>Field</comment>
  </data>
  <data name="CreditDebitNotes" xml:space="preserve">
    <value>Notes crédit/débit</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultValueMessage" xml:space="preserve">
    <value>Valeur par défaut champ optionnel {0}</value>
    <comment>Added</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Champs optionnels de CmC</value>
    <comment>Screen Title</comment>
  </data>
  <data name="InvoiceDetails" xml:space="preserve">
    <value>Détails de facture</value>
    <comment>Field</comment>
  </data>
  <data name="Invoices" xml:space="preserve">
    <value>Factures</value>
    <comment>Field</comment>
  </data>
  <data name="MiscellaneousCharges" xml:space="preserve">
    <value>Frais divers</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalField" xml:space="preserve">
    <value>Champ optionnel</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldsFor" xml:space="preserve">
    <value>Champs optionnels pour</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldValues" xml:space="preserve">
    <value>Valeurs de champs optionnels</value>
    <comment>Table Column</comment>
  </data>
  <data name="OrderDetails" xml:space="preserve">
    <value>Détails de commande</value>
    <comment>Field</comment>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Commandes</value>
    <comment>Field</comment>
  </data>
  <data name="ShipmentDetails" xml:space="preserve">
    <value>Détails d'expédition</value>
    <comment>Field</comment>
  </data>
  <data name="Shipments" xml:space="preserve">
    <value>Expéditions</value>
    <comment>Field</comment>
  </data>
  <data name="AccountsReceivable" xml:space="preserve">
    <value>Comptes clients</value>
    <comment>Field</comment>
  </data>
  <data name="ARDetailGLAccounts" xml:space="preserve">
    <value>Comptes GL détail de Comptes clients</value>
    <comment>Option</comment>
  </data>
  <data name="ARInvoicesOptionalFields" xml:space="preserve">
    <value>Champs optionnels factures de CC</value>
    <comment>Field</comment>
  </data>
  <data name="CostVariance" xml:space="preserve">
    <value>Écart des coûts</value>
    <comment>Field</comment>
  </data>
  <data name="CreditDebitNoteClearing" xml:space="preserve">
    <value>Note crédit/débit / Compte attente frais divers</value>
    <comment>Field</comment>
  </data>
  <data name="DamagedGoods" xml:space="preserve">
    <value>Marchandises endommagées</value>
    <comment>Field</comment>
  </data>
  <data name="InventoryControlSetting" xml:space="preserve">
    <value>Gestion des stocks/Compte coût frais divers</value>
    <comment>Field</comment>
  </data>
  <data name="Labor" xml:space="preserve">
    <value>Main d'œuvre</value>
    <comment>Field</comment>
  </data>
  <data name="NonStockClearingSetting" xml:space="preserve">
    <value>Compte attente hors stock</value>
    <comment>Field</comment>
  </data>
  <data name="Overhead" xml:space="preserve">
    <value>Coûts indirects</value>
    <comment>Field</comment>
  </data>
  <data name="Returns" xml:space="preserve">
    <value>Retours</value>
    <comment>Field</comment>
  </data>
  <data name="SalesShipmentClearingCOGS" xml:space="preserve">
    <value>Ventes/Compte attente expédition/CMV</value>
    <comment>Field</comment>
  </data>
  <data name="SettingsDescription" xml:space="preserve">
    <value>Ces paramètres déterminent si ce champ optionnel est inclus dans les transactions du Grand livre et dans les transactions envoyées à d'autres grands livres auxiliaires.</value>
    <comment>Instruction</comment>
  </data>
  <data name="ShipmentSetting" xml:space="preserve">
    <value>Compte attente expédition/frais divers</value>
    <comment>Field</comment>
  </data>
  <data name="AllowBlank" xml:space="preserve">
    <value>Autoriser les blancs</value>
    <comment>Option</comment>
  </data>
  <data name="AutoInsert" xml:space="preserve">
    <value>À insérer</value>
    <comment>Table Column</comment>
  </data>
  <data name="CreditDebitClearing" xml:space="preserve">
    <value>Compte attente note crédit/débit</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultDateValue" xml:space="preserve">
    <value>Valeur date par défaut</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultIntegerValue" xml:space="preserve">
    <value>Valeur nombre entier par défaut</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultMoneyValue" xml:space="preserve">
    <value>Valeur montant implicite</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultNumberValue" xml:space="preserve">
    <value>Valeur nombre par défaut</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultTextValue" xml:space="preserve">
    <value>Valeur texte par défaut</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultTimeValue" xml:space="preserve">
    <value>Valeur heure par défaut</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultValue" xml:space="preserve">
    <value>Valeur par défaut</value>
    <comment>Table Column</comment>
  </data>
  <data name="DefaultValueDescription" xml:space="preserve">
    <value>Description valeur par défaut</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultYesNoValue" xml:space="preserve">
    <value>Valeur Oui/Non par défaut</value>
    <comment>Field</comment>
  </data>
  <data name="ExternalCostTransactions" xml:space="preserve">
    <value>Transactions coût externe</value>
    <comment>Field</comment>
  </data>
  <data name="InventoryControl" xml:space="preserve">
    <value>Gestion des stocks</value>
    <comment>Field</comment>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Longueur</value>
    <comment>Field</comment>
  </data>
  <data name="NumberOfValues" xml:space="preserve">
    <value>Nombre de valeurs</value>
    <comment>Field</comment>
  </data>
  <data name="OE0470" xml:space="preserve">
    <value>Champs optionnels</value>
    <comment>Field</comment>
  </data>
  <data name="OE0475" xml:space="preserve">
    <value>Emplacements champ optionnel</value>
    <comment>Field</comment>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Requis</value>
    <comment>Field</comment>
  </data>
  <data name="ShipmentClearing" xml:space="preserve">
    <value>Compte d'attente expédition</value>
    <comment>Field</comment>
  </data>
  <data name="TypedDefaultValueFieldIndex" xml:space="preserve">
    <value>Index champ valeur saisie par défaut</value>
    <comment>Field</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>Valeur définie</value>
    <comment>Table Column</comment>
  </data>
  <data name="OptionalFieldValue" xml:space="preserve">
    <value>Valeur champ optionnel</value>
    <comment>Field</comment>
  </data>
  <data name="Validate" xml:space="preserve">
    <value>Valider</value>
    <comment>Field</comment>
  </data>
  <data name="Decimals" xml:space="preserve">
    <value>Décimales</value>
    <comment>Field</comment>
  </data>
  <data name="Integer" xml:space="preserve">
    <value>Nombre entier</value>
    <comment>Field</comment>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Numéro</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldDescription" xml:space="preserve">
    <value>Description champ optionnel</value>
    <comment>Table Column</comment>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Texte</value>
    <comment>Field</comment>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Heure</value>
    <comment>Field</comment>
  </data>
  <data name="YesNo" xml:space="preserve">
    <value>Oui/Non</value>
    <comment>Field</comment>
  </data>
</root>