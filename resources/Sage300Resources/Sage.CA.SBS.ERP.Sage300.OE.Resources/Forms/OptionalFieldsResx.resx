<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreditDebitNoteDetails" xml:space="preserve">
    <value>Credit/Debit Note Details</value>
    <comment>Field</comment>
  </data>
  <data name="CreditDebitNotes" xml:space="preserve">
    <value>Credit/Debit Notes</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultValueMessage" xml:space="preserve">
    <value>Optional Field {0} Default Value</value>
    <comment>Added</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>O/E Optional Fields</value>
    <comment>Screen Title</comment>
  </data>
  <data name="InvoiceDetails" xml:space="preserve">
    <value>Invoice Details</value>
    <comment>Field</comment>
  </data>
  <data name="Invoices" xml:space="preserve">
    <value>Invoices</value>
    <comment>Field</comment>
  </data>
  <data name="MiscellaneousCharges" xml:space="preserve">
    <value>Miscellaneous Charges</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalField" xml:space="preserve">
    <value>Optional Field</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldsFor" xml:space="preserve">
    <value>Optional Fields For</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldValues" xml:space="preserve">
    <value>Optional Field Values</value>
    <comment>Table Column</comment>
  </data>
  <data name="OrderDetails" xml:space="preserve">
    <value>Order Details</value>
    <comment>Field</comment>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
    <comment>Field</comment>
  </data>
  <data name="ShipmentDetails" xml:space="preserve">
    <value>Shipment Details</value>
    <comment>Field</comment>
  </data>
  <data name="Shipments" xml:space="preserve">
    <value>Shipments</value>
    <comment>Field</comment>
  </data>
  <data name="AccountsReceivable" xml:space="preserve">
    <value>Accounts Receivable</value>
    <comment>Field</comment>
  </data>
  <data name="ARDetailGLAccounts" xml:space="preserve">
    <value>Accounts Receivable Detail G/L Accounts</value>
    <comment>Option</comment>
  </data>
  <data name="ARInvoicesOptionalFields" xml:space="preserve">
    <value>A/R Invoices Optional Fields</value>
    <comment>Field</comment>
  </data>
  <data name="CostVariance" xml:space="preserve">
    <value>Cost Variance</value>
    <comment>Field</comment>
  </data>
  <data name="CreditDebitNoteClearing" xml:space="preserve">
    <value>Credit/Debit Note / Miscellaneous Charge Clearing</value>
    <comment>Field</comment>
  </data>
  <data name="DamagedGoods" xml:space="preserve">
    <value>Damaged Goods</value>
    <comment>Field</comment>
  </data>
  <data name="InventoryControlSetting" xml:space="preserve">
    <value>Inventory Control/Miscellaneous Charge Cost</value>
    <comment>Field</comment>
  </data>
  <data name="Labor" xml:space="preserve">
    <value>Labor</value>
    <comment>Field</comment>
  </data>
  <data name="NonStockClearingSetting" xml:space="preserve">
    <value>Non-Stock Clearing</value>
    <comment>Field</comment>
  </data>
  <data name="Overhead" xml:space="preserve">
    <value>Overhead</value>
    <comment>Field</comment>
  </data>
  <data name="Returns" xml:space="preserve">
    <value>Returns</value>
    <comment>Field</comment>
  </data>
  <data name="SalesShipmentClearingCOGS" xml:space="preserve">
    <value>Sales/Shipment Clearing/COGS</value>
    <comment>Field</comment>
  </data>
  <data name="SettingsDescription" xml:space="preserve">
    <value>These settings determine whether this optional field is included with General Ledger transaction and with transactions sent to other subledgers.</value>
    <comment>Instruction</comment>
  </data>
  <data name="ShipmentSetting" xml:space="preserve">
    <value>Shipment/Miscellaneous Charge Clearing</value>
    <comment>Field</comment>
  </data>
  <data name="AllowBlank" xml:space="preserve">
    <value>Allow Blank</value>
    <comment>Option</comment>
  </data>
  <data name="AutoInsert" xml:space="preserve">
    <value>Auto Insert</value>
    <comment>Table Column</comment>
  </data>
  <data name="CreditDebitClearing" xml:space="preserve">
    <value>Credit/Debit Note Clearing</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultDateValue" xml:space="preserve">
    <value>Default Date Value</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultIntegerValue" xml:space="preserve">
    <value>Default Integer Value</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultMoneyValue" xml:space="preserve">
    <value>Default Money Value</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultNumberValue" xml:space="preserve">
    <value>Default Number Value</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultTextValue" xml:space="preserve">
    <value>Default Text Value</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultTimeValue" xml:space="preserve">
    <value>Default Time Value</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultValue" xml:space="preserve">
    <value>Default Value</value>
    <comment>Table Column</comment>
  </data>
  <data name="DefaultValueDescription" xml:space="preserve">
    <value>Default Value Description</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultYesNoValue" xml:space="preserve">
    <value>Default Yes/No Value</value>
    <comment>Field</comment>
  </data>
  <data name="ExternalCostTransactions" xml:space="preserve">
    <value>External Cost Transactions</value>
    <comment>Field</comment>
  </data>
  <data name="InventoryControl" xml:space="preserve">
    <value>Inventory Control</value>
    <comment>Field</comment>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Length</value>
    <comment>Field</comment>
  </data>
  <data name="NumberOfValues" xml:space="preserve">
    <value>Number of Values</value>
    <comment>Field</comment>
  </data>
  <data name="OE0470" xml:space="preserve">
    <value>Optional Fields</value>
    <comment>Field</comment>
  </data>
  <data name="OE0475" xml:space="preserve">
    <value>Optional Field Locations</value>
    <comment>Field</comment>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
    <comment>Field</comment>
  </data>
  <data name="ShipmentClearing" xml:space="preserve">
    <value>Shipment Clearing</value>
    <comment>Field</comment>
  </data>
  <data name="TypedDefaultValueFieldIndex" xml:space="preserve">
    <value>Typed Default Value Field Index</value>
    <comment>Field</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>Value Set</value>
    <comment>Table Column</comment>
  </data>
  <data name="OptionalFieldValue" xml:space="preserve">
    <value>Optional Field Value</value>
    <comment>Field</comment>
  </data>
  <data name="Validate" xml:space="preserve">
    <value>Validate</value>
    <comment>Field</comment>
  </data>
  <data name="Decimals" xml:space="preserve">
    <value>Decimals</value>
    <comment>Field</comment>
  </data>
  <data name="Integer" xml:space="preserve">
    <value>Integer</value>
    <comment>Field</comment>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldDescription" xml:space="preserve">
    <value>Optional Field Description</value>
    <comment>Table Column</comment>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
    <comment>Field</comment>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
    <comment>Field</comment>
  </data>
  <data name="YesNo" xml:space="preserve">
    <value>Yes/No</value>
    <comment>Field</comment>
  </data>
</root>