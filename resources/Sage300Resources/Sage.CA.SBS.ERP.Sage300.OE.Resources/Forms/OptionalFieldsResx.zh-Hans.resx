<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreditDebitNoteDetails" xml:space="preserve">
    <value>贷项/借项通知单明细</value>
    <comment>Field</comment>
  </data>
  <data name="CreditDebitNotes" xml:space="preserve">
    <value>贷项/借项通知单</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultValueMessage" xml:space="preserve">
    <value>可选字段{0}默认值</value>
    <comment>Added</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>销售订单可选字段</value>
    <comment>Screen Title</comment>
  </data>
  <data name="InvoiceDetails" xml:space="preserve">
    <value>发票明细</value>
    <comment>Field</comment>
  </data>
  <data name="Invoices" xml:space="preserve">
    <value>发票</value>
    <comment>Field</comment>
  </data>
  <data name="MiscellaneousCharges" xml:space="preserve">
    <value>杂项收费</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalField" xml:space="preserve">
    <value>可选字段</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldsFor" xml:space="preserve">
    <value>可选字段属于</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldValues" xml:space="preserve">
    <value>可选字段值</value>
    <comment>Table Column</comment>
  </data>
  <data name="OrderDetails" xml:space="preserve">
    <value>销货单明细</value>
    <comment>Field</comment>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>销货单</value>
    <comment>Field</comment>
  </data>
  <data name="ShipmentDetails" xml:space="preserve">
    <value>发货明细</value>
    <comment>Field</comment>
  </data>
  <data name="Shipments" xml:space="preserve">
    <value>发货</value>
    <comment>Field</comment>
  </data>
  <data name="AccountsReceivable" xml:space="preserve">
    <value>应收帐款</value>
    <comment>Field</comment>
  </data>
  <data name="ARDetailGLAccounts" xml:space="preserve">
    <value>应收帐款明细总帐科目</value>
    <comment>Option</comment>
  </data>
  <data name="ARInvoicesOptionalFields" xml:space="preserve">
    <value>应收帐款发票可选字段</value>
    <comment>Field</comment>
  </data>
  <data name="CostVariance" xml:space="preserve">
    <value>成本差异</value>
    <comment>Field</comment>
  </data>
  <data name="CreditDebitNoteClearing" xml:space="preserve">
    <value>贷项/借项通知单/杂项收费清算</value>
    <comment>Field</comment>
  </data>
  <data name="DamagedGoods" xml:space="preserve">
    <value>损坏的货物</value>
    <comment>Field</comment>
  </data>
  <data name="InventoryControlSetting" xml:space="preserve">
    <value>存货控制杂项收费成本</value>
    <comment>Field</comment>
  </data>
  <data name="Labor" xml:space="preserve">
    <value>劳务</value>
    <comment>Field</comment>
  </data>
  <data name="NonStockClearingSetting" xml:space="preserve">
    <value>非库存清算</value>
    <comment>Field</comment>
  </data>
  <data name="Overhead" xml:space="preserve">
    <value>间接费用</value>
    <comment>Field</comment>
  </data>
  <data name="Returns" xml:space="preserve">
    <value>退货</value>
    <comment>Field</comment>
  </data>
  <data name="SalesShipmentClearingCOGS" xml:space="preserve">
    <value>销售/发货清算/销货成本</value>
    <comment>Field</comment>
  </data>
  <data name="SettingsDescription" xml:space="preserve">
    <value>这些设置决定了这一可选字段是否包括在总帐交易和发送到其它分类帐的交易中。</value>
    <comment>Instruction</comment>
  </data>
  <data name="ShipmentSetting" xml:space="preserve">
    <value>发货/杂项收费清算</value>
    <comment>Field</comment>
  </data>
  <data name="AllowBlank" xml:space="preserve">
    <value>允许空置</value>
    <comment>Option</comment>
  </data>
  <data name="AutoInsert" xml:space="preserve">
    <value>自动插入</value>
    <comment>Table Column</comment>
  </data>
  <data name="CreditDebitClearing" xml:space="preserve">
    <value>贷项/借项通知单清算</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultDateValue" xml:space="preserve">
    <value>默认日期值</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultIntegerValue" xml:space="preserve">
    <value>默认整数值</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultMoneyValue" xml:space="preserve">
    <value>默认金额值</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultNumberValue" xml:space="preserve">
    <value>默认数字值</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultTextValue" xml:space="preserve">
    <value>默认文本值</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultTimeValue" xml:space="preserve">
    <value>默认时间值</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultValue" xml:space="preserve">
    <value>默认值</value>
    <comment>Table Column</comment>
  </data>
  <data name="DefaultValueDescription" xml:space="preserve">
    <value>默认值描述</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultYesNoValue" xml:space="preserve">
    <value>默认是/否值</value>
    <comment>Field</comment>
  </data>
  <data name="ExternalCostTransactions" xml:space="preserve">
    <value>外部成本交易</value>
    <comment>Field</comment>
  </data>
  <data name="InventoryControl" xml:space="preserve">
    <value>存货控制</value>
    <comment>Field</comment>
  </data>
  <data name="Length" xml:space="preserve">
    <value>长度</value>
    <comment>Field</comment>
  </data>
  <data name="NumberOfValues" xml:space="preserve">
    <value>值数目</value>
    <comment>Field</comment>
  </data>
  <data name="OE0470" xml:space="preserve">
    <value>可选字段</value>
    <comment>Field</comment>
  </data>
  <data name="OE0475" xml:space="preserve">
    <value>可选字段地点</value>
    <comment>Field</comment>
  </data>
  <data name="Required" xml:space="preserve">
    <value>必需</value>
    <comment>Field</comment>
  </data>
  <data name="ShipmentClearing" xml:space="preserve">
    <value>发货清算</value>
    <comment>Field</comment>
  </data>
  <data name="TypedDefaultValueFieldIndex" xml:space="preserve">
    <value>键入的默认值字段索引</value>
    <comment>Field</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>值已设</value>
    <comment>Table Column</comment>
  </data>
  <data name="OptionalFieldValue" xml:space="preserve">
    <value>可选字段值</value>
    <comment>Field</comment>
  </data>
  <data name="Validate" xml:space="preserve">
    <value>验证</value>
    <comment>Field</comment>
  </data>
  <data name="Decimals" xml:space="preserve">
    <value>小数位数</value>
    <comment>Field</comment>
  </data>
  <data name="Integer" xml:space="preserve">
    <value>整数</value>
    <comment>Field</comment>
  </data>
  <data name="Number" xml:space="preserve">
    <value>编号</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldDescription" xml:space="preserve">
    <value>可选字段描述</value>
    <comment>Table Column</comment>
  </data>
  <data name="Text" xml:space="preserve">
    <value>文本</value>
    <comment>Field</comment>
  </data>
  <data name="Time" xml:space="preserve">
    <value>时间</value>
    <comment>Field</comment>
  </data>
  <data name="YesNo" xml:space="preserve">
    <value>是/否</value>
    <comment>Field</comment>
  </data>
</root>