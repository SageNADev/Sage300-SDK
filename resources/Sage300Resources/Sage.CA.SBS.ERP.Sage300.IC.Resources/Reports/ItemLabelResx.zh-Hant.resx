<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Browse" xml:space="preserve">
    <value>瀏覽…</value>
    <comment>Button</comment>
  </data>
  <data name="Color" xml:space="preserve">
    <value>顏色</value>
    <comment>List Item</comment>
  </data>
  <data name="DangerousItem" xml:space="preserve">
    <value>危險產品</value>
    <comment>List Item</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存貨控制產品標籤</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ExtendedWarrantyAvailable" xml:space="preserve">
    <value>延展保修可用</value>
    <comment>List Item</comment>
  </data>
  <data name="ForEachItem" xml:space="preserve">
    <value>對每個</value>
    <comment>List</comment>
  </data>
  <data name="ItemINSTOCK" xml:space="preserve">
    <value>已庫存產品</value>
    <comment>List Item</comment>
  </data>
  <data name="ItemLeadTime" xml:space="preserve">
    <value>產品交貨時間</value>
    <comment>List Item</comment>
  </data>
  <data name="ItemNONSTOCK" xml:space="preserve">
    <value>非庫存</value>
    <comment>List Item</comment>
  </data>
  <data name="ItemONFILE" xml:space="preserve">
    <value>已記錄產品</value>
    <comment>List Item</comment>
  </data>
  <data name="ItemProcurement" xml:space="preserve">
    <value>產品採購</value>
    <comment>List Item</comment>
  </data>
  <data name="ItemRECEIVED" xml:space="preserve">
    <value>已進貨</value>
    <comment>List Item</comment>
  </data>
  <data name="ItemsColor" xml:space="preserve">
    <value>產品顏色</value>
    <comment>List Item</comment>
  </data>
  <data name="ItemSize" xml:space="preserve">
    <value>產品尺寸</value>
    <comment>List Item</comment>
  </data>
  <data name="ItemType" xml:space="preserve">
    <value>產品類型</value>
    <comment>List Item</comment>
  </data>
  <data name="ItemVolume" xml:space="preserve">
    <value>產品量</value>
    <comment>List Item</comment>
  </data>
  <data name="Long" xml:space="preserve">
    <value>長</value>
    <comment>List Item</comment>
  </data>
  <data name="Manufacturer" xml:space="preserve">
    <value>製造商</value>
    <comment>List Item</comment>
  </data>
  <data name="ManufacturerNumber" xml:space="preserve">
    <value>製造商編號</value>
    <comment>List Item</comment>
  </data>
  <data name="Model" xml:space="preserve">
    <value>型號</value>
    <comment>List Item</comment>
  </data>
  <data name="NewItem" xml:space="preserve">
    <value>新產品</value>
    <comment>List Item</comment>
  </data>
  <data name="NoLblToPrint" xml:space="preserve">
    <value>指定範圍內沒有記錄。</value>
    <comment>Error</comment>
  </data>
  <data name="Price" xml:space="preserve">
    <value>價格</value>
    <comment>List Item</comment>
  </data>
  <data name="PrintLabelOk" xml:space="preserve">
    <value>標籤是否列印成功？</value>
    <comment>Message</comment>
  </data>
  <data name="Reprint" xml:space="preserve">
    <value>重新列印已列印的產品</value>
    <comment>Check Box</comment>
  </data>
  <data name="Series" xml:space="preserve">
    <value>系列</value>
    <comment>List Item</comment>
  </data>
  <data name="Style" xml:space="preserve">
    <value>樣式</value>
    <comment>List Item</comment>
  </data>
  <data name="Warranty" xml:space="preserve">
    <value>保修</value>
    <comment>List Item</comment>
  </data>
  <data name="WarrantyPeriod" xml:space="preserve">
    <value>保修期間</value>
    <comment>List Item</comment>
  </data>
  <data name="PrintLabel" xml:space="preserve">
    <value>列印標籤</value>
    <comment>Label</comment>
  </data>
  <data name="InventoryManufacturedItemMessage" xml:space="preserve">
    <value>產品{0}作為{1}存在於存貨中，但也是{2}的一個製造商產品編號。如果您輸入{0}，{2}將不會被自動選擇。</value>
    <comment>Message</comment>
  </data>
</root>