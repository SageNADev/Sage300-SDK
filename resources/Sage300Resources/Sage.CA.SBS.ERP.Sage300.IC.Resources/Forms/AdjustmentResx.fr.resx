<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjustmentDate" xml:space="preserve">
    <value>Date ajustement</value>
    <comment>Field</comment>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>Saisi par</value>
    <comment>Field</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Ajustements de GS</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FromPhysicalInventory" xml:space="preserve">
    <value>D'inventaire physique</value>
    <comment>Field</comment>
  </data>
  <data name="ICUniqueDocumentNumber" xml:space="preserve">
    <value>Numéro document unique de GS</value>
    <comment>Field</comment>
  </data>
  <data name="JobRelated" xml:space="preserve">
    <value>Tâche connexe</value>
    <comment>Field</comment>
  </data>
  <data name="NextDetailLineNumber" xml:space="preserve">
    <value>Prochain numéro ligne de détail</value>
    <comment>Field</comment>
  </data>
  <data name="PMAdjustmentNumber" xml:space="preserve">
    <value>Numéro ajustement de GP</value>
    <comment>Field</comment>
  </data>
  <data name="PostingDate" xml:space="preserve">
    <value>Date de report</value>
    <comment>Field</comment>
  </data>
  <data name="PostSequenceNumber" xml:space="preserve">
    <value>Numéro séquence de report</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommand" xml:space="preserve">
    <value>Traiter opération</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandLocation" xml:space="preserve">
    <value>Traiter opération emplacement</value>
    <comment>Field</comment>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>Enregistrement supprimé</value>
    <comment>Field</comment>
  </data>
  <data name="RecordPrinted" xml:space="preserve">
    <value>Enregistrement imprimé</value>
    <comment>Field</comment>
  </data>
  <data name="RecordStatus" xml:space="preserve">
    <value>État enregistrement</value>
    <comment>Field</comment>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>Numéro transaction</value>
    <comment>Field</comment>
  </data>
  <data name="BothDecrease" xml:space="preserve">
    <value>Baisse des deux</value>
    <comment>Field</comment>
  </data>
  <data name="BothIncrease" xml:space="preserve">
    <value>Hausse des deux</value>
    <comment>Field</comment>
  </data>
  <data name="CostDecrease" xml:space="preserve">
    <value>Baisse du coût</value>
    <comment>Field</comment>
  </data>
  <data name="CostIncrease" xml:space="preserve">
    <value>Hausse du coût</value>
    <comment>Field</comment>
  </data>
  <data name="OffsetBucket" xml:space="preserve">
    <value>Lot écart</value>
    <comment>Field</comment>
  </data>
  <data name="Prorate" xml:space="preserve">
    <value>Ventiler</value>
    <comment>Field</comment>
  </data>
  <data name="QuantityDecrease" xml:space="preserve">
    <value>Baisse de quantité</value>
    <comment>Field</comment>
  </data>
  <data name="QuantityIncrease" xml:space="preserve">
    <value>Hausse de quantité</value>
    <comment>Field</comment>
  </data>
  <data name="SpecificBucket" xml:space="preserve">
    <value>Lot spécifique</value>
    <comment>Field</comment>
  </data>
  <data name="IC0110" xml:space="preserve">
    <value>Détails ajustement</value>
    <comment>Field</comment>
  </data>
  <data name="IC0120" xml:space="preserve">
    <value>Ajustement</value>
    <comment>Field</comment>
  </data>
  <data name="IC0113" xml:space="preserve">
    <value>Numéros série détail ajustement</value>
    <comment>Field</comment>
  </data>
  <data name="IC0115" xml:space="preserve">
    <value>Champs opt détail ajustement</value>
    <comment>Field</comment>
  </data>
  <data name="IC0117" xml:space="preserve">
    <value>Numéros lot détail ajustement</value>
    <comment>Field</comment>
  </data>
  <data name="IC0125" xml:space="preserve">
    <value>Champs opt en-tête ajustement</value>
    <comment>Field</comment>
  </data>
  <data name="AccountDescription" xml:space="preserve">
    <value>Description compte</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentAcct" xml:space="preserve">
    <value>Compte ajustement</value>
    <comment>Field</comment>
  </data>
  <data name="BucketType" xml:space="preserve">
    <value>Type de lot</value>
    <comment>Field</comment>
  </data>
  <data name="CostAdjustment" xml:space="preserve">
    <value>Ajustement coût</value>
    <comment>Field</comment>
  </data>
  <data name="CostDate" xml:space="preserve">
    <value>Date du coût</value>
    <comment>Field</comment>
  </data>
  <data name="CostUOM" xml:space="preserve">
    <value>UdeM coût</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentWriteOffAccount" xml:space="preserve">
    <value>Compte ajustement/annulation</value>
    <comment>Field</comment>
  </data>
  <data name="CloseLT" xml:space="preserve">
    <value>Fermer SL</value>
    <comment>Field</comment>
  </data>
  <data name="CloseSN" xml:space="preserve">
    <value>Fermer NS</value>
    <comment>Field</comment>
  </data>
  <data name="CostingSequenceNumber" xml:space="preserve">
    <value>Numéro séquence attribution coût</value>
    <comment>Field</comment>
  </data>
  <data name="ForcePopupLT" xml:space="preserve">
    <value>Forcer écran contextuel SL</value>
    <comment>Field</comment>
  </data>
  <data name="ForcePopupSN" xml:space="preserve">
    <value>Forcer écran contextuel NS</value>
    <comment>Field</comment>
  </data>
  <data name="InterprocessCommID" xml:space="preserve">
    <value>Code commande inter-traitement</value>
    <comment>Field</comment>
  </data>
  <data name="LotCost" xml:space="preserve">
    <value>Coût lot</value>
    <comment>Field</comment>
  </data>
  <data name="LotsCost" xml:space="preserve">
    <value>Coût lots</value>
    <comment>Field</comment>
  </data>
  <data name="LTSetID" xml:space="preserve">
    <value>Code groupe SL</value>
    <comment>Field</comment>
  </data>
  <data name="NumberOfSerials" xml:space="preserve">
    <value>Nombre de numéros de série</value>
    <comment>Field</comment>
  </data>
  <data name="OriginalWriteOffAccount" xml:space="preserve">
    <value>Compte annulation d'origine</value>
    <comment>Field</comment>
  </data>
  <data name="PopupLT" xml:space="preserve">
    <value>Écran contextuel SL</value>
    <comment>Field</comment>
  </data>
  <data name="PopupSN" xml:space="preserve">
    <value>Écran contextuel NS</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandItemNumber" xml:space="preserve">
    <value>Traiter opération numéro article</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandSortCode" xml:space="preserve">
    <value>Traiter opération code tri</value>
    <comment>Field</comment>
  </data>
  <data name="SerialsCost" xml:space="preserve">
    <value>Coût numéros de série</value>
    <comment>Field</comment>
  </data>
  <data name="ReceiptCost" xml:space="preserve">
    <value>Coût réception</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentDescription" xml:space="preserve">
    <value>Description ajustement</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentReference" xml:space="preserve">
    <value>Référence ajustement</value>
    <comment>Field</comment>
  </data>
</root>