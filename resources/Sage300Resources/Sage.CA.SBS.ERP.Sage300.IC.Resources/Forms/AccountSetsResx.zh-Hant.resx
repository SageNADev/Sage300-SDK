<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountDescription" xml:space="preserve">
    <value>科目描述</value>
    <comment>Table Column</comment>
  </data>
  <data name="AccountSetCode" xml:space="preserve">
    <value>科目集合代碼</value>
    <comment>Field</comment>
  </data>
  <data name="AccountSetDescription" xml:space="preserve">
    <value>科目集合描述</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentWriteOff" xml:space="preserve">
    <value>調整沖銷</value>
    <comment>Account</comment>
  </data>
  <data name="AssemblyCostCredit" xml:space="preserve">
    <value>組裝成本貸項</value>
    <comment>Account</comment>
  </data>
  <data name="CostingMethod" xml:space="preserve">
    <value>計算成本方式</value>
    <comment>Field</comment>
  </data>
  <data name="CostItemDuring" xml:space="preserve">
    <value>在此期間計算產品成本</value>
    <comment>Label to Cost Item during Dropdown</comment>
  </data>
  <data name="Costmethd" xml:space="preserve">
    <value>變更成本計算方法將影響使用此一科目集合的所有產品的成本計算。是否繼續？</value>
    <comment>Confirmation Message</comment>
  </data>
  <data name="CreditDebitClearing" xml:space="preserve">
    <value>貸項/借項通知單暫計</value>
    <comment>Account</comment>
  </data>
  <data name="CreditDebitNoteClr" xml:space="preserve">
    <value>貸項/借項通知單暫計</value>
    <comment>Display the value into the grid</comment>
  </data>
  <data name="CurrencyCode" xml:space="preserve">
    <value>幣別代碼</value>
    <comment>Field</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>描述</value>
    <comment>Display the grid header title</comment>
  </data>
  <data name="DisassemblyExpense" xml:space="preserve">
    <value>拆卸費用</value>
    <comment>Account</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存貨控制科目集合</value>
    <comment>Screen Title</comment>
  </data>
  <data name="GLAccount" xml:space="preserve">
    <value>總帳科目</value>
    <comment>Table Column</comment>
  </data>
  <data name="ICAccount" xml:space="preserve">
    <value>存貨控制科目</value>
    <comment>Display the value into the grid</comment>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>閒置</value>
    <comment>Label to Inactive Checkbox field</comment>
  </data>
  <data name="InventoryControl" xml:space="preserve">
    <value>存貨控制</value>
    <comment>Account</comment>
  </data>
  <data name="LastMaintained" xml:space="preserve">
    <value>上一維護日期</value>
    <comment>Account</comment>
  </data>
  <data name="NonStockClearing" xml:space="preserve">
    <value>非庫存清算</value>
    <comment>Account</comment>
  </data>
  <data name="PayablesClearing" xml:space="preserve">
    <value>應付款清算</value>
    <comment>Account</comment>
  </data>
  <data name="PhysInvAdjustment" xml:space="preserve">
    <value>實地盤點調整</value>
    <comment>Account</comment>
  </data>
  <data name="ShipmentClearing" xml:space="preserve">
    <value>發貨清算</value>
    <comment>Account</comment>
  </data>
  <data name="TransferClearing" xml:space="preserve">
    <value>轉移清算</value>
    <comment>Account</comment>
  </data>
  <data name="Status" xml:space="preserve">
    <value>狀態</value>
    <comment>Account Set Status</comment>
  </data>
  <data name="DateInactive" xml:space="preserve">
    <value>閒置日期</value>
    <comment>DateInactive</comment>
  </data>
  <data name="DateLastMaintained" xml:space="preserve">
    <value>上一維護日期</value>
    <comment>DateLastMaintained</comment>
  </data>
  <data name="AccountNumberBlankValidation" xml:space="preserve">
    <value>{0}科目不能空置。</value>
    <comment>{0}=Field title</comment>
  </data>
  <data name="AccountNumberValidation" xml:space="preserve">
    <value>無法找到{0}科目{1}。</value>
    <comment>{0}=Account Title,{1}=Account Number</comment>
  </data>
  <data name="Status_Active" xml:space="preserve">
    <value>活動</value>
  </data>
  <data name="Status_Inactive" xml:space="preserve">
    <value>閒置</value>
  </data>
  <data name="AccountNumberInactiveValidation" xml:space="preserve">
    <value>{0}科目不是活動的。</value>
    <comment>{0}=Account Number Title</comment>
  </data>
  <data name="IC0100" xml:space="preserve">
    <value>科目集合</value>
    <comment>Export/Import</comment>
  </data>
  <data name="AccountSetCodeBlankValidation" xml:space="preserve">
    <value>{0}不能空置。</value>
    <comment>{0}=Field title</comment>
  </data>
  <data name="AdjustmentOrWriteOffAccount" xml:space="preserve">
    <value>調整/沖銷科目</value>
    <comment>Display Account Name in Import/Export</comment>
  </data>
  <data name="AssemblyCostCreditAccount" xml:space="preserve">
    <value>組裝成本貸項科目</value>
    <comment>Display Account Name in Import/Export</comment>
  </data>
  <data name="CreditOrDebitNoteClearingAcct" xml:space="preserve">
    <value>貸項/借項通知單清算科目</value>
    <comment>Display Account Name in Import/Export</comment>
  </data>
  <data name="DisassemblyExpenseAccount" xml:space="preserve">
    <value>拆卸費用科目</value>
    <comment>Display Account Name in Import/Export</comment>
  </data>
  <data name="InventoryControlAccount" xml:space="preserve">
    <value>存貨控制科目</value>
    <comment>Display Account Name in Import/Export </comment>
  </data>
  <data name="NonstockClearingAccount" xml:space="preserve">
    <value>非庫存清算科目</value>
    <comment>Display Account Name in Import/Export</comment>
  </data>
  <data name="PayablesClearingAccount" xml:space="preserve">
    <value>應付帳款清算科目</value>
    <comment>Display Account Name in Import/Export</comment>
  </data>
  <data name="PhysicalInventoryAdjAcct" xml:space="preserve">
    <value>實地盤點調整科目</value>
    <comment>Display Account Name in Import/Export</comment>
  </data>
  <data name="ShipmentClearingAccount" xml:space="preserve">
    <value>發貨清算科目</value>
    <comment>Display Account Name in Import/Export</comment>
  </data>
  <data name="TransferClearingAccount" xml:space="preserve">
    <value>存貨轉移清算科目</value>
    <comment>Display Account Name in Import/Export</comment>
  </data>
</root>