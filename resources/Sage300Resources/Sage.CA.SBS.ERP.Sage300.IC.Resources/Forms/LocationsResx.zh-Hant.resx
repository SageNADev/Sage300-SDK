<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>地址</value>
    <comment>Tab</comment>
  </data>
  <data name="Address1" xml:space="preserve">
    <value>地址行1</value>
    <comment>Address - Field</comment>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>地址行2</value>
    <comment>Address - Field</comment>
  </data>
  <data name="Address3" xml:space="preserve">
    <value>地址行3</value>
    <comment>Address - Field</comment>
  </data>
  <data name="Address4" xml:space="preserve">
    <value>地址行4</value>
    <comment>Address - Field</comment>
  </data>
  <data name="Allowed" xml:space="preserve">
    <value>允許</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="AllowItemsAtLocation" xml:space="preserve">
    <value>允許在此一地點存放產品</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>連絡人</value>
    <comment>Tab</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存貨控制地點</value>
    <comment>Screen Title</comment>
  </data>
  <data name="GLSegment" xml:space="preserve">
    <value>總帳節段</value>
    <comment>Integration - Table Column</comment>
  </data>
  <data name="GLSegmentCode" xml:space="preserve">
    <value>總帳節段代碼</value>
    <comment>Integration - Table Column</comment>
  </data>
  <data name="InactiveAsOf" xml:space="preserve">
    <value>閒置（至日期）</value>
    <comment>Check box</comment>
  </data>
  <data name="Integration" xml:space="preserve">
    <value>整合</value>
    <comment>Tab</comment>
  </data>
  <data name="Location" xml:space="preserve">
    <value>地點</value>
    <comment>Field</comment>
  </data>
  <data name="LocationDesc" xml:space="preserve">
    <value>地點描述</value>
    <comment>Field</comment>
  </data>
  <data name="LocINACTIVE" xml:space="preserve">
    <value>地點{0}為閒置。您不能為一個閒置地點輸入明細。</value>
    <comment>Error</comment>
  </data>
  <data name="LocType" xml:space="preserve">
    <value>地點類型</value>
    <comment>List</comment>
  </data>
  <data name="NonexistICILOCG" xml:space="preserve">
    <value>您必須在分派產品到地點之前先建立一個。</value>
    <comment>Error</comment>
  </data>
  <data name="OverrideAccSeg" xml:space="preserve">
    <value>撤換總帳科目節段</value>
    <comment>Integration - Option</comment>
  </data>
  <data name="Items" xml:space="preserve">
    <value>產品</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名稱</value>
  </data>
  <data name="IC0370" xml:space="preserve">
    <value>地點</value>
    <comment>Export/Import</comment>
  </data>
  <data name="ContactEmail" xml:space="preserve">
    <value>連絡人電郵</value>
    <comment>Used In Finder</comment>
  </data>
  <data name="ContactFax" xml:space="preserve">
    <value>連絡人傳真</value>
    <comment>Used In Finder</comment>
  </data>
  <data name="ContactPhone" xml:space="preserve">
    <value>連絡人電話</value>
    <comment>Used In Finder</comment>
  </data>
  <data name="SegmentNumber1" xml:space="preserve">
    <value>節段編號1</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentNumber2" xml:space="preserve">
    <value>節段編號2</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentNumber3" xml:space="preserve">
    <value>節段編號3</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentNumber4" xml:space="preserve">
    <value>節段編號4</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentNumber5" xml:space="preserve">
    <value>節段編號5</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentNumber6" xml:space="preserve">
    <value>節段編號6</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentNumber7" xml:space="preserve">
    <value>節段編號7</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentNumber8" xml:space="preserve">
    <value>節段編號8</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentNumber9" xml:space="preserve">
    <value>節段編號9</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentOverride" xml:space="preserve">
    <value>節段撤換</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentValue1" xml:space="preserve">
    <value>節段值1</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentValue2" xml:space="preserve">
    <value>節段值2</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentValue3" xml:space="preserve">
    <value>節段值3</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentValue4" xml:space="preserve">
    <value>節段值4</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentValue5" xml:space="preserve">
    <value>節段值5</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentValue6" xml:space="preserve">
    <value>節段值6</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentValue7" xml:space="preserve">
    <value>節段值7</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentValue8" xml:space="preserve">
    <value>節段值8</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="SegmentValue9" xml:space="preserve">
    <value>節段值9</value>
    <comment>Used In Finder/Export/Import</comment>
  </data>
  <data name="LocationEmail" xml:space="preserve">
    <value>地點電郵</value>
    <comment>Used In Finder</comment>
  </data>
  <data name="ExistItem" xml:space="preserve">
    <value>地點{0}已經存在此一產品的數量或成本合計。因此您不能刪除此一地點。</value>
    <comment>Item Deletion Error Message</comment>
  </data>
  <data name="EmptySegment" xml:space="preserve">
    <value>節段值空置。</value>
  </data>
  <data name="QuantityonHand" xml:space="preserve">
    <value>在手數量（上一日終）</value>
    <comment>Finder Label</comment>
  </data>
</root>