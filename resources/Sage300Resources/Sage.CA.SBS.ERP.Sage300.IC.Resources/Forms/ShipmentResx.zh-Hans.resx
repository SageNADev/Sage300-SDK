<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CurrencyDescription" xml:space="preserve">
    <value>币种描述</value>
    <comment>Used in Currency Popup</comment>
  </data>
  <data name="CustomerExists" xml:space="preserve">
    <value>客户已存在</value>
    <comment>Used in finder</comment>
  </data>
  <data name="CustomerNumberDescription" xml:space="preserve">
    <value>客户名称</value>
    <comment>Used in finder</comment>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>输入者</value>
    <comment>Used in finder</comment>
  </data>
  <data name="ICUniqueDocumentNumber" xml:space="preserve">
    <value>存货控制 - 唯一凭证编号</value>
    <comment>Used in finder</comment>
  </data>
  <data name="JobRelated" xml:space="preserve">
    <value>作业相关</value>
    <comment>Used in finder</comment>
  </data>
  <data name="NextDetailLineNumber" xml:space="preserve">
    <value>下一明细行编号</value>
    <comment>Used in finder</comment>
  </data>
  <data name="PostingDate" xml:space="preserve">
    <value>过帐日期</value>
    <comment>Used in Shipment Number Popup</comment>
  </data>
  <data name="PostSequenceNumber" xml:space="preserve">
    <value>过帐序列编号</value>
    <comment>Used in finder</comment>
  </data>
  <data name="RateOperation" xml:space="preserve">
    <value>汇率运算</value>
    <comment>Used in Shipment Number Popup</comment>
  </data>
  <data name="RateOverride" xml:space="preserve">
    <value>汇率替换</value>
    <comment>Used in finder</comment>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>记录已删除</value>
    <comment>Used in finder</comment>
  </data>
  <data name="RecordStatus" xml:space="preserve">
    <value>记录状态</value>
    <comment>Used in finder</comment>
  </data>
  <data name="SequenceNumber" xml:space="preserve">
    <value>序列编号</value>
    <comment>Used in finder</comment>
  </data>
  <data name="SerialNumberUniquifier" xml:space="preserve">
    <value>系列编号唯一标志符</value>
    <comment>Used in finder</comment>
  </data>
  <data name="ShipDate" xml:space="preserve">
    <value>发货日期</value>
    <comment>Used in Shipment Number Popup</comment>
  </data>
  <data name="SourceCurrency" xml:space="preserve">
    <value>来源币种</value>
    <comment>Used in finder</comment>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>交易编号</value>
    <comment>Used in finder</comment>
  </data>
  <data name="ExtendedPrice" xml:space="preserve">
    <value>总价格</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="ManufacturersItemNumber" xml:space="preserve">
    <value>制造商的货品编号</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="WIPAccount" xml:space="preserve">
    <value>在制品科目</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="WIPAccountDescription" xml:space="preserve">
    <value>在制品科目描述</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="ShipmentCurrency" xml:space="preserve">
    <value>发货币种</value>
    <comment>Used in Exchange Rate Popup</comment>
  </data>
  <data name="RecordPrinted" xml:space="preserve">
    <value>记录已打印</value>
    <comment>Used in finder</comment>
  </data>
  <data name="Num1" xml:space="preserve">
    <value>1</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num10" xml:space="preserve">
    <value>10</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num11" xml:space="preserve">
    <value>11</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num12" xml:space="preserve">
    <value>12</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num2" xml:space="preserve">
    <value>2</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num3" xml:space="preserve">
    <value>3</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num4" xml:space="preserve">
    <value>4</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num5" xml:space="preserve">
    <value>5</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num6" xml:space="preserve">
    <value>6</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num7" xml:space="preserve">
    <value>7</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num8" xml:space="preserve">
    <value>8</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num9" xml:space="preserve">
    <value>9</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="ShipmentTitle" xml:space="preserve">
    <value>存货控制发货</value>
    <comment>Used for title</comment>
  </data>
  <data name="PostSuccess" xml:space="preserve">
    <value>过帐已完成。{0}:{1}</value>
    <comment>Used in post success</comment>
  </data>
  <data name="IC0630" xml:space="preserve">
    <value>发货明细</value>
    <comment>Used in Import/Export </comment>
  </data>
  <data name="IC0632" xml:space="preserve">
    <value>发货明细批别编号</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0635" xml:space="preserve">
    <value>发货明细可选字段</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0640" xml:space="preserve">
    <value>发货标头</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0645" xml:space="preserve">
    <value>发货可选字段</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="CustomerItemNumber" xml:space="preserve">
    <value>客户货品编号</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="DateValue" xml:space="preserve">
    <value>日期值</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>发货</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0636" xml:space="preserve">
    <value>发货明细系列编号</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="TextValue" xml:space="preserve">
    <value>文本值</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="ShipmentDeleted" xml:space="preserve">
    <value>发运已被删除。</value>
    <comment>Used for Deleted shipments</comment>
  </data>
  <data name="CloseLT" xml:space="preserve">
    <value>关闭LT</value>
  </data>
  <data name="CloseSN" xml:space="preserve">
    <value>关闭SN</value>
  </data>
  <data name="ForcePopupLT" xml:space="preserve">
    <value>强制弹出LT</value>
  </data>
  <data name="ForcePopupSN" xml:space="preserve">
    <value>强制弹出SN</value>
  </data>
  <data name="GLControlAmountShipment" xml:space="preserve">
    <value>总帐控制金额 - 发货</value>
  </data>
  <data name="GLControlAmountShipmentRet" xml:space="preserve">
    <value>总帐控制金额 - 发货退回</value>
  </data>
  <data name="GLCostVarianceShipment" xml:space="preserve">
    <value>总帐成本差异 - 发货</value>
  </data>
  <data name="GLCostVarianceShipmentRetu" xml:space="preserve">
    <value>总帐成本差异 - 发货退回</value>
  </data>
  <data name="InterprocessCommID" xml:space="preserve">
    <value>进程间指令标识</value>
  </data>
  <data name="LTSetID" xml:space="preserve">
    <value>LT集合标识</value>
  </data>
  <data name="NumberOfSerials" xml:space="preserve">
    <value>系列数目</value>
  </data>
  <data name="Obsolete" xml:space="preserve">
    <value>*** Obsolete ***</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="PMWIPAccount" xml:space="preserve">
    <value>项目成本管理/在制品科目</value>
  </data>
  <data name="PopupLT" xml:space="preserve">
    <value>弹出LT</value>
  </data>
  <data name="PopupSN" xml:space="preserve">
    <value>弹出SN</value>
  </data>
  <data name="InvalidLocation" xml:space="preserve">
    <value>地点不能空置。</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="QuantityWarning" xml:space="preserve">
    <value>过帐这一发运将把这一地点的货品数量减少到零以下。是否继续？</value>
    <comment>Used for quantity validation </comment>
  </data>
  <data name="ShipmentDescription" xml:space="preserve">
    <value>发货描述</value>
  </data>
  <data name="ShipmentReference" xml:space="preserve">
    <value>发货参考</value>
  </data>
  <data name="CurrencySpreadRange" xml:space="preserve">
    <value>输入的汇率超出汇率表指定的差额范围。</value>
  </data>
  <data name="ShipmentNumberErrorMessage" xml:space="preserve">
    <value>发运编号不能空置。</value>
  </data>
  <data name="ReturnNumber" xml:space="preserve">
    <value>退货编号</value>
  </data>
  <data name="SaveMessage" xml:space="preserve">
    <value>保存成功。计算成本前记录必须过帐。{0}：{1}。</value>
  </data>
</root>