<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BillsOfMaterial" xml:space="preserve">
    <value>Bills of Material</value>
    <comment>Header</comment>
  </data>
  <data name="BomDescription" xml:space="preserve">
    <value>BOM Description</value>
    <comment>Field</comment>
  </data>
  <data name="BOMNumber" xml:space="preserve">
    <value>BOM Number</value>
  </data>
  <data name="ChildEntity" xml:space="preserve">
    <value>I/C Component's Bills of Material</value>
    <comment>Child PopUp Header</comment>
  </data>
  <data name="ComponentBOMNumber" xml:space="preserve">
    <value>Component BOM Number</value>
  </data>
  <data name="ComponentDescription" xml:space="preserve">
    <value>Component Description</value>
  </data>
  <data name="ComponentFormattedItemNo" xml:space="preserve">
    <value>Component Formatted ItemNo</value>
  </data>
  <data name="ComponentItemDescription" xml:space="preserve">
    <value>Component Item Description</value>
  </data>
  <data name="ComponentLineNumber" xml:space="preserve">
    <value>Component Line Number</value>
  </data>
  <data name="ComponentQuantity" xml:space="preserve">
    <value>Component Quantity</value>
  </data>
  <data name="Components" xml:space="preserve">
    <value>Components</value>
    <comment>Table Column</comment>
  </data>
  <data name="ComponetBOMNumber" xml:space="preserve">
    <value>Component's BOM Number</value>
    <comment>Table Column</comment>
  </data>
  <data name="ComponetsItemNumber" xml:space="preserve">
    <value>Componet's Item Number</value>
  </data>
  <data name="CopyDetail" xml:space="preserve">
    <value>Copy Detail</value>
  </data>
  <data name="DeleteConfirmMessage" xml:space="preserve">
    <value>Are you sure you want to delete bill of materail {0} for item {1}?</value>
    <comment>Delete Confirm Message</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>I/C Bills of Material</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FixedCost" xml:space="preserve">
    <value>Fixed Cost</value>
    <comment>Field</comment>
  </data>
  <data name="FormattedComponentItemNo" xml:space="preserve">
    <value>Formatted Component Item Number</value>
  </data>
  <data name="FormattedMasterItemNumber" xml:space="preserve">
    <value>Formatted Master Item Number</value>
  </data>
  <data name="HideTree" xml:space="preserve">
    <value>Hide Tree &gt;&gt;</value>
  </data>
  <data name="HideTree1" xml:space="preserve">
    <value>Hide Tree</value>
    <comment>Button</comment>
  </data>
  <data name="IC0190" xml:space="preserve">
    <value>Bills of Material Components</value>
    <comment>Export/Import</comment>
  </data>
  <data name="IC0200" xml:space="preserve">
    <value>Bills of Material</value>
    <comment>Export/Import</comment>
  </data>
  <data name="ItemInvalidMessage" xml:space="preserve">
    <value>Cannot assemble items with a user-specified costing method.</value>
  </data>
  <data name="LoopCheck" xml:space="preserve">
    <value>Loop Check</value>
    <comment>Finder Column</comment>
  </data>
  <data name="MasterBOMNumber" xml:space="preserve">
    <value>Master BOM Number</value>
  </data>
  <data name="MasterDescription" xml:space="preserve">
    <value>Master Description</value>
  </data>
  <data name="MasterItemNo" xml:space="preserve">
    <value>Master Item Number</value>
    <comment>Field</comment>
  </data>
  <data name="MasterItemNoDesc" xml:space="preserve">
    <value>Master Item Number Description</value>
    <comment>Field</comment>
  </data>
  <data name="MasterUnitOfMeasure" xml:space="preserve">
    <value>Master Unit Of Measure</value>
  </data>
  <data name="PerBuildQty" xml:space="preserve">
    <value>Per Build Qty</value>
    <comment>Field</comment>
  </data>
  <data name="SaveConfirmMessage" xml:space="preserve">
    <value>Do you want to save changes to bill of matererial {0} for item {1}</value>
    <comment>Save confirm Message</comment>
  </data>
  <data name="ShowTree" xml:space="preserve">
    <value>&lt;&lt;Show Tree</value>
    <comment>Button</comment>
  </data>
  <data name="ShowTree1" xml:space="preserve">
    <value>Show Tree</value>
    <comment>Button</comment>
  </data>
  <data name="UseAsDefault" xml:space="preserve">
    <value>Use As Default</value>
    <comment>Field</comment>
  </data>
  <data name="UserSpecifiedCost" xml:space="preserve">
    <value>User Specified Cost</value>
  </data>
  <data name="VariableCost" xml:space="preserve">
    <value>Variable Cost</value>
    <comment>Field</comment>
  </data>
</root>