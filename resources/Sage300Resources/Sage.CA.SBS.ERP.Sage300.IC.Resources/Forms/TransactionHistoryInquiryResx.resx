<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjustmentBothDecrease" xml:space="preserve">
    <value>Adjustment Both Decrease</value>
  </data>
  <data name="AdjustmentBothIncrease" xml:space="preserve">
    <value>Adjustment Both Increase</value>
  </data>
  <data name="AdjustmentCostDecrease" xml:space="preserve">
    <value>Adjustment Cost Decrease</value>
  </data>
  <data name="AdjustmentCostIncrease" xml:space="preserve">
    <value>Adjustment Cost Increase</value>
  </data>
  <data name="AdjustmentQuantityDecrease" xml:space="preserve">
    <value>Adjustment Quantity Decrease</value>
  </data>
  <data name="AdjustmentQuantityIncrease" xml:space="preserve">
    <value>Adjustment Quantity Increase</value>
  </data>
  <data name="ColtitleCredit" xml:space="preserve">
    <value>Credit</value>
    <comment>Table Row</comment>
  </data>
  <data name="ColtitleDayEndNo" xml:space="preserve">
    <value>Day End Number</value>
    <comment>Table Row</comment>
  </data>
  <data name="ColtitleDebit" xml:space="preserve">
    <value>Debit</value>
    <comment>Table Row</comment>
  </data>
  <data name="ColtitleEntyNo" xml:space="preserve">
    <value>Entry Number</value>
    <comment>Table Row</comment>
  </data>
  <data name="ColtitleInvoiceDocNum" xml:space="preserve">
    <value>Invoice Number</value>
    <comment>Table Row</comment>
  </data>
  <data name="ColtitleUnit" xml:space="preserve">
    <value>Unit</value>
    <comment>Table Row</comment>
  </data>
  <data name="ComponentItemAssembly" xml:space="preserve">
    <value>Component Item Assembly</value>
  </data>
  <data name="CreditNote" xml:space="preserve">
    <value>Credit Note</value>
  </data>
  <data name="DebitNote" xml:space="preserve">
    <value>Debit Note</value>
  </data>
  <data name="DrillDownLinkNumber" xml:space="preserve">
    <value>Drill Down Link Number</value>
  </data>
  <data name="DrillDownType" xml:space="preserve">
    <value>Drill Down Type</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>I/C Transaction History Inquiry</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ErrorICReceipts" xml:space="preserve">
    <value>I/C Receipts is unavailable.</value>
  </data>
  <data name="ErrorICShipment" xml:space="preserve">
    <value>I/C Shipment is unavailable.</value>
  </data>
  <data name="ErrorICTransfers" xml:space="preserve">
    <value>I/C Transfers is unavailable.</value>
  </data>
  <data name="ErrorPOInvoiceEntry" xml:space="preserve">
    <value>P/O Invoice Entry is unavailable.</value>
  </data>
  <data name="ErrorReceiptEntry" xml:space="preserve">
    <value>P/O Receipt Entry is unavailable.</value>
  </data>
  <data name="ExtendedCostSource" xml:space="preserve">
    <value>Source Amount</value>
  </data>
  <data name="InternalUsage" xml:space="preserve">
    <value>Internal Usage</value>
  </data>
  <data name="Invoice" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="InvoiceNumber" xml:space="preserve">
    <value>Invoice Number</value>
  </data>
  <data name="MasterItemAssembly" xml:space="preserve">
    <value>Master Item Assembly</value>
  </data>
  <data name="Receipt" xml:space="preserve">
    <value>Receipt</value>
  </data>
  <data name="ReceiptAdjustment" xml:space="preserve">
    <value>Receipt Adjustment</value>
  </data>
  <data name="ReceiptReturn" xml:space="preserve">
    <value>Receipt Return</value>
  </data>
  <data name="Shipment" xml:space="preserve">
    <value>Shipment</value>
  </data>
  <data name="ShipmentAdjustment" xml:space="preserve">
    <value>Shipment Adjustment</value>
  </data>
  <data name="ShipmentReturn" xml:space="preserve">
    <value>Shipment Return</value>
  </data>
  <data name="SourceApplication" xml:space="preserve">
    <value>Source Application</value>
  </data>
  <data name="SourceCurrency" xml:space="preserve">
    <value>Source Currency</value>
  </data>
  <data name="SreenUnavailable" xml:space="preserve">
    <value>A problem occurred and the screen could not be opened.</value>
  </data>
  <data name="StockTransferFrom" xml:space="preserve">
    <value>Stock Transfer From</value>
  </data>
  <data name="StockTransferTo" xml:space="preserve">
    <value>Stock Transfer To</value>
  </data>
  <data name="TransactionSequence" xml:space="preserve">
    <value>Transaction Sequence</value>
  </data>
  <data name="UiTitleDetail" xml:space="preserve">
    <value>I/C Transaction History Inquiry Detail</value>
    <comment>Screen Title</comment>
  </data>
</root>