<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdditionalCostAllocationType" xml:space="preserve">
    <value>Type ventilation coût additionnel</value>
  </data>
  <data name="AdditionalCostCurrency" xml:space="preserve">
    <value>Devise de coût additionnel</value>
  </data>
  <data name="AdditionalCostFunctional" xml:space="preserve">
    <value>Coût additionnel - Devise fonctionnelle</value>
  </data>
  <data name="AdditionalCostCurrDesc" xml:space="preserve">
    <value>Description devise coût additionnel</value>
  </data>
  <data name="AdjustedCost" xml:space="preserve">
    <value>Coût ajusté</value>
  </data>
  <data name="AdjustedCostFunctional" xml:space="preserve">
    <value>Coût ajusté - Devise fonctionnelle</value>
  </data>
  <data name="AdjustedExtCostFuncToDate" xml:space="preserve">
    <value>Coût total ajusté à ce jour - Devise fonctionnelle</value>
  </data>
  <data name="AdjustedExtCostToDate" xml:space="preserve">
    <value>Coût total ajusté à ce jour</value>
  </data>
  <data name="AdjustedUnitCost" xml:space="preserve">
    <value>Coût unitaire ajusté</value>
  </data>
  <data name="CloseLT" xml:space="preserve">
    <value>Fermer SL</value>
  </data>
  <data name="CloseSN" xml:space="preserve">
    <value>Fermer NS</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Conclu</value>
  </data>
  <data name="CostingDate" xml:space="preserve">
    <value>Date attribution des coûts</value>
  </data>
  <data name="CostingSequenceNo" xml:space="preserve">
    <value>Numéro séquence attribution des coûts</value>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>Saisi par</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Réceptions de GS</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ForcePopupLT" xml:space="preserve">
    <value>Forcer écran contextuel SL</value>
  </data>
  <data name="ForcePopupSN" xml:space="preserve">
    <value>Forcer écran contextuel NS</value>
  </data>
  <data name="IC0580" xml:space="preserve">
    <value>Détails réception</value>
  </data>
  <data name="IC0582" xml:space="preserve">
    <value>Numéro lot détails de réception</value>
  </data>
  <data name="IC0585" xml:space="preserve">
    <value>Champ optionnels détails de réception</value>
  </data>
  <data name="IC0587" xml:space="preserve">
    <value>Numéros série détails de réception</value>
  </data>
  <data name="IC0590" xml:space="preserve">
    <value>En-tête réception</value>
  </data>
  <data name="IC0595" xml:space="preserve">
    <value>Champ optionnel réception</value>
  </data>
  <data name="ICUniqueDocumentNumber" xml:space="preserve">
    <value>GS - Numéro document unique</value>
  </data>
  <data name="InterprocessCommID" xml:space="preserve">
    <value>Code commande inter-traitement</value>
  </data>
  <data name="LTSetID" xml:space="preserve">
    <value>Code groupe SL</value>
  </data>
  <data name="NextDetailLineNumber" xml:space="preserve">
    <value>Prochain numéro ligne de détail</value>
  </data>
  <data name="NumberOfDetailswithCost" xml:space="preserve">
    <value>Nombre détails avec coût attribué</value>
  </data>
  <data name="OriginalTotalCostFunctional" xml:space="preserve">
    <value>Coût total origine - Devise fonctionnelle</value>
  </data>
  <data name="OriginalTotalCostSource" xml:space="preserve">
    <value>Coût total origine - Devise client</value>
  </data>
  <data name="PopupLT" xml:space="preserve">
    <value>Écran contextuel SL</value>
  </data>
  <data name="PopupSN" xml:space="preserve">
    <value>Écran contextuel NS</value>
  </data>
  <data name="PostSequenceNumber" xml:space="preserve">
    <value>Numéro séquence de report</value>
  </data>
  <data name="PreviousDayEndExtCost" xml:space="preserve">
    <value>Coût total clotûre journalière précédente</value>
  </data>
  <data name="PreviousDayEndExtCostFunc" xml:space="preserve">
    <value>Coût total clotûre journalière précédente - Devise fonctionnelle</value>
  </data>
  <data name="PreviousDayEndReceiptQty" xml:space="preserve">
    <value>Qté reçue clotûre journalière précédente</value>
  </data>
  <data name="PreviousDayEndUnitCost" xml:space="preserve">
    <value>Coût unitaire clotûre journalière précédente</value>
  </data>
  <data name="ProcessCommand" xml:space="preserve">
    <value>Traiter opération</value>
  </data>
  <data name="ProratedAddlCostFunc" xml:space="preserve">
    <value>Coût additionnel ventilé - Devise fonctionnelle</value>
  </data>
  <data name="ProratedAddlCostSrc" xml:space="preserve">
    <value>Coût additionnel ventilé - Devise client</value>
  </data>
  <data name="QuantityReturnedToDate" xml:space="preserve">
    <value>Quantité articles retournés à ce jour</value>
  </data>
  <data name="ReceiptCurrency" xml:space="preserve">
    <value>Devise de réception</value>
  </data>
  <data name="ReceiptCurrencyDecimals" xml:space="preserve">
    <value>Décimales devise de réception</value>
  </data>
  <data name="ReceiptCurrencyDesc" xml:space="preserve">
    <value>Description devise réception</value>
  </data>
  <data name="ReceiptDate" xml:space="preserve">
    <value>Date de réception</value>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>Enregistrement supprimé</value>
  </data>
  <data name="RecordPrinted" xml:space="preserve">
    <value>Enregistrement imprimé</value>
  </data>
  <data name="RecordStatus" xml:space="preserve">
    <value>État enregistrement</value>
  </data>
  <data name="RequireLabels" xml:space="preserve">
    <value>Étiquettes requises</value>
  </data>
  <data name="ReturnCost" xml:space="preserve">
    <value>Coût du retour</value>
  </data>
  <data name="ReturnedExtCostFuncToDate" xml:space="preserve">
    <value>Coût total articles retournés à jour - Devise fonctionnelle</value>
  </data>
  <data name="ReturnedExtCostToDate" xml:space="preserve">
    <value>Coût total articles retournés à jour</value>
  </data>
  <data name="RevisionListLineNumber" xml:space="preserve">
    <value>Numéro ligne liste de révision</value>
  </data>
  <data name="TotalAdjCostReceiptAddl" xml:space="preserve">
    <value>Total coût ajusté - Réception et coût additionnel</value>
  </data>
  <data name="TotalAdjusted" xml:space="preserve">
    <value>Total ajusté</value>
  </data>
  <data name="TotalCostReceiptAdditional" xml:space="preserve">
    <value>Total coût - réception et coût additionnel</value>
  </data>
  <data name="TotalExtendedCost" xml:space="preserve">
    <value>Coût général</value>
  </data>
  <data name="TotalExtendedCostFunctional" xml:space="preserve">
    <value>Coût général - Devise fonctionnelle</value>
  </data>
  <data name="TotalExtendedCostSource" xml:space="preserve">
    <value>Coût général - Devise client</value>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>Numéro transaction</value>
  </data>
  <data name="VendorExists" xml:space="preserve">
    <value>Fournisseur existe</value>
  </data>
  <data name="VendorDescription" xml:space="preserve">
    <value>Description fournisseur</value>
  </data>
  <data name="VendorShortName" xml:space="preserve">
    <value>Nom abrégé du fournisseur</value>
  </data>
  <data name="LocationQuantities" xml:space="preserve">
    <value>Quantités emplacements</value>
  </data>
  <data name="ReceiptHeaders" xml:space="preserve">
    <value>En-têtes réceptions</value>
  </data>
  <data name="ReturnedCost" xml:space="preserve">
    <value>Coût des articles retournés</value>
  </data>
  <data name="OrigAdditionalCostFunc" xml:space="preserve">
    <value>Coût additionnel origine - Devise fonctionnelle</value>
  </data>
  <data name="OrigAdditionalCostSource" xml:space="preserve">
    <value>Coût additionnel origine - Devise client</value>
  </data>
  <data name="TotalAdjustedCostFunctional" xml:space="preserve">
    <value>Total coût ajusté - Devise fonctionnelle</value>
  </data>
  <data name="TotalExtendedCostAdjusted" xml:space="preserve">
    <value>Coût général - Ajusté</value>
  </data>
  <data name="TotalReturnCost" xml:space="preserve">
    <value>Total coût retour</value>
  </data>
  <data name="ReceiptDescription" xml:space="preserve">
    <value>Description réception</value>
  </data>
</root>