<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CurrencyDescription" xml:space="preserve">
    <value>Description devise</value>
    <comment>Used in Currency Popup</comment>
  </data>
  <data name="CustomerExists" xml:space="preserve">
    <value>Client existe</value>
    <comment>Used in finder</comment>
  </data>
  <data name="CustomerNumberDescription" xml:space="preserve">
    <value>Nom du client</value>
    <comment>Used in finder</comment>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>Saisi par</value>
    <comment>Used in finder</comment>
  </data>
  <data name="ICUniqueDocumentNumber" xml:space="preserve">
    <value>GS - Numéro document unique</value>
    <comment>Used in finder</comment>
  </data>
  <data name="JobRelated" xml:space="preserve">
    <value>Tâche connexe</value>
    <comment>Used in finder</comment>
  </data>
  <data name="NextDetailLineNumber" xml:space="preserve">
    <value>Prochain numéro ligne de détail</value>
    <comment>Used in finder</comment>
  </data>
  <data name="PostingDate" xml:space="preserve">
    <value>Date de report</value>
    <comment>Used in Shipment Number Popup</comment>
  </data>
  <data name="PostSequenceNumber" xml:space="preserve">
    <value>Numéro séquence de report</value>
    <comment>Used in finder</comment>
  </data>
  <data name="RateOperation" xml:space="preserve">
    <value>Calcul taux</value>
    <comment>Used in Shipment Number Popup</comment>
  </data>
  <data name="RateOverride" xml:space="preserve">
    <value>Remplacement taux</value>
    <comment>Used in finder</comment>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>Enregistrement supprimé</value>
    <comment>Used in finder</comment>
  </data>
  <data name="RecordStatus" xml:space="preserve">
    <value>État enregistrement</value>
    <comment>Used in finder</comment>
  </data>
  <data name="SequenceNumber" xml:space="preserve">
    <value>Numéro séquence</value>
    <comment>Used in finder</comment>
  </data>
  <data name="SerialNumberUniquifier" xml:space="preserve">
    <value>Jeton numéro de série</value>
    <comment>Used in finder</comment>
  </data>
  <data name="ShipDate" xml:space="preserve">
    <value>Date expédition</value>
    <comment>Used in Shipment Number Popup</comment>
  </data>
  <data name="SourceCurrency" xml:space="preserve">
    <value>Devise transaction</value>
    <comment>Used in finder</comment>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>Numéro transaction</value>
    <comment>Used in finder</comment>
  </data>
  <data name="ExtendedPrice" xml:space="preserve">
    <value>Prix total</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="ManufacturersItemNumber" xml:space="preserve">
    <value>Numéro article du fabricant</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="WIPAccount" xml:space="preserve">
    <value>Compte encours</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="WIPAccountDescription" xml:space="preserve">
    <value>Description compte encours</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="ShipmentCurrency" xml:space="preserve">
    <value>Devise expédition</value>
    <comment>Used in Exchange Rate Popup</comment>
  </data>
  <data name="RecordPrinted" xml:space="preserve">
    <value>Enregistrement imprimé</value>
    <comment>Used in finder</comment>
  </data>
  <data name="Num1" xml:space="preserve">
    <value>1</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num10" xml:space="preserve">
    <value>10</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num11" xml:space="preserve">
    <value>11</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num12" xml:space="preserve">
    <value>12</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num2" xml:space="preserve">
    <value>2</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num3" xml:space="preserve">
    <value>3</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num4" xml:space="preserve">
    <value>4</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num5" xml:space="preserve">
    <value>5</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num6" xml:space="preserve">
    <value>6</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num7" xml:space="preserve">
    <value>7</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num8" xml:space="preserve">
    <value>8</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num9" xml:space="preserve">
    <value>9</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="ShipmentTitle" xml:space="preserve">
    <value>Expéditions de GS</value>
    <comment>Used for title</comment>
  </data>
  <data name="PostSuccess" xml:space="preserve">
    <value>Report terminé. {0}: {1}</value>
    <comment>Used in post success</comment>
  </data>
  <data name="IC0630" xml:space="preserve">
    <value>Détail expédition</value>
    <comment>Used in Import/Export </comment>
  </data>
  <data name="IC0632" xml:space="preserve">
    <value>Numéro lot détail d'expédition</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0635" xml:space="preserve">
    <value>Champ optionnel détail d'expédition</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0640" xml:space="preserve">
    <value>En-tête d'expédition</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0645" xml:space="preserve">
    <value>Champ optionnel expédition</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="CustomerItemNumber" xml:space="preserve">
    <value>Numéro article du client</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="DateValue" xml:space="preserve">
    <value>Valeur date</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Expéditions</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0636" xml:space="preserve">
    <value>Numéro série détail d'expédition</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="TextValue" xml:space="preserve">
    <value>Valeur texte</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="ShipmentDeleted" xml:space="preserve">
    <value>L'expédition a été supprimée.</value>
    <comment>Used for Deleted shipments</comment>
  </data>
  <data name="CloseLT" xml:space="preserve">
    <value>Fermer SL</value>
  </data>
  <data name="CloseSN" xml:space="preserve">
    <value>Fermer SS</value>
  </data>
  <data name="ForcePopupLT" xml:space="preserve">
    <value>Forcer écran contextuel LT</value>
  </data>
  <data name="ForcePopupSN" xml:space="preserve">
    <value>Forcer écran contextuel SN</value>
  </data>
  <data name="GLControlAmountShipment" xml:space="preserve">
    <value>Montant contrôle GL - Expédition</value>
  </data>
  <data name="GLControlAmountShipmentRet" xml:space="preserve">
    <value>Montant contrôle GL - Retour expédition</value>
  </data>
  <data name="GLCostVarianceShipment" xml:space="preserve">
    <value>Compte Écart coût GL - Expédition</value>
  </data>
  <data name="GLCostVarianceShipmentRetu" xml:space="preserve">
    <value>Compte Écart coût GL - Retour expédition</value>
  </data>
  <data name="InterprocessCommID" xml:space="preserve">
    <value>Code commande inter-traitement</value>
  </data>
  <data name="LTSetID" xml:space="preserve">
    <value>Code groupe SL</value>
  </data>
  <data name="NumberOfSerials" xml:space="preserve">
    <value>Nombre de numéros de série</value>
  </data>
  <data name="Obsolete" xml:space="preserve">
    <value>***Périmé***</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="PMWIPAccount" xml:space="preserve">
    <value>Compte en cours GP</value>
  </data>
  <data name="PopupLT" xml:space="preserve">
    <value>Écran contextuel LT</value>
  </data>
  <data name="PopupSN" xml:space="preserve">
    <value>Écran contextuel SN</value>
  </data>
  <data name="InvalidLocation" xml:space="preserve">
    <value>L'emplacement ne peut pas être en blanc.</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="QuantityWarning" xml:space="preserve">
    <value>Le report de cette expédition fera passer la quantité de l'article en dessous de zéro à cet emplacement. Voulez-vous continuer?</value>
    <comment>Used for quantity validation </comment>
  </data>
  <data name="ShipmentDescription" xml:space="preserve">
    <value>Description expédition</value>
  </data>
  <data name="ShipmentReference" xml:space="preserve">
    <value>Référence expédition</value>
  </data>
  <data name="CurrencySpreadRange" xml:space="preserve">
    <value>Le taux de change saisi est hors de la plage spécifiée dans les tables de devises.</value>
  </data>
  <data name="ShipmentNumberErrorMessage" xml:space="preserve">
    <value>Le numéro d'expédition ne peut pas être en blanc.</value>
  </data>
  <data name="ReturnNumber" xml:space="preserve">
    <value>Numéro retour</value>
  </data>
  <data name="SaveMessage" xml:space="preserve">
    <value>Correctement enregistré. L'enregistrement doit être reporté avant d'être traité. {0} : {1}.</value>
  </data>
</root>