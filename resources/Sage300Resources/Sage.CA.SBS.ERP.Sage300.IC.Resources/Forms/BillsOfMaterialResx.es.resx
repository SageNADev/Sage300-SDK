<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BillsOfMaterial" xml:space="preserve">
    <value>Listas de Materiales</value>
    <comment>Header</comment>
  </data>
  <data name="BomDescription" xml:space="preserve">
    <value>Descripción L.MAT</value>
    <comment>Field</comment>
  </data>
  <data name="BOMNumber" xml:space="preserve">
    <value>Número de L.MAT</value>
  </data>
  <data name="ChildEntity" xml:space="preserve">
    <value>CI – Listas de Materiales del Componente</value>
    <comment>Child PopUp Header</comment>
  </data>
  <data name="ComponentBOMNumber" xml:space="preserve">
    <value>Número L.MAT de Componente</value>
  </data>
  <data name="ComponentDescription" xml:space="preserve">
    <value>Descripción de Componente</value>
  </data>
  <data name="ComponentFormattedItemNo" xml:space="preserve">
    <value>N° Artículo Componente Formateado</value>
  </data>
  <data name="ComponentItemDescription" xml:space="preserve">
    <value>Descripción de Artículo Componente</value>
  </data>
  <data name="ComponentLineNumber" xml:space="preserve">
    <value>Número de Línea de Componente</value>
  </data>
  <data name="ComponentQuantity" xml:space="preserve">
    <value>Cantidad Componente</value>
  </data>
  <data name="Components" xml:space="preserve">
    <value>Componentes</value>
    <comment>Table Column</comment>
  </data>
  <data name="ComponetBOMNumber" xml:space="preserve">
    <value>Número L.MAT de Componente</value>
    <comment>Table Column</comment>
  </data>
  <data name="ComponetsItemNumber" xml:space="preserve">
    <value>Número Artículo de Componente</value>
  </data>
  <data name="CopyDetail" xml:space="preserve">
    <value>Copiar Detalle</value>
  </data>
  <data name="DeleteConfirmMessage" xml:space="preserve">
    <value>¿Está seguro que desea eliminar la lista de materiales {0} para el artículo {1}?</value>
    <comment>Delete Confirm Message</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>CI - Listas de Materiales</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FixedCost" xml:space="preserve">
    <value>Costo Fijo</value>
    <comment>Field</comment>
  </data>
  <data name="FormattedComponentItemNo" xml:space="preserve">
    <value>N° Artículo Componente Formateado</value>
  </data>
  <data name="FormattedMasterItemNumber" xml:space="preserve">
    <value>N° Artículo Maestro Formateado</value>
  </data>
  <data name="HideTree" xml:space="preserve">
    <value>Ocultar Árbol &gt;&gt;</value>
  </data>
  <data name="HideTree1" xml:space="preserve">
    <value>Ocultar Árbol</value>
    <comment>Button</comment>
  </data>
  <data name="IC0190" xml:space="preserve">
    <value>Componentes de Listas de Materiales</value>
    <comment>Export/Import</comment>
  </data>
  <data name="IC0200" xml:space="preserve">
    <value>Listas de Materiales</value>
    <comment>Export/Import</comment>
  </data>
  <data name="ItemInvalidMessage" xml:space="preserve">
    <value>No se pueden ensamblar los artículos que tienen un método de cálculo de costos especificado por el usuario.</value>
  </data>
  <data name="LoopCheck" xml:space="preserve">
    <value>Verificar por Retorno</value>
    <comment>Finder Column</comment>
  </data>
  <data name="MasterBOMNumber" xml:space="preserve">
    <value>N° L.MAT Maestro</value>
  </data>
  <data name="MasterDescription" xml:space="preserve">
    <value>Descripción Maestro</value>
  </data>
  <data name="MasterItemNo" xml:space="preserve">
    <value>Número Artículo Maestro</value>
    <comment>Field</comment>
  </data>
  <data name="MasterItemNoDesc" xml:space="preserve">
    <value>Descripción Número de Artículo Maestro</value>
    <comment>Field</comment>
  </data>
  <data name="MasterUnitOfMeasure" xml:space="preserve">
    <value>Unidad de Medida Maestra</value>
  </data>
  <data name="PerBuildQty" xml:space="preserve">
    <value>Por Cant. Completa</value>
    <comment>Field</comment>
  </data>
  <data name="SaveConfirmMessage" xml:space="preserve">
    <value>¿Desea eliminar los cambios de la lista de materiales {0} para el artículo {1}?</value>
    <comment>Save confirm Message</comment>
  </data>
  <data name="ShowTree" xml:space="preserve">
    <value>&lt;&lt;Mostrar Árbol</value>
    <comment>Button</comment>
  </data>
  <data name="ShowTree1" xml:space="preserve">
    <value>Mostrar Árbol</value>
    <comment>Button</comment>
  </data>
  <data name="UseAsDefault" xml:space="preserve">
    <value>Usar Como Predeterminado</value>
    <comment>Field</comment>
  </data>
  <data name="UserSpecifiedCost" xml:space="preserve">
    <value>Costo Especificado por el Usuario</value>
  </data>
  <data name="VariableCost" xml:space="preserve">
    <value>Costo Variable</value>
    <comment>Field</comment>
  </data>
</root>