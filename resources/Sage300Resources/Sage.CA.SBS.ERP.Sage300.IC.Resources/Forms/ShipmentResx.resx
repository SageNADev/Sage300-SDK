<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CurrencyDescription" xml:space="preserve">
    <value>Currency Description</value>
    <comment>Used in Currency Popup</comment>
  </data>
  <data name="CustomerExists" xml:space="preserve">
    <value>Customer Exists</value>
    <comment>Used in finder</comment>
  </data>
  <data name="CustomerNumberDescription" xml:space="preserve">
    <value>Customer Name</value>
    <comment>Used in finder</comment>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>Entered By</value>
    <comment>Used in finder</comment>
  </data>
  <data name="ICUniqueDocumentNumber" xml:space="preserve">
    <value>IC - Unique Document Number</value>
    <comment>Used in finder</comment>
  </data>
  <data name="JobRelated" xml:space="preserve">
    <value>Job Related</value>
    <comment>Used in finder</comment>
  </data>
  <data name="NextDetailLineNumber" xml:space="preserve">
    <value>Next Detail Line Number</value>
    <comment>Used in finder</comment>
  </data>
  <data name="PostingDate" xml:space="preserve">
    <value>Posting Date</value>
    <comment>Used in Shipment Number Popup</comment>
  </data>
  <data name="PostSequenceNumber" xml:space="preserve">
    <value>Post Sequence Number</value>
    <comment>Used in finder</comment>
  </data>
  <data name="RateOperation" xml:space="preserve">
    <value>Rate Operation</value>
    <comment>Used in Shipment Number Popup</comment>
  </data>
  <data name="RateOverride" xml:space="preserve">
    <value>Rate Override</value>
    <comment>Used in finder</comment>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>Record Deleted</value>
    <comment>Used in finder</comment>
  </data>
  <data name="RecordStatus" xml:space="preserve">
    <value>Record Status</value>
    <comment>Used in finder</comment>
  </data>
  <data name="SequenceNumber" xml:space="preserve">
    <value>Sequence Number</value>
    <comment>Used in finder</comment>
  </data>
  <data name="SerialNumberUniquifier" xml:space="preserve">
    <value>Serial Number Uniquifier</value>
    <comment>Used in finder</comment>
  </data>
  <data name="ShipDate" xml:space="preserve">
    <value>Ship Date</value>
    <comment>Used in Shipment Number Popup</comment>
  </data>
  <data name="SourceCurrency" xml:space="preserve">
    <value>Source Currency</value>
    <comment>Used in finder</comment>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>Transaction Number</value>
    <comment>Used in finder</comment>
  </data>
  <data name="ExtendedPrice" xml:space="preserve">
    <value>Extended Price</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="ManufacturersItemNumber" xml:space="preserve">
    <value>Manufacturer's Item Number</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="WIPAccount" xml:space="preserve">
    <value>WIP Account</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="WIPAccountDescription" xml:space="preserve">
    <value>WIP Account Description</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="ShipmentCurrency" xml:space="preserve">
    <value>Shipment Currency</value>
    <comment>Used in Exchange Rate Popup</comment>
  </data>
  <data name="RecordPrinted" xml:space="preserve">
    <value>Record Printed</value>
    <comment>Used in finder</comment>
  </data>
  <data name="Num1" xml:space="preserve">
    <value>1</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num10" xml:space="preserve">
    <value>10</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num11" xml:space="preserve">
    <value>11</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num12" xml:space="preserve">
    <value>12</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num2" xml:space="preserve">
    <value>2</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num3" xml:space="preserve">
    <value>3</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num4" xml:space="preserve">
    <value>4</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num5" xml:space="preserve">
    <value>5</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num6" xml:space="preserve">
    <value>6</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num7" xml:space="preserve">
    <value>7</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num8" xml:space="preserve">
    <value>8</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="Num9" xml:space="preserve">
    <value>9</value>
    <comment>Used in Enum</comment>
  </data>
  <data name="ShipmentTitle" xml:space="preserve">
    <value>I/C Shipments</value>
    <comment>Used for title</comment>
  </data>
  <data name="PostSuccess" xml:space="preserve">
    <value>Posting completed. {0}: {1}</value>
    <comment>Used in post success</comment>
  </data>
  <data name="IC0630" xml:space="preserve">
    <value>Shipment Detail</value>
    <comment>Used in Import/Export </comment>
  </data>
  <data name="IC0632" xml:space="preserve">
    <value>Shipment Detail Lot Number</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0635" xml:space="preserve">
    <value>Shipment Detail Optional Field</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0640" xml:space="preserve">
    <value>Shipment Header</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0645" xml:space="preserve">
    <value>Shipment Optional Field</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="CustomerItemNumber" xml:space="preserve">
    <value>Customer Item Number</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="DateValue" xml:space="preserve">
    <value>Date Value</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Shipments</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="IC0636" xml:space="preserve">
    <value>Shipment Detail Serial Number</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="TextValue" xml:space="preserve">
    <value>Text Value</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="ShipmentDeleted" xml:space="preserve">
    <value>The shipment has been deleted.</value>
    <comment>Used for Deleted shipments</comment>
  </data>
  <data name="CloseLT" xml:space="preserve">
    <value>Close LT</value>
  </data>
  <data name="CloseSN" xml:space="preserve">
    <value>Close SN</value>
  </data>
  <data name="ForcePopupLT" xml:space="preserve">
    <value>Force Pop-up LT</value>
  </data>
  <data name="ForcePopupSN" xml:space="preserve">
    <value>Force Pop-up SN</value>
  </data>
  <data name="GLControlAmountShipment" xml:space="preserve">
    <value>GL Control Amount - Shipment</value>
  </data>
  <data name="GLControlAmountShipmentRet" xml:space="preserve">
    <value>GL Control Amount - Shipment Return</value>
  </data>
  <data name="GLCostVarianceShipment" xml:space="preserve">
    <value>GL Cost Variance - Shipment</value>
  </data>
  <data name="GLCostVarianceShipmentRetu" xml:space="preserve">
    <value>GL Cost Variance - Shipment Return</value>
  </data>
  <data name="InterprocessCommID" xml:space="preserve">
    <value>Inter-Process Command ID</value>
  </data>
  <data name="LTSetID" xml:space="preserve">
    <value>LT Set ID</value>
  </data>
  <data name="NumberOfSerials" xml:space="preserve">
    <value>Number of Serials</value>
  </data>
  <data name="Obsolete" xml:space="preserve">
    <value>***Obsolete***</value>
    <comment>Used in Import/Export</comment>
  </data>
  <data name="PMWIPAccount" xml:space="preserve">
    <value>P/M WIP Account</value>
  </data>
  <data name="PopupLT" xml:space="preserve">
    <value>Pop-up LT</value>
  </data>
  <data name="PopupSN" xml:space="preserve">
    <value>Pop-up SN</value>
  </data>
  <data name="InvalidLocation" xml:space="preserve">
    <value>Location cannot be blank.</value>
    <comment>Used in Detail Grid</comment>
  </data>
  <data name="QuantityWarning" xml:space="preserve">
    <value>Posting this shipment will reduce the item quantity to below zero at this location. Do you want to proceed?</value>
    <comment>Used for quantity validation </comment>
  </data>
  <data name="ShipmentDescription" xml:space="preserve">
    <value>Shipment Description</value>
  </data>
  <data name="ShipmentReference" xml:space="preserve">
    <value>Shipment Reference</value>
  </data>
  <data name="CurrencySpreadRange" xml:space="preserve">
    <value>The currency rate entered lies outside the spread specified in the currency tables.</value>
  </data>
  <data name="ShipmentNumberErrorMessage" xml:space="preserve">
    <value>Shipment Number cannot be blank.</value>
  </data>
  <data name="ReturnNumber" xml:space="preserve">
    <value>Return Number</value>
  </data>
  <data name="SaveMessage" xml:space="preserve">
    <value>Saved successfully. The record has to be posted before it will be costed. {0}: {1}.</value>
  </data>
</root>