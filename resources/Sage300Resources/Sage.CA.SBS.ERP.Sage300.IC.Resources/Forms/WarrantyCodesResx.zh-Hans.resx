<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DaysExceed" xml:space="preserve">
    <value>天数不能超过999,999。</value>
  </data>
  <data name="EffectiveDays" xml:space="preserve">
    <value>生效天数</value>
    <comment>Column</comment>
  </data>
  <data name="EmptyPERIOD" xml:space="preserve">
    <value>设置期间行以便终生保修为假，天数为零，以及描述为空将导致这一期间行被删除。是否继续？</value>
    <comment>Message</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存货控制保修代码</value>
    <comment>Screen Title</comment>
  </data>
  <data name="Expiry" xml:space="preserve">
    <value>终身</value>
    <comment>Field</comment>
  </data>
  <data name="IC0850" xml:space="preserve">
    <value>保修代码</value>
  </data>
  <data name="Period1Days" xml:space="preserve">
    <value>期间1天数</value>
  </data>
  <data name="Period1Description" xml:space="preserve">
    <value>期间1描述</value>
  </data>
  <data name="Period1EffectiveDays" xml:space="preserve">
    <value>期间1生效天数</value>
  </data>
  <data name="Period1isLifetime" xml:space="preserve">
    <value>期间1为终身</value>
  </data>
  <data name="Period2Days" xml:space="preserve">
    <value>期间2天数</value>
  </data>
  <data name="Period2Description" xml:space="preserve">
    <value>期间2描述</value>
  </data>
  <data name="Period2EffectiveDays" xml:space="preserve">
    <value>期间2生效天数</value>
  </data>
  <data name="Period2isLifetime" xml:space="preserve">
    <value>期间2为终身</value>
  </data>
  <data name="Period3Days" xml:space="preserve">
    <value>期间3天数</value>
  </data>
  <data name="Period3Description" xml:space="preserve">
    <value>期间3描述</value>
  </data>
  <data name="Period3EffectiveDays" xml:space="preserve">
    <value>期间3生效天数</value>
  </data>
  <data name="Period3isLifetime" xml:space="preserve">
    <value>期间3为终身</value>
  </data>
  <data name="Period4Days" xml:space="preserve">
    <value>期间4天数</value>
  </data>
  <data name="Period4Description" xml:space="preserve">
    <value>期间4描述</value>
  </data>
  <data name="Period4EffectiveDays" xml:space="preserve">
    <value>期间4生效天数</value>
  </data>
  <data name="Period4isLifetime" xml:space="preserve">
    <value>期间4为终身</value>
  </data>
  <data name="Period5Days" xml:space="preserve">
    <value>期间5天数</value>
  </data>
  <data name="Period5Description" xml:space="preserve">
    <value>期间5描述</value>
  </data>
  <data name="Period5EffectiveDays" xml:space="preserve">
    <value>期间5生效天数</value>
  </data>
  <data name="Period5isLifetime" xml:space="preserve">
    <value>期间5为终身</value>
  </data>
  <data name="WarrantyCode" xml:space="preserve">
    <value>保修代码</value>
    <comment>Field</comment>
  </data>
  <data name="WarrantyDays" xml:space="preserve">
    <value>保修天数</value>
    <comment>Column</comment>
  </data>
</root>