<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjustmentDetails" xml:space="preserve">
    <value>調整明細</value>
    <comment>List - Option</comment>
  </data>
  <data name="Adjustments" xml:space="preserve">
    <value>調整</value>
    <comment>List - Option</comment>
  </data>
  <data name="Assemblies" xml:space="preserve">
    <value>組裝</value>
    <comment>List - Option</comment>
  </data>
  <data name="AutoInsert" xml:space="preserve">
    <value>自動插入</value>
    <comment>Table Column</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存貨控制自選欄位</value>
    <comment>Screen Title</comment>
  </data>
  <data name="Explanation" xml:space="preserve">
    <value>指定此一自選欄位是否包括在總帳交易和發送到其它分類帳的交易中。</value>
    <comment>Settings Screen - Instruction</comment>
  </data>
  <data name="InternalUsage" xml:space="preserve">
    <value>內部使用</value>
    <comment>List - Option</comment>
  </data>
  <data name="InternalUsageDetails" xml:space="preserve">
    <value>內部使用明細</value>
    <comment>List - Option</comment>
  </data>
  <data name="ItemLots" xml:space="preserve">
    <value>產品批別</value>
    <comment>List - Option</comment>
  </data>
  <data name="Items" xml:space="preserve">
    <value>產品</value>
    <comment>List - Option</comment>
  </data>
  <data name="ItemSerials" xml:space="preserve">
    <value>產品系列</value>
    <comment>List - Option</comment>
  </data>
  <data name="OptionalFieldDesc" xml:space="preserve">
    <value>自選欄位描述</value>
    <comment>Table Column</comment>
  </data>
  <data name="OptionalFieldsFor" xml:space="preserve">
    <value>自選欄位屬於</value>
    <comment>List</comment>
  </data>
  <data name="ReceiptDetails" xml:space="preserve">
    <value>進貨明細</value>
    <comment>List - Option</comment>
  </data>
  <data name="Receipts" xml:space="preserve">
    <value>進貨</value>
    <comment>List - Option</comment>
  </data>
  <data name="ReorderQuantities" xml:space="preserve">
    <value>再訂購數量</value>
    <comment>List - Option</comment>
  </data>
  <data name="Settings1" xml:space="preserve">
    <value>自選欄位設定</value>
    <comment>Settings Screen - Screen name</comment>
  </data>
  <data name="ShipmentDetails" xml:space="preserve">
    <value>發貨明細</value>
    <comment>List - Option</comment>
  </data>
  <data name="Shipments" xml:space="preserve">
    <value>發貨</value>
    <comment>List - Option</comment>
  </data>
  <data name="TransferDetails" xml:space="preserve">
    <value>轉移明細</value>
    <comment>List - Option</comment>
  </data>
  <data name="Transfers" xml:space="preserve">
    <value>轉移</value>
    <comment>List - Option</comment>
  </data>
  <data name="ValueDefault" xml:space="preserve">
    <value>預設值</value>
    <comment>Table Column</comment>
  </data>
  <data name="ValueDesc" xml:space="preserve">
    <value>值描述</value>
    <comment>Table Column</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>值已設</value>
    <comment>Table Column</comment>
  </data>
  <data name="OptionalField" xml:space="preserve">
    <value>自選欄位</value>
    <comment>Table Column</comment>
  </data>
  <data name="SettingsDescription" xml:space="preserve">
    <value>這些設定決定了此一自選欄位是否包括在總帳交易和發送到其它分類帳的交易中。</value>
    <comment>Settings Description</comment>
  </data>
  <data name="DefaultValueMessage" xml:space="preserve">
    <value>自選欄位{0}預設值</value>
    <comment>Added</comment>
  </data>
  <data name="IC0377" xml:space="preserve">
    <value>自選欄位</value>
    <comment>Used in Export Import</comment>
  </data>
  <data name="IC0378" xml:space="preserve">
    <value>自選欄位地點</value>
    <comment>Used in Export Import</comment>
  </data>
  <data name="AllowBlank" xml:space="preserve">
    <value>允許空置</value>
    <comment>Import/Export</comment>
  </data>
  <data name="CostofSales" xml:space="preserve">
    <value>銷售成本</value>
    <comment>Import/Export</comment>
  </data>
  <data name="Decimals" xml:space="preserve">
    <value>小數位數</value>
    <comment>Import/Export</comment>
  </data>
  <data name="DefaultDateValue" xml:space="preserve">
    <value>預設日期值</value>
    <comment>Import/Export</comment>
  </data>
  <data name="DefaultIntegerValue" xml:space="preserve">
    <value>預設整數值</value>
    <comment>Import/Export</comment>
  </data>
  <data name="DefaultMoneyValue" xml:space="preserve">
    <value>預設金額值</value>
    <comment>Import/Export</comment>
  </data>
  <data name="DefaultNumberValue" xml:space="preserve">
    <value>預設數字值</value>
    <comment>Import/Export</comment>
  </data>
  <data name="DefaultTextValue" xml:space="preserve">
    <value>預設文本值</value>
    <comment>Import/Export</comment>
  </data>
  <data name="DefaultTimeValue" xml:space="preserve">
    <value>預設時間值</value>
    <comment>Import/Export</comment>
  </data>
  <data name="DefaultValueDescription" xml:space="preserve">
    <value>預設值描述</value>
    <comment>Import/Export</comment>
  </data>
  <data name="DefaultYesOrNoValue" xml:space="preserve">
    <value>預設是/否值</value>
    <comment>Import/Export</comment>
  </data>
  <data name="Length" xml:space="preserve">
    <value>長度</value>
    <comment>Import/Export</comment>
  </data>
  <data name="NumberofValues" xml:space="preserve">
    <value>值數目</value>
    <comment>Import/Export</comment>
  </data>
  <data name="Overhead" xml:space="preserve">
    <value>間接費用</value>
    <comment>Import/Export</comment>
  </data>
  <data name="Required" xml:space="preserve">
    <value>必需</value>
    <comment>Import/Export</comment>
  </data>
  <data name="Type" xml:space="preserve">
    <value>類型</value>
    <comment>Import/Export</comment>
  </data>
  <data name="TypedDefaultValueFieldIndex" xml:space="preserve">
    <value>鍵入的預設值欄位索引</value>
    <comment>Import/Export</comment>
  </data>
  <data name="Validate" xml:space="preserve">
    <value>驗證</value>
    <comment>Import/Export</comment>
  </data>
  <data name="WorkinProgress" xml:space="preserve">
    <value>半成品</value>
    <comment>Import/Export</comment>
  </data>
  <data name="DefaultAmountValue" xml:space="preserve">
    <value>預設金額值</value>
    <comment>Import/Export</comment>
  </data>
</root>