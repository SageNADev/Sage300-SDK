<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjustmentDate" xml:space="preserve">
    <value>Adjustment Date</value>
    <comment>Field</comment>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>Entered By</value>
    <comment>Field</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>I/C Adjustments</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FromPhysicalInventory" xml:space="preserve">
    <value>From Physical Inventory</value>
    <comment>Field</comment>
  </data>
  <data name="ICUniqueDocumentNumber" xml:space="preserve">
    <value>IC Unique Document Number</value>
    <comment>Field</comment>
  </data>
  <data name="JobRelated" xml:space="preserve">
    <value>Job Related</value>
    <comment>Field</comment>
  </data>
  <data name="NextDetailLineNumber" xml:space="preserve">
    <value>Next Detail Line Number</value>
    <comment>Field</comment>
  </data>
  <data name="PMAdjustmentNumber" xml:space="preserve">
    <value>PM Adjustment Number</value>
    <comment>Field</comment>
  </data>
  <data name="PostingDate" xml:space="preserve">
    <value>Posting Date</value>
    <comment>Field</comment>
  </data>
  <data name="PostSequenceNumber" xml:space="preserve">
    <value>Post Sequence Number</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommand" xml:space="preserve">
    <value>Process Command</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandLocation" xml:space="preserve">
    <value>Process Command Location</value>
    <comment>Field</comment>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>Record Deleted</value>
    <comment>Field</comment>
  </data>
  <data name="RecordPrinted" xml:space="preserve">
    <value>Record Printed</value>
    <comment>Field</comment>
  </data>
  <data name="RecordStatus" xml:space="preserve">
    <value>Record Status</value>
    <comment>Field</comment>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>Transaction Number</value>
    <comment>Field</comment>
  </data>
  <data name="BothDecrease" xml:space="preserve">
    <value>Both Decrease</value>
    <comment>Field</comment>
  </data>
  <data name="BothIncrease" xml:space="preserve">
    <value>Both Increase</value>
    <comment>Field</comment>
  </data>
  <data name="CostDecrease" xml:space="preserve">
    <value>Cost Decrease</value>
    <comment>Field</comment>
  </data>
  <data name="CostIncrease" xml:space="preserve">
    <value>Cost Increase</value>
    <comment>Field</comment>
  </data>
  <data name="OffsetBucket" xml:space="preserve">
    <value>Offset Bucket</value>
    <comment>Field</comment>
  </data>
  <data name="Prorate" xml:space="preserve">
    <value>Prorate</value>
    <comment>Field</comment>
  </data>
  <data name="QuantityDecrease" xml:space="preserve">
    <value>Quantity Decrease</value>
    <comment>Field</comment>
  </data>
  <data name="QuantityIncrease" xml:space="preserve">
    <value>Quantity Increase</value>
    <comment>Field</comment>
  </data>
  <data name="SpecificBucket" xml:space="preserve">
    <value>Specific Bucket</value>
    <comment>Field</comment>
  </data>
  <data name="IC0110" xml:space="preserve">
    <value>Adjustment Details</value>
    <comment>Field</comment>
  </data>
  <data name="IC0120" xml:space="preserve">
    <value>Adjustment</value>
    <comment>Field</comment>
  </data>
  <data name="IC0113" xml:space="preserve">
    <value>Adjustment Detail Serial Numbers</value>
    <comment>Field</comment>
  </data>
  <data name="IC0115" xml:space="preserve">
    <value>Adjustment Detail Opt. Fields</value>
    <comment>Field</comment>
  </data>
  <data name="IC0117" xml:space="preserve">
    <value>Adjustment Detail Lot Numbers</value>
    <comment>Field</comment>
  </data>
  <data name="IC0125" xml:space="preserve">
    <value>Adjustment Header Opt. Fields</value>
    <comment>Field</comment>
  </data>
  <data name="AccountDescription" xml:space="preserve">
    <value>Account Description</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentAcct" xml:space="preserve">
    <value>Adjustment Account</value>
    <comment>Field</comment>
  </data>
  <data name="BucketType" xml:space="preserve">
    <value>Bucket Type</value>
    <comment>Field</comment>
  </data>
  <data name="CostAdjustment" xml:space="preserve">
    <value>Cost Adjustment</value>
    <comment>Field</comment>
  </data>
  <data name="CostDate" xml:space="preserve">
    <value>Cost Date</value>
    <comment>Field</comment>
  </data>
  <data name="CostUOM" xml:space="preserve">
    <value>Cost UOM</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentWriteOffAccount" xml:space="preserve">
    <value>Adjustment/Write-Off Account</value>
    <comment>Field</comment>
  </data>
  <data name="CloseLT" xml:space="preserve">
    <value>Close LT</value>
    <comment>Field</comment>
  </data>
  <data name="CloseSN" xml:space="preserve">
    <value>Close SN</value>
    <comment>Field</comment>
  </data>
  <data name="CostingSequenceNumber" xml:space="preserve">
    <value>Costing Sequence Number</value>
    <comment>Field</comment>
  </data>
  <data name="ForcePopupLT" xml:space="preserve">
    <value>Force Pop-up LT</value>
    <comment>Field</comment>
  </data>
  <data name="ForcePopupSN" xml:space="preserve">
    <value>Force Pop-up SN</value>
    <comment>Field</comment>
  </data>
  <data name="InterprocessCommID" xml:space="preserve">
    <value>Inter-process Command ID</value>
    <comment>Field</comment>
  </data>
  <data name="LotCost" xml:space="preserve">
    <value>Lot Cost</value>
    <comment>Field</comment>
  </data>
  <data name="LotsCost" xml:space="preserve">
    <value>Lots Cost</value>
    <comment>Field</comment>
  </data>
  <data name="LTSetID" xml:space="preserve">
    <value>LT Set ID</value>
    <comment>Field</comment>
  </data>
  <data name="NumberOfSerials" xml:space="preserve">
    <value>Number of Serials</value>
    <comment>Field</comment>
  </data>
  <data name="OriginalWriteOffAccount" xml:space="preserve">
    <value>Original Write-Off Account</value>
    <comment>Field</comment>
  </data>
  <data name="PopupLT" xml:space="preserve">
    <value>Pop-up LT</value>
    <comment>Field</comment>
  </data>
  <data name="PopupSN" xml:space="preserve">
    <value>Pop-up SN</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandItemNumber" xml:space="preserve">
    <value>Process Command Item Number</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandSortCode" xml:space="preserve">
    <value>Process Command Sort Code</value>
    <comment>Field</comment>
  </data>
  <data name="SerialsCost" xml:space="preserve">
    <value>Serials Cost</value>
    <comment>Field</comment>
  </data>
  <data name="ReceiptCost" xml:space="preserve">
    <value>Receipt Cost</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentDescription" xml:space="preserve">
    <value>Adjustment Description</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentReference" xml:space="preserve">
    <value>Adjustment Reference</value>
    <comment>Field</comment>
  </data>
</root>