<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjustmentDate" xml:space="preserve">
    <value>调整日期</value>
    <comment>Field</comment>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>输入者</value>
    <comment>Field</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存货控制调整</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FromPhysicalInventory" xml:space="preserve">
    <value>从实物盘存</value>
    <comment>Field</comment>
  </data>
  <data name="ICUniqueDocumentNumber" xml:space="preserve">
    <value>存货控制唯一凭证编号</value>
    <comment>Field</comment>
  </data>
  <data name="JobRelated" xml:space="preserve">
    <value>作业相关</value>
    <comment>Field</comment>
  </data>
  <data name="NextDetailLineNumber" xml:space="preserve">
    <value>下一明细行编号</value>
    <comment>Field</comment>
  </data>
  <data name="PMAdjustmentNumber" xml:space="preserve">
    <value>项目成本管理调整编号</value>
    <comment>Field</comment>
  </data>
  <data name="PostingDate" xml:space="preserve">
    <value>过帐日期</value>
    <comment>Field</comment>
  </data>
  <data name="PostSequenceNumber" xml:space="preserve">
    <value>过帐序列编号</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommand" xml:space="preserve">
    <value>处理指令</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandLocation" xml:space="preserve">
    <value>处理指令地点</value>
    <comment>Field</comment>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>记录已删除</value>
    <comment>Field</comment>
  </data>
  <data name="RecordPrinted" xml:space="preserve">
    <value>记录已打印</value>
    <comment>Field</comment>
  </data>
  <data name="RecordStatus" xml:space="preserve">
    <value>记录状态</value>
    <comment>Field</comment>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>交易编号</value>
    <comment>Field</comment>
  </data>
  <data name="BothDecrease" xml:space="preserve">
    <value>两者皆减</value>
    <comment>Field</comment>
  </data>
  <data name="BothIncrease" xml:space="preserve">
    <value>两者皆增</value>
    <comment>Field</comment>
  </data>
  <data name="CostDecrease" xml:space="preserve">
    <value>成本减少</value>
    <comment>Field</comment>
  </data>
  <data name="CostIncrease" xml:space="preserve">
    <value>成本增加</value>
    <comment>Field</comment>
  </data>
  <data name="OffsetBucket" xml:space="preserve">
    <value>抵销存储集</value>
    <comment>Field</comment>
  </data>
  <data name="Prorate" xml:space="preserve">
    <value>摊配</value>
    <comment>Field</comment>
  </data>
  <data name="QuantityDecrease" xml:space="preserve">
    <value>数量减少</value>
    <comment>Field</comment>
  </data>
  <data name="QuantityIncrease" xml:space="preserve">
    <value>数量增加</value>
    <comment>Field</comment>
  </data>
  <data name="SpecificBucket" xml:space="preserve">
    <value>特定集合</value>
    <comment>Field</comment>
  </data>
  <data name="IC0110" xml:space="preserve">
    <value>调整明细</value>
    <comment>Field</comment>
  </data>
  <data name="IC0120" xml:space="preserve">
    <value>调整</value>
    <comment>Field</comment>
  </data>
  <data name="IC0113" xml:space="preserve">
    <value>调整明细系列编号</value>
    <comment>Field</comment>
  </data>
  <data name="IC0115" xml:space="preserve">
    <value>调整明细可选字段</value>
    <comment>Field</comment>
  </data>
  <data name="IC0117" xml:space="preserve">
    <value>调整明细批别编号</value>
    <comment>Field</comment>
  </data>
  <data name="IC0125" xml:space="preserve">
    <value>调整标头可选字段</value>
    <comment>Field</comment>
  </data>
  <data name="AccountDescription" xml:space="preserve">
    <value>科目描述</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentAcct" xml:space="preserve">
    <value>调整科目</value>
    <comment>Field</comment>
  </data>
  <data name="BucketType" xml:space="preserve">
    <value>集类型</value>
    <comment>Field</comment>
  </data>
  <data name="CostAdjustment" xml:space="preserve">
    <value>成本调整</value>
    <comment>Field</comment>
  </data>
  <data name="CostDate" xml:space="preserve">
    <value>成本日期</value>
    <comment>Field</comment>
  </data>
  <data name="CostUOM" xml:space="preserve">
    <value>成本计量单位</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentWriteOffAccount" xml:space="preserve">
    <value>调整/冲销科目</value>
    <comment>Field</comment>
  </data>
  <data name="CloseLT" xml:space="preserve">
    <value>关闭 LT</value>
    <comment>Field</comment>
  </data>
  <data name="CloseSN" xml:space="preserve">
    <value>关闭 SN</value>
    <comment>Field</comment>
  </data>
  <data name="CostingSequenceNumber" xml:space="preserve">
    <value>计算成本序列号</value>
    <comment>Field</comment>
  </data>
  <data name="ForcePopupLT" xml:space="preserve">
    <value>强制弹出 LT</value>
    <comment>Field</comment>
  </data>
  <data name="ForcePopupSN" xml:space="preserve">
    <value>强制弹出 SN</value>
    <comment>Field</comment>
  </data>
  <data name="InterprocessCommID" xml:space="preserve">
    <value>进程间指令标识</value>
    <comment>Field</comment>
  </data>
  <data name="LotCost" xml:space="preserve">
    <value>批别成本</value>
    <comment>Field</comment>
  </data>
  <data name="LotsCost" xml:space="preserve">
    <value>批别成本</value>
    <comment>Field</comment>
  </data>
  <data name="LTSetID" xml:space="preserve">
    <value>LT 集合标识</value>
    <comment>Field</comment>
  </data>
  <data name="NumberOfSerials" xml:space="preserve">
    <value>系列数目</value>
    <comment>Field</comment>
  </data>
  <data name="OriginalWriteOffAccount" xml:space="preserve">
    <value>原始冲销科目</value>
    <comment>Field</comment>
  </data>
  <data name="PopupLT" xml:space="preserve">
    <value>弹出批别追踪</value>
    <comment>Field</comment>
  </data>
  <data name="PopupSN" xml:space="preserve">
    <value>弹出系列编号</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandItemNumber" xml:space="preserve">
    <value>处理指令货品编号</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandSortCode" xml:space="preserve">
    <value>处理指令排序代码</value>
    <comment>Field</comment>
  </data>
  <data name="SerialsCost" xml:space="preserve">
    <value>系列成本</value>
    <comment>Field</comment>
  </data>
  <data name="ReceiptCost" xml:space="preserve">
    <value>进货成本</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentDescription" xml:space="preserve">
    <value>调整描述</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentReference" xml:space="preserve">
    <value>调整参考</value>
    <comment>Field</comment>
  </data>
</root>