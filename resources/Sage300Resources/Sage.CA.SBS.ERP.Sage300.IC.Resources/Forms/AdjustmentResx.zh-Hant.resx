<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjustmentDate" xml:space="preserve">
    <value>調整日期</value>
    <comment>Field</comment>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>輸入者</value>
    <comment>Field</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存貨控制調整</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FromPhysicalInventory" xml:space="preserve">
    <value>從實地盤點</value>
    <comment>Field</comment>
  </data>
  <data name="ICUniqueDocumentNumber" xml:space="preserve">
    <value>存貨控制唯一憑證編號</value>
    <comment>Field</comment>
  </data>
  <data name="JobRelated" xml:space="preserve">
    <value>作業相關</value>
    <comment>Field</comment>
  </data>
  <data name="NextDetailLineNumber" xml:space="preserve">
    <value>下一明細行編號</value>
    <comment>Field</comment>
  </data>
  <data name="PMAdjustmentNumber" xml:space="preserve">
    <value>專案成本管理調整編號</value>
    <comment>Field</comment>
  </data>
  <data name="PostingDate" xml:space="preserve">
    <value>過帳日期</value>
    <comment>Field</comment>
  </data>
  <data name="PostSequenceNumber" xml:space="preserve">
    <value>過帳序列編號</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommand" xml:space="preserve">
    <value>處理指令</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandLocation" xml:space="preserve">
    <value>處理指令地點</value>
    <comment>Field</comment>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>記錄已刪除</value>
    <comment>Field</comment>
  </data>
  <data name="RecordPrinted" xml:space="preserve">
    <value>記錄已列印</value>
    <comment>Field</comment>
  </data>
  <data name="RecordStatus" xml:space="preserve">
    <value>記錄狀態</value>
    <comment>Field</comment>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>交易編號</value>
    <comment>Field</comment>
  </data>
  <data name="BothDecrease" xml:space="preserve">
    <value>兩者皆減</value>
    <comment>Field</comment>
  </data>
  <data name="BothIncrease" xml:space="preserve">
    <value>兩者皆增</value>
    <comment>Field</comment>
  </data>
  <data name="CostDecrease" xml:space="preserve">
    <value>成本減少</value>
    <comment>Field</comment>
  </data>
  <data name="CostIncrease" xml:space="preserve">
    <value>成本增加</value>
    <comment>Field</comment>
  </data>
  <data name="OffsetBucket" xml:space="preserve">
    <value>沖銷集合</value>
    <comment>Field</comment>
  </data>
  <data name="Prorate" xml:space="preserve">
    <value>攤配</value>
    <comment>Field</comment>
  </data>
  <data name="QuantityDecrease" xml:space="preserve">
    <value>數量減少</value>
    <comment>Field</comment>
  </data>
  <data name="QuantityIncrease" xml:space="preserve">
    <value>數量增加</value>
    <comment>Field</comment>
  </data>
  <data name="SpecificBucket" xml:space="preserve">
    <value>特定集合</value>
    <comment>Field</comment>
  </data>
  <data name="IC0110" xml:space="preserve">
    <value>調整明細</value>
    <comment>Field</comment>
  </data>
  <data name="IC0120" xml:space="preserve">
    <value>調整</value>
    <comment>Field</comment>
  </data>
  <data name="IC0113" xml:space="preserve">
    <value>調整明細系列編號</value>
    <comment>Field</comment>
  </data>
  <data name="IC0115" xml:space="preserve">
    <value>調整明細自選欄位</value>
    <comment>Field</comment>
  </data>
  <data name="IC0117" xml:space="preserve">
    <value>調整明細批別編號</value>
    <comment>Field</comment>
  </data>
  <data name="IC0125" xml:space="preserve">
    <value>調整標頭自選欄位</value>
    <comment>Field</comment>
  </data>
  <data name="AccountDescription" xml:space="preserve">
    <value>科目描述</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentAcct" xml:space="preserve">
    <value>調整科目</value>
    <comment>Field</comment>
  </data>
  <data name="BucketType" xml:space="preserve">
    <value>集類型</value>
    <comment>Field</comment>
  </data>
  <data name="CostAdjustment" xml:space="preserve">
    <value>成本調整</value>
    <comment>Field</comment>
  </data>
  <data name="CostDate" xml:space="preserve">
    <value>成本日期</value>
    <comment>Field</comment>
  </data>
  <data name="CostUOM" xml:space="preserve">
    <value>成本UOM</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentWriteOffAccount" xml:space="preserve">
    <value>調整/沖銷科目</value>
    <comment>Field</comment>
  </data>
  <data name="CloseLT" xml:space="preserve">
    <value>關閉LT</value>
    <comment>Field</comment>
  </data>
  <data name="CloseSN" xml:space="preserve">
    <value>關閉SN</value>
    <comment>Field</comment>
  </data>
  <data name="CostingSequenceNumber" xml:space="preserve">
    <value>計算成本序號</value>
    <comment>Field</comment>
  </data>
  <data name="ForcePopupLT" xml:space="preserve">
    <value>強制彈出LT</value>
    <comment>Field</comment>
  </data>
  <data name="ForcePopupSN" xml:space="preserve">
    <value>強制彈出SN</value>
    <comment>Field</comment>
  </data>
  <data name="InterprocessCommID" xml:space="preserve">
    <value>進程間指令代號</value>
    <comment>Field</comment>
  </data>
  <data name="LotCost" xml:space="preserve">
    <value>批別成本</value>
    <comment>Field</comment>
  </data>
  <data name="LotsCost" xml:space="preserve">
    <value>批別成本</value>
    <comment>Field</comment>
  </data>
  <data name="LTSetID" xml:space="preserve">
    <value>LT集合代號</value>
    <comment>Field</comment>
  </data>
  <data name="NumberOfSerials" xml:space="preserve">
    <value>系列數目</value>
    <comment>Field</comment>
  </data>
  <data name="OriginalWriteOffAccount" xml:space="preserve">
    <value>原始沖銷科目</value>
    <comment>Field</comment>
  </data>
  <data name="PopupLT" xml:space="preserve">
    <value>強制彈出LT</value>
    <comment>Field</comment>
  </data>
  <data name="PopupSN" xml:space="preserve">
    <value>強制彈出SN</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandItemNumber" xml:space="preserve">
    <value>處理命令產品編號</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessCommandSortCode" xml:space="preserve">
    <value>處理命令排序代碼</value>
    <comment>Field</comment>
  </data>
  <data name="SerialsCost" xml:space="preserve">
    <value>系列成本</value>
    <comment>Field</comment>
  </data>
  <data name="ReceiptCost" xml:space="preserve">
    <value>進貨成本</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentDescription" xml:space="preserve">
    <value>調整描述</value>
    <comment>Field</comment>
  </data>
  <data name="AdjustmentReference" xml:space="preserve">
    <value>調整參考</value>
    <comment>Field</comment>
  </data>
</root>