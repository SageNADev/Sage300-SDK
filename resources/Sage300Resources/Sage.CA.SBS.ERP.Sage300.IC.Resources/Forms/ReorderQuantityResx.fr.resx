<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeleteReorderQuantity" xml:space="preserve">
    <value>Voulez-vous vraiment supprimer cet enregistrement d'approvisionnement?</value>
    <comment>Confirmation</comment>
  </data>
  <data name="DeleteReorderQuantityPeriod" xml:space="preserve">
    <value>Supprimer la quantité de réapprovisionnement pour la période {0}?</value>
    <comment>Confirmation</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Quantités de réapprovisionnement de GS</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ErrorQuantity" xml:space="preserve">
    <value>La quantité minimum doit être inférieure ou égale à la quantité maximum.</value>
    <comment>Error</comment>
  </data>
  <data name="IC0599" xml:space="preserve">
    <value>Quantités de réapprovisionnement</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="IC0600" xml:space="preserve">
    <value>Détails quantités de réapprovisionnement</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="IC0601" xml:space="preserve">
    <value>Champs optionnels quantités de réapprovisionnement</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="InvalidLocationDetailMessage" xml:space="preserve">
    <value>L'emplacement "{0}" n'existe pas pour l'article "{1}".</value>
    <comment>Error</comment>
  </data>
  <data name="ItemNotAllowed" xml:space="preserve">
    <value>L'article n'est pas autorisé à cet emplacement.</value>
    <comment>Error</comment>
  </data>
  <data name="LogicalLocationMessage" xml:space="preserve">
    <value>Le code de l'emplacement "{0}" se réfère à un emplacement logique et ne peut pas être spécifié ici. Un emplacement logique peut seulement être utilisé dans Transferts de GS.</value>
    <comment>Error</comment>
  </data>
  <data name="MaximumQuantity" xml:space="preserve">
    <value>Quantité maximum</value>
    <comment>Field</comment>
  </data>
  <data name="MinimumQuantity" xml:space="preserve">
    <value>Quantité minimum</value>
    <comment>Field</comment>
  </data>
  <data name="NonStockItemError" xml:space="preserve">
    <value>Les quantités de réapprovisionnement ne peuvent pas être entrées pour des articles hors-stock.</value>
    <comment>Error message</comment>
  </data>
  <data name="NotActive" xml:space="preserve">
    <value>{0} {1} n’est pas actif(ve).</value>
    <comment>Error</comment>
  </data>
  <data name="NumberOfDetails" xml:space="preserve">
    <value>Nombre de détails</value>
    <comment>Field</comment>
  </data>
  <data name="PeriodEnd" xml:space="preserve">
    <value>Fin de période</value>
    <comment>Field</comment>
  </data>
  <data name="PeriodStart" xml:space="preserve">
    <value>Début de période</value>
    <comment>Field</comment>
  </data>
  <data name="ProjectedSalesQty" xml:space="preserve">
    <value>Ventes prévues</value>
    <comment>Field</comment>
  </data>
  <data name="Ready for UAT" xml:space="preserve">
    <value>Conclu</value>
    <comment>Complete</comment>
  </data>
  <data name="ReorderFor" xml:space="preserve">
    <value>Réapprovionner pour</value>
    <comment>Field</comment>
  </data>
  <data name="ReorderForAllError" xml:space="preserve">
    <value>Impossible de définir un réapprovisionnement de quantités pour un emplacement spécifique de l'article {0} lorsqu'il y a déjà des quantités réapprovisionnées pour tous les emplacements.</value>
    <comment>Error</comment>
  </data>
  <data name="ReorderForSpecificError" xml:space="preserve">
    <value>Impossible de définir un réapprovisionnement de quantités pour tous les emplacements de l'article {0} lorsqu'il y a déjà des quantités réapprovisionnées pour un emplacement spécifique.</value>
    <comment>Error</comment>
  </data>
  <data name="ReorderQuantity" xml:space="preserve">
    <value>Quantité de réapprovisionnement</value>
    <comment>Field</comment>
  </data>
  <data name="ReorderQuantityTitle" xml:space="preserve">
    <value>Réapprovisionnement des quantités</value>
    <comment>Field</comment>
  </data>
  <data name="ValidateReorder" xml:space="preserve">
    <value>Aucune période de réapprovisionnement n'a été saisie pour cet enregistrement de réapprovisionnement.</value>
    <comment>Error</comment>
  </data>
</root>