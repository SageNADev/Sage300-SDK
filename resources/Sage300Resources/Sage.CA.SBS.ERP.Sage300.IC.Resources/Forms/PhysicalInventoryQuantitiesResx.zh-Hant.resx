<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjUnitCost" xml:space="preserve">
    <value>調整單位成本</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="AdjustmentUnitCost" xml:space="preserve">
    <value>每成本計算單位調整單位成本</value>
    <comment>Table Column</comment>
  </data>
  <data name="CloseLt" xml:space="preserve">
    <value>關閉批別</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="CloseSn" xml:space="preserve">
    <value>關閉系列編號</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="DateCreated" xml:space="preserve">
    <value>建立日期</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存貨控制實地盤點數量</value>
    <comment>Screen Title</comment>
  </data>
  <data name="EstimatedUnitCost" xml:space="preserve">
    <value>每成本計算單位預估單位成本</value>
    <comment>Table Column</comment>
  </data>
  <data name="EstUnitCost" xml:space="preserve">
    <value>預估單位成本</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="ForcePopupLt" xml:space="preserve">
    <value>強制彈出批別</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="ForcePopupSn" xml:space="preserve">
    <value>強制彈出系列編號</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="FromAccountSetCode" xml:space="preserve">
    <value>從科目集合代碼</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="FromCode" xml:space="preserve">
    <value>從代碼</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="IC0770" xml:space="preserve">
    <value>存貨清冊</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="IC0775" xml:space="preserve">
    <value>工作表自選欄位</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="IC0780" xml:space="preserve">
    <value>存貨清冊明細</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="IC0790" xml:space="preserve">
    <value>存貨清冊標頭</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="IC0795" xml:space="preserve">
    <value>工作表明細自選欄位</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="InsufficientQuantity" xml:space="preserve">
    <value>數量不足</value>
    <comment>Used in grid for Status column</comment>
  </data>
  <data name="InterprocessCommID" xml:space="preserve">
    <value>進程間指令代號</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="InventoryQtyDtlOptFlds" xml:space="preserve">
    <value>存貨控制存貨數量明細自選欄位</value>
    <comment>Modal Title</comment>
  </data>
  <data name="InventoryQtyHdrOptFlds" xml:space="preserve">
    <value>存貨控制存貨數量標頭自選欄位</value>
    <comment>Modal Title</comment>
  </data>
  <data name="ItemDoesNotExist" xml:space="preserve">
    <value>產品不存在</value>
    <comment>Used in grid for Status column</comment>
  </data>
  <data name="ItemNotActive" xml:space="preserve">
    <value>產品為閒置</value>
    <comment>Used in grid for Status column</comment>
  </data>
  <data name="ItemNotAllowedAtLocation" xml:space="preserve">
    <value>產品不允許於該地點</value>
    <comment>Used in grid for Status column</comment>
  </data>
  <data name="LotsCost" xml:space="preserve">
    <value>批別成本</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="LtSetID" xml:space="preserve">
    <value>批別集合代號</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="NonStockItem" xml:space="preserve">
    <value>非庫存產品</value>
    <comment>Used in grid for Status column</comment>
  </data>
  <data name="NumberofSerials" xml:space="preserve">
    <value>系列數目</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="OnHold" xml:space="preserve">
    <value>擱置</value>
    <comment>Used in Status dropdown</comment>
  </data>
  <data name="PhysicalInventoryQuantity" xml:space="preserve">
    <value>實地盤點數量</value>
  </data>
  <data name="PopupLt" xml:space="preserve">
    <value>彈出批別</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="PopupSn" xml:space="preserve">
    <value>彈出系列編號</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="ProcessAction" xml:space="preserve">
    <value>處理操作</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="QuantityOnHand" xml:space="preserve">
    <value>在手數量</value>
    <comment>Table Column</comment>
  </data>
  <data name="RemoveSL" xml:space="preserve">
    <value>所有產生/分配的系列/批別將被移除。是否繼續？</value>
    <comment>Message</comment>
  </data>
  <data name="SegmentDescription" xml:space="preserve">
    <value>節段描述</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="SerialsCost" xml:space="preserve">
    <value>系列成本</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="SortCode" xml:space="preserve">
    <value>排序代碼</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="SortOrder" xml:space="preserve">
    <value>排序按</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="SortOrderDescription" xml:space="preserve">
    <value>排序按描述</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="ToAccountSetCode" xml:space="preserve">
    <value>到科目集合代碼</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="ToCode" xml:space="preserve">
    <value>到代碼</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="WarningExport" xml:space="preserve">
    <value>匯出資料需要兩步。匯出第一套數據後，匯出視窗將會再次顯示，用於匯出第二套數據。請為這兩套數據使用不同的匯出檔案。是否繼續？ </value>
    <comment>Message</comment>
  </data>
  <data name="WarningImport" xml:space="preserve">
    <value>匯入資料需要兩步。匯入第一套數據後，匯入視窗將會再次顯示，用於匯入第二套數據。應該有兩個不同的匯入檔案。請為每個資料集選擇合適的檔案。是否繼續？ </value>
    <comment>Message</comment>
  </data>
  <data name="WarningSLCOSTNOTMATCH" xml:space="preserve">
    <value>系列/批別成本與成本差異不符。</value>
    <comment>Message</comment>
  </data>
  <data name="WarningSLQTYNOTMATCH" xml:space="preserve">
    <value>系列/批別數量與數量差異不符。</value>
    <comment>Message</comment>
  </data>
  <data name="WorksheetComment" xml:space="preserve">
    <value>工作表備註</value>
    <comment>Used in Export/Import</comment>
  </data>
  <data name="WorksheetStatus" xml:space="preserve">
    <value>工作表狀態</value>
    <comment>Used in Export/Import</comment>
  </data>
</root>