<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="1099CPRSAmounts" xml:space="preserve">
    <value>1099/CPRS金額</value>
    <comment>Field</comment>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>清除</value>
    <comment>Group</comment>
  </data>
  <data name="DeletedAndPostedBatches" xml:space="preserve">
    <value>已刪除和已過帳批次</value>
    <comment>Check Box</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存貨控制清除歷史</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ExpiredContractPrices" xml:space="preserve">
    <value>失效的合約價格</value>
    <comment>Check Box</comment>
  </data>
  <data name="IncludingLotHistorywithExpir" xml:space="preserve">
    <value>還包括有失效保修的批別歷史</value>
    <comment>Check Box</comment>
  </data>
  <data name="IncludingLotswithExpiredCont" xml:space="preserve">
    <value>還包括有失效合約資訊的批別編號</value>
    <comment>Check Box</comment>
  </data>
  <data name="IncludingSerialHistorywithEx" xml:space="preserve">
    <value>還包括有失效保修的系列歷史</value>
    <comment>Check Box</comment>
  </data>
  <data name="IncludingSerialswithExpiredC" xml:space="preserve">
    <value>還包括有失效合約資訊的系列編號</value>
    <comment>Check Box</comment>
  </data>
  <data name="LotHistory" xml:space="preserve">
    <value>批別歷史</value>
    <comment>Check Box</comment>
  </data>
  <data name="NoAppLOCK" xml:space="preserve">
    <value>此一公司的所有其他用戶退出存貨控制而且所有存貨控制螢幕都關閉之前您不能清除歷史。</value>
    <comment>Error</comment>
  </data>
  <data name="NoSelectedJournal" xml:space="preserve">
    <value>必須選擇清除至少一個過帳日誌。</value>
    <comment>Error</comment>
  </data>
  <data name="PrintedLabels" xml:space="preserve">
    <value>已列印的標籤</value>
  </data>
  <data name="PrintedPostingJournals" xml:space="preserve">
    <value>已列印的過帳日誌</value>
    <comment>Field</comment>
  </data>
  <data name="SerialHistory" xml:space="preserve">
    <value>系列歷史</value>
    <comment>Screen Title</comment>
  </data>
  <data name="Through" xml:space="preserve">
    <value>至</value>
    <comment>Field</comment>
  </data>
  <data name="ThroughPostingSeqNo" xml:space="preserve">
    <value>至過帳序列編號</value>
    <comment>Field</comment>
  </data>
  <data name="ThroughYear" xml:space="preserve">
    <value>至年度</value>
    <comment>Field</comment>
  </data>
  <data name="ThroughYearPeriod" xml:space="preserve">
    <value>至年度/期間</value>
    <comment>Field</comment>
  </data>
  <data name="TransactionHistory" xml:space="preserve">
    <value>交易歷史</value>
    <comment>Check Box</comment>
  </data>
  <data name="Transactions" xml:space="preserve">
    <value>交易</value>
    <comment>Check Box</comment>
  </data>
  <data name="TransactionStatistics" xml:space="preserve">
    <value>交易統計</value>
    <comment>Check Box</comment>
  </data>
  <data name="VendorComments" xml:space="preserve">
    <value>供應商備註</value>
    <comment>Field</comment>
  </data>
  <data name="NoItemSegment" xml:space="preserve">
    <value>您必須定義產品節段之後方可以清除歷史。</value>
    <comment>Error</comment>
  </data>
</root>