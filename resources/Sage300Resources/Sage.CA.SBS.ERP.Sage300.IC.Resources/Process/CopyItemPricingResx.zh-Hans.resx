<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="By" xml:space="preserve">
    <value>按</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>复制</value>
    <comment>Button</comment>
  </data>
  <data name="CopyDefaultCalcPrice" xml:space="preserve">
    <value>默认价格的汇率/计算价格使用成本（{0}到{1}）</value>
    <comment>Conditional Text</comment>
  </data>
  <data name="CopyExistingDates" xml:space="preserve">
    <value>复制现存日期</value>
  </data>
  <data name="CreatetheSelectedFields" xml:space="preserve">
    <value>创建所选字段</value>
    <comment>Fieldset</comment>
  </data>
  <data name="CurrencyCodeDescription" xml:space="preserve">
    <value>币种代码描述</value>
    <comment>Field</comment>
  </data>
  <data name="DiscountMarkupInformation" xml:space="preserve">
    <value>折扣/加成信息</value>
    <comment>Check Box</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>存货控制复制货品定价</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FromCurrencyCode" xml:space="preserve">
    <value>从币种代码</value>
  </data>
  <data name="NoSegmentsMessage" xml:space="preserve">
    <value>您必须定义货品节段之后才可以复制货品定价。</value>
    <comment>Message</comment>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>运算</value>
    <comment>Field</comment>
  </data>
  <data name="PriceCheckInformation" xml:space="preserve">
    <value>价格检查信息</value>
    <comment>Check Box</comment>
  </data>
  <data name="PriceListDates" xml:space="preserve">
    <value>价目表日期</value>
    <comment>List</comment>
  </data>
  <data name="PriceListDescription" xml:space="preserve">
    <value>价目表描述</value>
    <comment>Field</comment>
  </data>
  <data name="Ratedoesnotexist" xml:space="preserve">
    <value>汇率不存在</value>
  </data>
  <data name="Rateexists" xml:space="preserve">
    <value>汇率存在</value>
  </data>
  <data name="RateIscalculated" xml:space="preserve">
    <value>汇率已计算</value>
  </data>
  <data name="SalesEnds" xml:space="preserve">
    <value>销售截止</value>
  </data>
  <data name="SalesStarts" xml:space="preserve">
    <value>销售起始</value>
  </data>
  <data name="SelectFields" xml:space="preserve">
    <value>选择字段</value>
    <comment>Fieldset</comment>
  </data>
  <data name="TaxInformation" xml:space="preserve">
    <value>税务信息</value>
    <comment>Check Box</comment>
  </data>
  <data name="ToCurrencyCode" xml:space="preserve">
    <value>到币种代码</value>
  </data>
  <data name="ToPriceList" xml:space="preserve">
    <value>到价目表</value>
  </data>
  <data name="Using" xml:space="preserve">
    <value>使用</value>
    <comment>List</comment>
  </data>
  <data name="UseSpecifiedDates" xml:space="preserve">
    <value>使用指定日期</value>
  </data>
  <data name="NoExchangeRate" xml:space="preserve">
    <value>该币种没有汇率。</value>
    <comment>Error message</comment>
  </data>
  <data name="DateNotInRange" xml:space="preserve">
    <value>输入的日期位于在公司概览中指定的范围之外。</value>
  </data>
  <data name="DefaultOrCalculateRateType" xml:space="preserve">
    <value>默认/计算汇率日期类型{0}不存在。</value>
    <comment>Error message</comment>
  </data>
  <data name="MarkupFactorError" xml:space="preserve">
    <value>加成系数必须大于等于1。</value>
    <comment>Error message</comment>
  </data>
</root>