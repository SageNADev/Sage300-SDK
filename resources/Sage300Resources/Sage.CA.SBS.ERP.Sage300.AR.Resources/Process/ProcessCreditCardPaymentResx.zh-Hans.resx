<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Entity" xml:space="preserve">
    <value>应收帐款处理信用卡付款</value>
    <comment>Screen name</comment>
  </data>
  <data name="FromCustomer" xml:space="preserve">
    <value>从客户</value>
    <comment>Label</comment>
  </data>
  <data name="ToCustomer" xml:space="preserve">
    <value>到客户</value>
    <comment>Label</comment>
  </data>
  <data name="FromCustGroup" xml:space="preserve">
    <value>从客户群组</value>
    <comment>Label</comment>
  </data>
  <data name="ToCustGroup" xml:space="preserve">
    <value>到客户群组</value>
    <comment>Label</comment>
  </data>
  <data name="FromDocument" xml:space="preserve">
    <value>从凭证编号</value>
    <comment>Label</comment>
  </data>
  <data name="ToDocument" xml:space="preserve">
    <value>到凭证编号</value>
    <comment>Label</comment>
  </data>
  <data name="FromProcessingCode" xml:space="preserve">
    <value>从处理代码</value>
    <comment>Label</comment>
  </data>
  <data name="ToProcessingCode" xml:space="preserve">
    <value>到处理代码</value>
    <comment>Label</comment>
  </data>
  <data name="FromTermsCode" xml:space="preserve">
    <value>从条款代码</value>
    <comment>Label</comment>
  </data>
  <data name="ToTermsCode" xml:space="preserve">
    <value>到条款代码</value>
    <comment>Label</comment>
  </data>
  <data name="ProcessPayments" xml:space="preserve">
    <value>处理付款</value>
    <comment>Button</comment>
  </data>
  <data name="PopulateList" xml:space="preserve">
    <value>填充清单</value>
  </data>
  <data name="RestoreDefaults" xml:space="preserve">
    <value>恢复默认值</value>
    <comment>Button</comment>
  </data>
  <data name="ApplyNone" xml:space="preserve">
    <value>无一应用</value>
    <comment>Button</comment>
  </data>
  <data name="ApplyAll" xml:space="preserve">
    <value>全部应用</value>
    <comment>Button</comment>
  </data>
  <data name="SPSSalesTransactionCompleted" xml:space="preserve">
    <value>SPS销售交易已完成</value>
    <comment>Message</comment>
  </data>
  <data name="SPSSalesTransactionPending" xml:space="preserve">
    <value>SPS销售交易待处理</value>
    <comment>Message</comment>
  </data>
  <data name="SPSTransactionNotStarted" xml:space="preserve">
    <value>SPS交易未开始</value>
    <comment>Message</comment>
  </data>
  <data name="InvoiceDueDate" xml:space="preserve">
    <value>在此日或之前到期的发票</value>
    <comment>Invoice Due Date</comment>
  </data>
  <data name="PrintReceipts" xml:space="preserve">
    <value>处理付款后打印收款</value>
    <comment>Check box</comment>
  </data>
  <data name="ScreenLocked" xml:space="preserve">
    <value>您不能打开这一屏幕因为另一用户正在使用它。</value>
    <comment>Message</comment>
  </data>
  <data name="InvoicesNotSelected" xml:space="preserve">
    <value>选择一个或更多发票来处理付款。</value>
    <comment>Message</comment>
  </data>
</root>