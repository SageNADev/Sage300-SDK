<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CheckBillingCycles" xml:space="preserve">
    <value>Vérifier cycles de facturation</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ClearActivityStatistics" xml:space="preserve">
    <value>Effacer les statistiques de l'exercice</value>
    <comment>Check box</comment>
  </data>
  <data name="ClearActivityStatisticsDescription" xml:space="preserve">
    <value>Saisit des zéros dans les champs de l’exercice courant sur les onglets Statistiques et Activité des écrans Clients de CC et Comptes nationaux de CC, et transfère les statistiques sur l’exercice courant dans les champs correspondants de l’exercice précédent.</value>
    <comment>Instructions</comment>
  </data>
  <data name="ClearInvoicesPaid" xml:space="preserve">
    <value>Mettre nombre de factures réglées et jours pour payer à 0</value>
    <comment>Check box</comment>
  </data>
  <data name="ClearInvoicesPaidDescription" xml:space="preserve">
    <value>Saisit des zéros dans les champs Factures réglées et Jours pour payer des onglets Activité dans les écrans Clients de CC et Comptes nationaux de CC.</value>
    <comment>Instructions</comment>
  </data>
  <data name="ClearRecChargeAmounts" xml:space="preserve">
    <value>Effacer statistiques des frais périodiques cumulés à ce jour</value>
    <comment>Check box</comment>
  </data>
  <data name="ClearRecChargeAmountsDescription" xml:space="preserve">
    <value>Met le champ Montant facturé à ce jour à zéro dans tous les enregistrements de factures récurrentes.</value>
    <comment>Instructions</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Fin de l'exercice de CC</value>
    <comment>Screen Title</comment>
  </data>
  <data name="NoProcessingOptionsSelectedWarningMsg" xml:space="preserve">
    <value>Sélectionnez une ou plusieurs options de traitement</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="OutstandingBillingCycles" xml:space="preserve">
    <value>Il existe des cycles de facturation en retard à traiter. Voulez-vous poursuivre?</value>
    <comment>Confirmation Message</comment>
  </data>
  <data name="Prepare" xml:space="preserve">
    <value>Utilisez cet écran pour transférer les statistiques des comptes de clients et des comptes nationaux de l’année en cours dans l’année précédente et remettre à zéro tous les totaux de statistiques pour la nouvelle année.</value>
    <comment>Instructions</comment>
  </data>
  <data name="ResetAllBatchNumbers" xml:space="preserve">
    <value>Remettre tous les numéros de lots à 1</value>
    <comment>Check box</comment>
  </data>
  <data name="ResetAllBatchNumbersDescription" xml:space="preserve">
    <value>Réinitialise tous les numéros de lots à 1 pour tous les types de lots.</value>
    <comment>Instructions</comment>
  </data>
  <data name="ResetBatchNumbersWarningMsg" xml:space="preserve">
    <value>Cette option supprime l'historique de toutes les transactions pour les lots sélectionnés.  Vous serez incapable d'effectuer un zoom avant vers ces lots dans GL, de les consulter dans les fenêtres Liste de lot ou de réimprimer des factures ou bordereaux de dépôt pour ces lots.</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="UIDescription" xml:space="preserve">
    <value>Utilisez ces options pour préparer Comptes clients au traitement du prochain exercice.</value>
    <comment>Auto-Generated</comment>
  </data>
</root>