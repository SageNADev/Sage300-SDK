<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CheckBillingCycles" xml:space="preserve">
    <value>檢查結帳週期</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ClearActivityStatistics" xml:space="preserve">
    <value>清除活動統計</value>
    <comment>Check box</comment>
  </data>
  <data name="ClearActivityStatisticsDescription" xml:space="preserve">
    <value>在應收帳款客戶和應收帳款統一帳戶螢幕活動統計索引標籤上的目前年度欄位中輸入零，並把目前年度的統計資訊轉移到先前年度的對應欄位中。</value>
    <comment>Instructions</comment>
  </data>
  <data name="ClearInvoicesPaid" xml:space="preserve">
    <value>清除已付發票和付款天數計數</value>
    <comment>Check box</comment>
  </data>
  <data name="ClearInvoicesPaidDescription" xml:space="preserve">
    <value>在應收帳款客戶和應收帳款統一帳戶螢幕活動索引標籤上的已付發票和支付天數欄位中輸入零。</value>
    <comment>Instructions</comment>
  </data>
  <data name="ClearRecChargeAmounts" xml:space="preserve">
    <value>清除週期性收費年度至今統計</value>
    <comment>Check box</comment>
  </data>
  <data name="ClearRecChargeAmountsDescription" xml:space="preserve">
    <value>在所有週期性收費記錄中把至今已開發票金額欄位中的金額設為零。</value>
    <comment>Instructions</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>應收帳款年終維護</value>
    <comment>Screen Title</comment>
  </data>
  <data name="NoProcessingOptionsSelectedWarningMsg" xml:space="preserve">
    <value>選擇一個或更多處理選項。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="OutstandingBillingCycles" xml:space="preserve">
    <value>尚有未結清的計費週期要處理。是否繼續？</value>
    <comment>Confirmation Message</comment>
  </data>
  <data name="Prepare" xml:space="preserve">
    <value>使用此一螢幕將目前年度的客戶和統一帳戶活動統計移到先前年度，並把新年度的統計合計歸零。</value>
    <comment>Instructions</comment>
  </data>
  <data name="ResetAllBatchNumbers" xml:space="preserve">
    <value>重置所有批次編號</value>
    <comment>Check box</comment>
  </data>
  <data name="ResetAllBatchNumbersDescription" xml:space="preserve">
    <value>重置所有類型的批次的批次編號為1。</value>
    <comment>Instructions</comment>
  </data>
  <data name="ResetBatchNumbersWarningMsg" xml:space="preserve">
    <value>此一選項移除所有您選擇的批次的交易歷史。您將無法從總帳下鑽到這些批次，或從批次清單視窗檢視這些批次，或重新列印這些批次的發票或存款單。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="UIDescription" xml:space="preserve">
    <value>使用這些選項一視窗為下一會計年度的應收帳款處理作準備。</value>
    <comment>Auto-Generated</comment>
  </data>
</root>