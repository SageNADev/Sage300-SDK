<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Entity" xml:space="preserve">
    <value>Articles de CC</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ItemNumber" xml:space="preserve">
    <value>Numéro article</value>
    <comment>Field</comment>
  </data>
  <data name="CommodityNo" xml:space="preserve">
    <value>Numéro marchandise</value>
    <comment>Field</comment>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Article</value>
    <comment>Field</comment>
  </data>
  <data name="Pricing" xml:space="preserve">
    <value>Prix</value>
    <comment>Field</comment>
  </data>
  <data name="UnitOfMeasure" xml:space="preserve">
    <value>Unité de mesure</value>
    <comment>Field</comment>
  </data>
  <data name="ItemPrice" xml:space="preserve">
    <value>Prix de l'article</value>
    <comment>Field</comment>
  </data>
  <data name="AltTaxBase" xml:space="preserve">
    <value>Base taxation montant remplacé</value>
    <comment>Field</comment>
  </data>
  <data name="TaxStatus" xml:space="preserve">
    <value>État taxe</value>
    <comment>Field</comment>
  </data>
  <data name="AmountSold" xml:space="preserve">
    <value>Montant ventes</value>
    <comment>Field</comment>
  </data>
  <data name="NumberofSales" xml:space="preserve">
    <value>Nombre de ventes</value>
    <comment>Field</comment>
  </data>
  <data name="AmountReturned" xml:space="preserve">
    <value>Montant retours</value>
    <comment>Field</comment>
  </data>
  <data name="NumberofReturns" xml:space="preserve">
    <value>Nombre de retours</value>
    <comment>Field</comment>
  </data>
  <data name="GrossMargin" xml:space="preserve">
    <value>Marge brute</value>
    <comment>Field</comment>
  </data>
  <data name="QuantitySold" xml:space="preserve">
    <value>Quantité vendue</value>
    <comment>Field</comment>
  </data>
  <data name="DateLastSold" xml:space="preserve">
    <value>Date dernière vente</value>
    <comment>Field</comment>
  </data>
  <data name="ItemInformation" xml:space="preserve">
    <value>Données de l'article</value>
    <comment>Field</comment>
  </data>
  <data name="NotExist" xml:space="preserve">
    <value>Le numéro d'article spécifié est introuvable.</value>
    <comment>Error</comment>
  </data>
  <data name="CommodityCode" xml:space="preserve">
    <value>Code marchandise</value>
    <comment>Field</comment>
  </data>
  <data name="DateLastMaintained" xml:space="preserve">
    <value>Dernière modification</value>
    <comment>Field</comment>
  </data>
  <data name="CostofGoodsSold" xml:space="preserve">
    <value>Coût des marchandises vendues</value>
    <comment>Field</comment>
  </data>
  <data name="AR0009" xml:space="preserve">
    <value>Prix de l'article</value>
    <comment>Field</comment>
  </data>
  <data name="AR0010" xml:space="preserve">
    <value>Articles</value>
    <comment>Field</comment>
  </data>
  <data name="AR0011" xml:space="preserve">
    <value>Classes de taxes article</value>
    <comment>Field</comment>
  </data>
  <data name="AR0027" xml:space="preserve">
    <value>Statistiques des articles</value>
    <comment>Field</comment>
  </data>
  <data name="CommodityNumber" xml:space="preserve">
    <value>Numéro marchandise</value>
    <comment>Field</comment>
  </data>
  <data name="COGSDescription" xml:space="preserve">
    <value>Description coût marchandises vendues</value>
    <comment>Field</comment>
  </data>
  <data name="CogsAccount" xml:space="preserve">
    <value>Compte coût marchandises vendues de GL</value>
    <comment>Field</comment>
  </data>
  <data name="InventoryAccount" xml:space="preserve">
    <value>Compte des stocks de GL</value>
    <comment>Field</comment>
  </data>
  <data name="ItemPricing" xml:space="preserve">
    <value>Prix de l'article.</value>
    <comment>Message Prefix</comment>
  </data>
  <data name="ItemTaxClass" xml:space="preserve">
    <value>Classe de taxe article.</value>
    <comment>Message Prefix</comment>
  </data>
  <data name="RevenueAccount" xml:space="preserve">
    <value>Compte de produit de GL</value>
    <comment>Field</comment>
  </data>
  <data name="ItemPricingDuplicate" xml:space="preserve">
    <value>L'enregistrement de prix de l'article existe déjà.</value>
    <comment>Error</comment>
  </data>
  <data name="ItemTaxDuplicate" xml:space="preserve">
    <value>L'enregistrement de classe de taxe de l'article existe déjà.</value>
    <comment>Error</comment>
  </data>
  <data name="DateofLastSale" xml:space="preserve">
    <value>Date dernière vente</value>
    <comment>Field</comment>
  </data>
  <data name="EnableYTDCalculations" xml:space="preserve">
    <value>Activer calcul du cumul annuel</value>
    <comment>Field</comment>
  </data>
  <data name="TotalAmountReturned" xml:space="preserve">
    <value>Montant total des retours</value>
    <comment>Field</comment>
  </data>
  <data name="TotalAmountSold" xml:space="preserve">
    <value>Montant total articles vendus</value>
    <comment>Field</comment>
  </data>
  <data name="TotalCostofGoodsSold" xml:space="preserve">
    <value>Coût total des marchandises vendues</value>
    <comment>Field</comment>
  </data>
  <data name="TotalGrossMargin" xml:space="preserve">
    <value>Marge brute totale</value>
    <comment>Field</comment>
  </data>
  <data name="YTDDateofLastSale" xml:space="preserve">
    <value>Date dernière vente cumulée à ce jour</value>
    <comment>Field</comment>
  </data>
  <data name="YTDNumberofReturns" xml:space="preserve">
    <value>Nombre de retours cumulé à ce jour</value>
    <comment>Field</comment>
  </data>
  <data name="YTDNumberofSales" xml:space="preserve">
    <value>Nombre de ventes cumulé à ce jour</value>
    <comment>Field</comment>
  </data>
  <data name="YTDQuantitySold" xml:space="preserve">
    <value>Quantité vendue cumulée à ce jour</value>
    <comment>Field</comment>
  </data>
  <data name="YTDTotalAmountReturned" xml:space="preserve">
    <value>Total montant retourné cumulé à ce jour</value>
    <comment>Field</comment>
  </data>
  <data name="YTDTotalAmountSold" xml:space="preserve">
    <value>Total montant vendu cumulé à ce jour</value>
    <comment>Field</comment>
  </data>
  <data name="YTDTotalCostofGoodsSold" xml:space="preserve">
    <value>Total articles vendus cumulé à ce jour</value>
    <comment>Field</comment>
  </data>
  <data name="YTDTotalGrossMargin" xml:space="preserve">
    <value>Total marge brute cumulé à ce jour</value>
    <comment>Field</comment>
  </data>
</root>