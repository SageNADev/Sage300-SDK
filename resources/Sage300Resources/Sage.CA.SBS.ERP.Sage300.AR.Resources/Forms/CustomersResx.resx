<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address1" xml:space="preserve">
    <value>Address Line 1</value>
    <comment>Address - Field</comment>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address Line 2</value>
    <comment>Address - Field</comment>
  </data>
  <data name="Address3" xml:space="preserve">
    <value>Address Line 3</value>
    <comment>Address - Field</comment>
  </data>
  <data name="Address4" xml:space="preserve">
    <value>Address Line 4</value>
    <comment>Address - Field</comment>
  </data>
  <data name="ARCustomer" xml:space="preserve">
    <value>A/R Customers</value>
  </data>
  <data name="BankCode" xml:space="preserve">
    <value>Bank Code</value>
  </data>
  <data name="ContactName" xml:space="preserve">
    <value>Contact Name</value>
  </data>
  <data name="ContactsEmail" xml:space="preserve">
    <value>Contact's Email</value>
  </data>
  <data name="ContactsFax" xml:space="preserve">
    <value>Contact's Fax</value>
  </data>
  <data name="ContactsPhone" xml:space="preserve">
    <value>Contact's Phone</value>
  </data>
  <data name="CreditLimit" xml:space="preserve">
    <value>Credit Limit</value>
  </data>
  <data name="GenSepPmntForEachInv" xml:space="preserve">
    <value>Generate Separate Payments for Each Invoice</value>
  </data>
  <data name="LegalName" xml:space="preserve">
    <value>Legal Name</value>
  </data>
  <data name="StateProvince" xml:space="preserve">
    <value>State/Province</value>
  </data>
  <data name="AllowBackorderQuantities" xml:space="preserve">
    <value>Allow Backorder Quantities</value>
    <comment>Invoicing - Check Box</comment>
  </data>
  <data name="AllowPartialShipments" xml:space="preserve">
    <value>Allow Partial Shipments</value>
    <comment>Invoicing - Check Box</comment>
  </data>
  <data name="AllowWebStoreShopping" xml:space="preserve">
    <value>Allow Web Store Shopping</value>
    <comment>Invoicing - Check Box</comment>
  </data>
  <data name="AverageDaystoPay" xml:space="preserve">
    <value>Average Days to Pay</value>
  </data>
  <data name="CheckforDuplicatePOs" xml:space="preserve">
    <value>Check for Duplicate POs</value>
    <comment>Invoicing - List</comment>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
    <comment>Processing - Column</comment>
  </data>
  <data name="DaysUntilARTransactionsAreOverdue" xml:space="preserve">
    <value>Transactions Overdue by (Days)</value>
    <comment>Processing - Group Check Box</comment>
  </data>
  <data name="NumberofPayments" xml:space="preserve">
    <value>Number of Payments</value>
  </data>
  <data name="OpenInvoiceCountOut" xml:space="preserve">
    <value>Open Invoice Count Out</value>
  </data>
  <data name="OverdueLimitforOverdueDays" xml:space="preserve">
    <value>Have Total Amount Exceeding</value>
    <comment>Processing - Group Field</comment>
  </data>
  <data name="PrepaymentAmount" xml:space="preserve">
    <value>Prepayment Amount</value>
  </data>
  <data name="PrepaymentCount" xml:space="preserve">
    <value>Prepayment Count</value>
  </data>
  <data name="RetentionPeriodDays" xml:space="preserve">
    <value>Retention Period (Days)</value>
    <comment>Invoicing - Field</comment>
  </data>
  <data name="SageBillingPaymentCustomer" xml:space="preserve">
    <value>Sage Billing and Payment Customer</value>
    <comment>Processing - Check Box</comment>
  </data>
  <data name="A" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="B" xml:space="preserve">
    <value>B</value>
  </data>
  <data name="Base" xml:space="preserve">
    <value>Base</value>
  </data>
  <data name="C" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="D" xml:space="preserve">
    <value>D</value>
  </data>
  <data name="E" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="OpenInvoiceCount" xml:space="preserve">
    <value>Open Invoice Count</value>
    <comment>Activity - Group Field</comment>
  </data>
  <data name="AmountPastDue" xml:space="preserve">
    <value>Amount Past Due</value>
  </data>
  <data name="AmountPrepaidCustCurr" xml:space="preserve">
    <value>Amount Prepaid - Customer Currency</value>
  </data>
  <data name="AmountPrepaidFuncCurr" xml:space="preserve">
    <value>Amount Prepaid - Functional Currency</value>
  </data>
  <data name="AOrRVersion" xml:space="preserve">
    <value>A/R Version</value>
  </data>
  <data name="BeginningBalonLastStatement" xml:space="preserve">
    <value>Beginning Balance on Last Statement</value>
  </data>
  <data name="BillingMethod" xml:space="preserve">
    <value>Billing Method</value>
  </data>
  <data name="CreditLimitCustCurr" xml:space="preserve">
    <value>Credit Limit - Customer Currency</value>
  </data>
  <data name="CustomerDiscountType" xml:space="preserve">
    <value>Customer Discount Type</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="DateofHighestBalanceLastYr" xml:space="preserve">
    <value>Date of Highest Balance Last Year</value>
  </data>
  <data name="DateofLastBalFwdStatement" xml:space="preserve">
    <value>Date of Last Balance Forward Statement</value>
  </data>
  <data name="DaysRetained" xml:space="preserve">
    <value>Days Retained</value>
  </data>
  <data name="FreeOnBoard" xml:space="preserve">
    <value>Free On Board</value>
  </data>
  <data name="Mode" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="NextClientUniqueID" xml:space="preserve">
    <value>Next Client Unique ID</value>
  </data>
  <data name="NumberofOpenPrepayments" xml:space="preserve">
    <value>Number of Open Prepayments</value>
  </data>
  <data name="PrimaryShipToLocation" xml:space="preserve">
    <value>Primary Ship-To Location</value>
  </data>
  <data name="RetainageTermsCode" xml:space="preserve">
    <value>Retainage Terms Code</value>
  </data>
  <data name="ShipViaCode" xml:space="preserve">
    <value>Ship-Via Code</value>
    <comment>Invoicing - Field</comment>
  </data>
  <data name="ShipViaDescription" xml:space="preserve">
    <value>Ship-Via Description</value>
  </data>
  <data name="SuppressIntegration" xml:space="preserve">
    <value>Suppress Integration</value>
  </data>
  <data name="TaxRegistrationNo1" xml:space="preserve">
    <value>Tax Registration Number 1</value>
  </data>
  <data name="TaxRegistrationNo2" xml:space="preserve">
    <value>Tax Registration Number 2</value>
  </data>
  <data name="TaxRegistrationNo3" xml:space="preserve">
    <value>Tax Registration Number 3</value>
  </data>
  <data name="TaxRegistrationNo4" xml:space="preserve">
    <value>Tax Registration Number 4</value>
  </data>
  <data name="TaxRegistrationNo5" xml:space="preserve">
    <value>Tax Registration Number 5</value>
  </data>
  <data name="TerritoryCode" xml:space="preserve">
    <value>Territory Code</value>
  </data>
  <data name="InvalidInput" xml:space="preserve">
    <value>Retainage percent must be between 0 and 100.</value>
  </data>
  <data name="SalesPercent" xml:space="preserve">
    <value>Sales Percent</value>
  </data>
  <data name="RetainageDescription" xml:space="preserve">
    <value>Retainage Description</value>
  </data>
  <data name="DeleteCard" xml:space="preserve">
    <value>Delete Card</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>A/R Customers</value>
    <comment>Screen Title</comment>
  </data>
  <data name="CustomerAccountStatus" xml:space="preserve">
    <value>Customer Account Status</value>
  </data>
  <data name="CustomerType" xml:space="preserve">
    <value>Customer Type</value>
  </data>
  <data name="GroupCodeDesc" xml:space="preserve">
    <value>Group Code Description</value>
    <comment>Address - Field</comment>
  </data>
  <data name="LastRevaluationBalance" xml:space="preserve">
    <value>Last Revaluation Balance</value>
  </data>
  <data name="NationalAccountDescription" xml:space="preserve">
    <value>National Account Description</value>
  </data>
  <data name="RetainagePer" xml:space="preserve">
    <value>Retainage %</value>
  </data>
  <data name="CreateNewCreditCard" xml:space="preserve">
    <value>Create New Credit Card…</value>
    <comment>Credit Cards - Button</comment>
  </data>
  <data name="OptionalFieldDesc" xml:space="preserve">
    <value>Optional Field Description</value>
    <comment>Optional - Table Column</comment>
  </data>
  <data name="ShipViaCodeName" xml:space="preserve">
    <value>Ship-Via Description</value>
    <comment>Invoicing - Field</comment>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
    <comment>Optional - Table Column</comment>
  </data>
  <data name="ValueDesc" xml:space="preserve">
    <value>Value Description</value>
    <comment>Optional - Table Column</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>Value Set</value>
    <comment>Optional - Table Column</comment>
  </data>
  <data name="CustomerCurrencyMismatch" xml:space="preserve">
    <value>Cannot change to account set {0}. You can change only to an account set with the same currency code as the customer's current account set.</value>
    <comment>Processing -AccountSet</comment>
  </data>
  <data name="TaxReportingCurMisMatch" xml:space="preserve">
    <value>Tax group {0} has a tax reporting currency of {1}, which differs from the account set currency {2}.</value>
    <comment>Processing -AccountSet</comment>
  </data>
  <data name="NoOeExist" xml:space="preserve">
    <value>Cannot find O/E Ship-Via Code.</value>
  </data>
  <data name="AR0021" xml:space="preserve">
    <value>Customer Comments</value>
  </data>
  <data name="AR0022" xml:space="preserve">
    <value>Customer Statistics</value>
  </data>
  <data name="AR0024" xml:space="preserve">
    <value>Customers</value>
  </data>
  <data name="AR0400" xml:space="preserve">
    <value>Customer Optional Field Values</value>
  </data>
  <data name="CommentNumber" xml:space="preserve">
    <value>Comment Number</value>
  </data>
  <data name="NumberOfCredits" xml:space="preserve">
    <value>Number of Credits</value>
  </data>
  <data name="NumberOfDebits" xml:space="preserve">
    <value>Number of Debits</value>
  </data>
  <data name="NumberOfInvoicesPaid" xml:space="preserve">
    <value>Number of Invoices Paid</value>
  </data>
  <data name="RevaluationBalInFuncCurr" xml:space="preserve">
    <value>Revaluation Balance in Functional Currency</value>
  </data>
  <data name="ReverseCount" xml:space="preserve">
    <value>Reverse Count</value>
  </data>
  <data name="TotalAdjustmentsInCustCurr" xml:space="preserve">
    <value>Total Adjustments in Customer Currency</value>
  </data>
  <data name="TotalAdjustmentsInFuncCurr" xml:space="preserve">
    <value>Total Adjustments in Functional Currency</value>
  </data>
  <data name="TotalCreditsInCustCurr" xml:space="preserve">
    <value>Total Credits in Customer Currency</value>
  </data>
  <data name="TotalCreditsInFuncCurr" xml:space="preserve">
    <value>Total Credits in Functional Currency</value>
  </data>
  <data name="TotalDebitsInCustCurr" xml:space="preserve">
    <value>Total Debits in Customer Currency</value>
  </data>
  <data name="TotalDebitsInFuncCurr" xml:space="preserve">
    <value>Total Debits in Functional Currency</value>
  </data>
  <data name="TotalDiscountsInCustCurr" xml:space="preserve">
    <value>Total Discounts in Customer Currency</value>
  </data>
  <data name="TotalDiscountsInFuncCurr" xml:space="preserve">
    <value>Total Discounts in Functional Currency</value>
  </data>
  <data name="TotalInterestInCustCurr" xml:space="preserve">
    <value>Total Interest in Customer Currency</value>
  </data>
  <data name="TotalInterestInFuncCurr" xml:space="preserve">
    <value>Total Interest in Functional Currency</value>
  </data>
  <data name="TotalInvoicesInCustCurr" xml:space="preserve">
    <value>Total Invoices in Customer Currency</value>
  </data>
  <data name="TotalInvoicesInFuncCurr" xml:space="preserve">
    <value>Total Invoices in Functional Currency</value>
  </data>
  <data name="TotalInvoicesPdInCustCurr" xml:space="preserve">
    <value>Total Invoices Paid  in Customer Currency</value>
  </data>
  <data name="TotalInvoicesPdInFuncCurr" xml:space="preserve">
    <value>Total Invoices Paid  in Functional Currency</value>
  </data>
  <data name="TotalReceiptsInCustCurr" xml:space="preserve">
    <value>Total Receipts in Customer Currency</value>
  </data>
  <data name="TotalReceiptsInFuncCurr" xml:space="preserve">
    <value>Total Receipts in Functional Currency</value>
  </data>
  <data name="TotalRefundsInCustCurr" xml:space="preserve">
    <value>Total Refunds in Customer Currency</value>
  </data>
  <data name="TotalRefundsInFuncCurr" xml:space="preserve">
    <value>Total Refunds in Functional Currency</value>
  </data>
  <data name="TotalRetdChecksInCustCurr" xml:space="preserve">
    <value>Total Returned Checks in Customer Currency</value>
  </data>
  <data name="TotalRetdChecksInFuncCurr" xml:space="preserve">
    <value>Total Ret'd Checks in Functional Currency</value>
  </data>
  <data name="TotalWriteOffsInCustCurr" xml:space="preserve">
    <value>Total Write-Offs in Customer Currency</value>
  </data>
  <data name="TotalWriteOffsInFuncCurr" xml:space="preserve">
    <value>Total Write Offs in Functional Currency</value>
  </data>
  <data name="YTDAdjustmentsInCustCurr" xml:space="preserve">
    <value>YTD Adjustments in Customer Currency</value>
  </data>
  <data name="YTDCreditsInCustCurr" xml:space="preserve">
    <value>YTD Credits in Customer Currency</value>
  </data>
  <data name="YTDDebitsInCustCurr" xml:space="preserve">
    <value>YTD Debits in Customer Currency</value>
  </data>
  <data name="YTDDiscountsInCustCurr" xml:space="preserve">
    <value>YTD Discounts in Customer Currency</value>
  </data>
  <data name="YTDInterestInCustCurr" xml:space="preserve">
    <value>YTD Interest in Customer Currency</value>
  </data>
  <data name="YTDInvoicesInCustCurr" xml:space="preserve">
    <value>YTD Invoices in Customer Currency</value>
  </data>
  <data name="YTDInvoicesPdInCustCurr" xml:space="preserve">
    <value>YTD Invoices Paid in Customer Currency</value>
  </data>
  <data name="YTDNumberOfDaysToPay" xml:space="preserve">
    <value>YTD Number of Days to Pay</value>
  </data>
  <data name="YTDReceiptsInCustCurr" xml:space="preserve">
    <value>YTD Receipts in Customer Currency</value>
  </data>
  <data name="YTDRefundsInCustCurr" xml:space="preserve">
    <value>YTD Refunds in Customer Currency</value>
  </data>
  <data name="YTDRetdChecksInCustCurr" xml:space="preserve">
    <value>YTD Returned Checks in Customer Currency</value>
  </data>
  <data name="YTDWriteOffsInCustCurr" xml:space="preserve">
    <value>YTD Write-Offs in Customer Currency</value>
  </data>
  <data name="SageBillingandPaymentCustomer" xml:space="preserve">
    <value>Sage Billing and Payment Customer</value>
  </data>
  <data name="CurrencyCode" xml:space="preserve">
    <value>Currency Code</value>
  </data>
  <data name="CustomerNumber" xml:space="preserve">
    <value>Customer Number</value>
  </data>
  <data name="CustomerPriceList" xml:space="preserve">
    <value>Customer Price List</value>
  </data>
  <data name="InventoryLocation" xml:space="preserve">
    <value>Inventory Location</value>
  </data>
  <data name="InventoryLocationDescription" xml:space="preserve">
    <value>Location Description</value>
  </data>
  <data name="ProceesingCodeSetupWarning" xml:space="preserve">
    <value>You must set up a processing code before entering credit card details.</value>
  </data>
  <data name="BusinessRegistrationNumber" xml:space="preserve">
    <value>Business Registration Number</value>
  </data>
  <data name="ChangeNatAcct" xml:space="preserve">
    <value>If you change this customer’s National Account, posted documents that are outstanding will remain with the old National Account. Documents posted after the change will belong to the new National Account. Do you want to change this customer’s national account?</value>
  </data>
  <data name="AgingRangeMessage" xml:space="preserve">
    <value>Aging periods must be in ascending order.</value>
    <comment>Message</comment>
  </data>
  <data name="CreateNewContact" xml:space="preserve">
    <value>Create New Contact</value>
  </data>
  <data name="ViewContactDetails" xml:space="preserve">
    <value>View Contact Details</value>
  </data>
  <data name="ShowDocFor" xml:space="preserve">
    <value>Show Document For</value>
  </data>
  <data name="AccountReceivable" xml:space="preserve">
    <value>Account Receivable</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="OrderEntry" xml:space="preserve">
    <value>Order Entry</value>
  </data>
</root>