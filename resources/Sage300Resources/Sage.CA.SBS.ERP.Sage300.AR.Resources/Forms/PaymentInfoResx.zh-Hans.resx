<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BillingZipcode" xml:space="preserve">
    <value>邮政编码</value>
  </data>
  <data name="CardDescription" xml:space="preserve">
    <value>卡描述</value>
  </data>
  <data name="CardID" xml:space="preserve">
    <value>卡标识</value>
  </data>
  <data name="CardType" xml:space="preserve">
    <value>卡类型</value>
  </data>
  <data name="CustomerName" xml:space="preserve">
    <value>客户名称</value>
  </data>
  <data name="DefaultCard" xml:space="preserve">
    <value>默认</value>
  </data>
  <data name="FinderTitle" xml:space="preserve">
    <value>付款信息</value>
  </data>
  <data name="MaskedCardNumber" xml:space="preserve">
    <value>卡号</value>
  </data>
  <data name="PaymentInfo" xml:space="preserve">
    <value>付款信息</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="SubtotalAmount" xml:space="preserve">
    <value>小计金额</value>
  </data>
  <data name="VaultID" xml:space="preserve">
    <value>保险库标识</value>
  </data>
  <data name="Vexpdate" xml:space="preserve">
    <value>失效日期</value>
  </data>
  <data name="SameCustomerAdderess" xml:space="preserve">
    <value>与客户地址相同</value>
  </data>
  <data name="AuthorizationCode" xml:space="preserve">
    <value>授权代码</value>
  </data>
  <data name="MaskedCreditCardNumber" xml:space="preserve">
    <value>掩码的信用卡编号</value>
  </data>
  <data name="OneTimeUseSwitch" xml:space="preserve">
    <value>一次性使用开关</value>
  </data>
  <data name="ProcessingCommand" xml:space="preserve">
    <value>处理指令</value>
  </data>
  <data name="CreditDefaultCard" xml:space="preserve">
    <value>默认卡</value>
  </data>
  <data name="OneTimeCard" xml:space="preserve">
    <value>输入一个一次性使用的卡</value>
  </data>
  <data name="AmericanExpress" xml:space="preserve">
    <value>American Express</value>
  </data>
  <data name="CreditCardDetails" xml:space="preserve">
    <value>信用卡明细</value>
  </data>
  <data name="DebitCard" xml:space="preserve">
    <value>借记卡</value>
  </data>
  <data name="Discover" xml:space="preserve">
    <value>Discover</value>
  </data>
  <data name="JCB" xml:space="preserve">
    <value>JCB</value>
  </data>
  <data name="MasterCard" xml:space="preserve">
    <value>Master card</value>
  </data>
  <data name="Visa" xml:space="preserve">
    <value>Visa</value>
  </data>
  <data name="ErrorCard" xml:space="preserve">
    <value>客户编号{1}的卡标识{0}对处理代码{2}不存在。</value>
  </data>
  <data name="ConfirmMsg" xml:space="preserve">
    <value>您已经为一次性信用卡收费输入了帐单信息。是否放弃更改？</value>
  </data>
  <data name="DiffProcessCodeCardError" xml:space="preserve">
    <value>您不能选择卡标识{0}，因为它使用一个不同的处理代码。如果要使用此卡，您必须更新其处理代码。</value>
  </data>
  <data name="InactiveCardError" xml:space="preserve">
    <value>卡标识{0}对于客户编号{1}为闲置。</value>
  </data>
  <data name="Capture" xml:space="preserve">
    <value>{0}，未捕获</value>
  </data>
  <data name="CCCharged" xml:space="preserve">
    <value>信用卡已收费</value>
  </data>
  <data name="CCPreAuth" xml:space="preserve">
    <value>信用卡已预授权</value>
  </data>
  <data name="NoCCCharged" xml:space="preserve">
    <value>没有信用卡被收费。</value>
  </data>
  <data name="NoCCPreAuth" xml:space="preserve">
    <value>没有信用卡被预授权。</value>
  </data>
  <data name="CreditAppliedCard" xml:space="preserve">
    <value>贷项已核销到卡</value>
  </data>
  <data name="Preauth" xml:space="preserve">
    <value>预授权</value>
  </data>
  <data name="Sale" xml:space="preserve">
    <value>销售</value>
  </data>
  <data name="Void" xml:space="preserve">
    <value>作废</value>
  </data>
  <data name="VoidCredit" xml:space="preserve">
    <value>作废贷项</value>
  </data>
  <data name="ProcessCode" xml:space="preserve">
    <value>处理代码</value>
  </data>
  <data name="UseDefaultCard" xml:space="preserve">
    <value>使用此卡作为默认卡</value>
  </data>
  <data name="SageExchangeVault" xml:space="preserve">
    <value>Sage Exchange - 保险库</value>
  </data>
  <data name="BillingDetails" xml:space="preserve">
    <value>帐单明细</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="DefaultCardWarning" xml:space="preserve">
    <value>默认卡不能旗标为闲置。是否继续？</value>
  </data>
  <data name="ProcessingCodeChangeWarning" xml:space="preserve">
    <value>如果您更改了此卡的处理代码，信用卡明细将会被清除而需要重新输入。是否更改处理代码并清除信用卡明细？</value>
  </data>
  <data name="TransactionTypeID" xml:space="preserve">
    <value>交易类型标识</value>
  </data>
  <data name="Billing" xml:space="preserve">
    <value>帐单</value>
  </data>
  <data name="MaskedCardNumber1" xml:space="preserve">
    <value>掩码的卡编号</value>
  </data>
</root>