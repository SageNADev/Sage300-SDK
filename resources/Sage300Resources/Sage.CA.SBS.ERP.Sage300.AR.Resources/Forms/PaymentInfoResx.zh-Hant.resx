<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BillingZipcode" xml:space="preserve">
    <value>郵遞區號</value>
  </data>
  <data name="CardDescription" xml:space="preserve">
    <value>卡描述</value>
  </data>
  <data name="CardID" xml:space="preserve">
    <value>卡代號</value>
  </data>
  <data name="CardType" xml:space="preserve">
    <value>卡類型</value>
  </data>
  <data name="CustomerName" xml:space="preserve">
    <value>客戶名稱</value>
  </data>
  <data name="DefaultCard" xml:space="preserve">
    <value>預設</value>
  </data>
  <data name="FinderTitle" xml:space="preserve">
    <value>付款資訊</value>
  </data>
  <data name="MaskedCardNumber" xml:space="preserve">
    <value>卡號</value>
  </data>
  <data name="PaymentInfo" xml:space="preserve">
    <value>付款資訊</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>狀態</value>
  </data>
  <data name="SubtotalAmount" xml:space="preserve">
    <value>小計金額</value>
  </data>
  <data name="VaultID" xml:space="preserve">
    <value>保險庫代號</value>
  </data>
  <data name="Vexpdate" xml:space="preserve">
    <value>失效日期</value>
  </data>
  <data name="SameCustomerAdderess" xml:space="preserve">
    <value>與客戶地址相同</value>
  </data>
  <data name="AuthorizationCode" xml:space="preserve">
    <value>授權代碼</value>
  </data>
  <data name="MaskedCreditCardNumber" xml:space="preserve">
    <value>遮罩的信用卡編號</value>
  </data>
  <data name="OneTimeUseSwitch" xml:space="preserve">
    <value>一次性使用開關</value>
  </data>
  <data name="ProcessingCommand" xml:space="preserve">
    <value>處理指示</value>
  </data>
  <data name="CreditDefaultCard" xml:space="preserve">
    <value>預設卡</value>
  </data>
  <data name="OneTimeCard" xml:space="preserve">
    <value>輸入一個一次性使用的卡</value>
  </data>
  <data name="AmericanExpress" xml:space="preserve">
    <value>American Express</value>
  </data>
  <data name="CreditCardDetails" xml:space="preserve">
    <value>信用卡明細</value>
  </data>
  <data name="DebitCard" xml:space="preserve">
    <value>借記卡</value>
  </data>
  <data name="Discover" xml:space="preserve">
    <value>Discover</value>
  </data>
  <data name="JCB" xml:space="preserve">
    <value>JCB</value>
  </data>
  <data name="MasterCard" xml:space="preserve">
    <value>Master card</value>
  </data>
  <data name="Visa" xml:space="preserve">
    <value>Visa</value>
  </data>
  <data name="ErrorCard" xml:space="preserve">
    <value>客戶編號{1}的卡代號{0}對處理代碼{2}不存在。</value>
  </data>
  <data name="ConfirmMsg" xml:space="preserve">
    <value>您已經為一次性信用卡收費輸入了計費資訊。是否放棄變更？</value>
  </data>
  <data name="DiffProcessCodeCardError" xml:space="preserve">
    <value>您不能選擇卡代號{0}，因為它使用一個不同的處理代碼。如果要使用此卡，您必須更新其處理代碼。</value>
  </data>
  <data name="InactiveCardError" xml:space="preserve">
    <value>卡代號{0}對於客戶編號{1}為閒置。</value>
  </data>
  <data name="Capture" xml:space="preserve">
    <value>{0}，未捕獲</value>
  </data>
  <data name="CCCharged" xml:space="preserve">
    <value>信用卡已收費</value>
  </data>
  <data name="CCPreAuth" xml:space="preserve">
    <value>信用卡已預授權</value>
  </data>
  <data name="NoCCCharged" xml:space="preserve">
    <value>沒有信用卡被收費。</value>
  </data>
  <data name="NoCCPreAuth" xml:space="preserve">
    <value>沒有信用卡被預授權。</value>
  </data>
  <data name="CreditAppliedCard" xml:space="preserve">
    <value>貸項已核銷到卡</value>
  </data>
  <data name="Preauth" xml:space="preserve">
    <value>預授權</value>
  </data>
  <data name="Sale" xml:space="preserve">
    <value>銷售</value>
  </data>
  <data name="Void" xml:space="preserve">
    <value>作廢</value>
  </data>
  <data name="VoidCredit" xml:space="preserve">
    <value>作廢貸項</value>
  </data>
  <data name="ProcessCode" xml:space="preserve">
    <value>處理代碼</value>
  </data>
  <data name="UseDefaultCard" xml:space="preserve">
    <value>使用此卡作為預設卡</value>
  </data>
  <data name="SageExchangeVault" xml:space="preserve">
    <value>Sage Exchange - 保險庫</value>
  </data>
  <data name="BillingDetails" xml:space="preserve">
    <value>帳單明細</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="DefaultCardWarning" xml:space="preserve">
    <value>預設卡不能旗標為閒置。是否繼續？</value>
  </data>
  <data name="ProcessingCodeChangeWarning" xml:space="preserve">
    <value>如果您變更了此卡的處理代碼，信用卡明細將會被清除而需要重新輸入。是否變更處理代碼並清除信用卡明細？</value>
  </data>
  <data name="TransactionTypeID" xml:space="preserve">
    <value>交易類型代號</value>
  </data>
  <data name="Billing" xml:space="preserve">
    <value>帳單</value>
  </data>
  <data name="MaskedCardNumber1" xml:space="preserve">
    <value>被遮罩的卡編號</value>
  </data>
</root>