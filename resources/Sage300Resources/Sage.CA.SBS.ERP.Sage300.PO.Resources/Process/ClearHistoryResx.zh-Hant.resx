<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountSet" xml:space="preserve">
    <value>科目集合</value>
  </data>
  <data name="CreditDebitNotes" xml:space="preserve">
    <value>貸項/借項通知單</value>
  </data>
  <data name="DateNotInRange" xml:space="preserve">
    <value>輸入的日期位於在公司概況中指定的範圍之外。</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>採購訂單清除歷史</value>
  </data>
  <data name="FromAccountSet" xml:space="preserve">
    <value>從科目集合</value>
  </data>
  <data name="InvalidPeriod" xml:space="preserve">
    <value>期間{0}無效。</value>
  </data>
  <data name="Invoice" xml:space="preserve">
    <value>發票</value>
  </data>
  <data name="ItemNumber" xml:space="preserve">
    <value>產品編號</value>
  </data>
  <data name="NoAppLOCK" xml:space="preserve">
    <value>所有其他用戶都退出採購訂單並關閉該公司全部採購訂單視窗後纔能清除採購訂單歷史。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="PayablesClearingAudit" xml:space="preserve">
    <value>清除應付帳款清算</value>
  </data>
  <data name="Period" xml:space="preserve">
    <value>期間</value>
  </data>
  <data name="PrintedPostingJournal" xml:space="preserve">
    <value>清除已列印過帳日誌</value>
  </data>
  <data name="PurchaseHistory" xml:space="preserve">
    <value>清除採購歷史</value>
  </data>
  <data name="PurchaseStatistics" xml:space="preserve">
    <value>清除採購統計</value>
  </data>
  <data name="Receipt" xml:space="preserve">
    <value>進貨</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>退貨</value>
  </data>
  <data name="SelectionAlert" xml:space="preserve">
    <value>未選擇要清除的歷史資料。</value>
  </data>
  <data name="Through" xml:space="preserve">
    <value>至</value>
  </data>
  <data name="ThroughEndDayNumber" xml:space="preserve">
    <value>至日終編號</value>
  </data>
  <data name="ThroughYear" xml:space="preserve">
    <value>至年度</value>
  </data>
  <data name="ThroughYearPeriod" xml:space="preserve">
    <value>至年度/期間</value>
  </data>
  <data name="ToAccountSet" xml:space="preserve">
    <value>到科目集合</value>
  </data>
  <data name="TransactionHistory" xml:space="preserve">
    <value>清除交易歷史</value>
  </data>
  <data name="VendorNumber" xml:space="preserve">
    <value>供應商編號</value>
  </data>
</root>