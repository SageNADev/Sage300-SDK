<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuictlLessInvoiceDiscount" xml:space="preserve">
    <value>Less Invoice Discount</value>
    <comment>Totals - Field</comment>
  </data>
  <data name="AuictlTotalInvoice" xml:space="preserve">
    <value>Total Invoice</value>
    <comment>Totals - Field</comment>
  </data>
  <data name="CostTax" xml:space="preserve">
    <value>Cost/Tax…</value>
    <comment>Costs - Button</comment>
  </data>
  <data name="CreateInvoiceFromReceipts" xml:space="preserve">
    <value>Create Invoice From Receipts</value>
    <comment>Invoice Multiple Receipts</comment>
  </data>
  <data name="CurrencyDesc" xml:space="preserve">
    <value>Currency Description</value>
    <comment>Rates - Field</comment>
  </data>
  <data name="DeleteRCPDetail" xml:space="preserve">
    <value>Are you sure you want to exclude this receipt from this invoice?</value>
    <comment>Message</comment>
  </data>
  <data name="DistributeCost" xml:space="preserve">
    <value>Distribute Cost…</value>
    <comment>Costs - Button</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>P/O Invoice Entry</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FiscalYearPeriod1" xml:space="preserve">
    <value>Fiscal Year/Period</value>
    <comment>Invoice - Field</comment>
  </data>
  <data name="FromMultipleReceipts" xml:space="preserve">
    <value>From Multiple Receipts</value>
    <comment>Invoice - Check Box</comment>
  </data>
  <data name="History" xml:space="preserve">
    <value>History…</value>
    <comment>Button</comment>
  </data>
  <data name="InvalidInvoiceNumber" xml:space="preserve">
    <value>Cannot find the specified invoice number.</value>
    <comment>Error</comment>
  </data>
  <data name="InvoiceDetSubtotal" xml:space="preserve">
    <value>Invoice Detail Subtotal</value>
    <comment>Totals - Field</comment>
  </data>
  <data name="InvoiceTotal" xml:space="preserve">
    <value>Invoice Total</value>
    <comment>Invoice - Field</comment>
  </data>
  <data name="MultiRCPEnterVendorMessage" xml:space="preserve">
    <value>You must enter a vendor number before entering multiple receipt information.</value>
    <comment>Message</comment>
  </data>
  <data name="OptionalFieldDesc" xml:space="preserve">
    <value>Optional Field Description</value>
    <comment>Options - Table Column</comment>
  </data>
  <data name="PO0416" xml:space="preserve">
    <value>Invoice Comments</value>
    <comment>Export Header</comment>
  </data>
  <data name="PO0420" xml:space="preserve">
    <value>Invoices</value>
    <comment>Export Header</comment>
  </data>
  <data name="PO0423" xml:space="preserve">
    <value>Invoice Optional Fields</value>
    <comment>Export Header</comment>
  </data>
  <data name="PO0430" xml:space="preserve">
    <value>Invoice Lines</value>
    <comment>Export Header</comment>
  </data>
  <data name="PO0433" xml:space="preserve">
    <value>Invoice Detail Optional Fields</value>
    <comment>Export Header</comment>
  </data>
  <data name="PO0436" xml:space="preserve">
    <value>Invoice Payment Schedules</value>
    <comment>Export Header</comment>
  </data>
  <data name="PO0438" xml:space="preserve">
    <value>Invoice Receipts</value>
    <comment>Export Header</comment>
  </data>
  <data name="PO0440" xml:space="preserve">
    <value>Invoice Additional Costs</value>
    <comment>Export Header</comment>
  </data>
  <data name="PO0443" xml:space="preserve">
    <value>Invoice Additional Cost Optional Fields</value>
    <comment>Export Header</comment>
  </data>
  <data name="PostDoneINVNP" xml:space="preserve">
    <value>Posting completed. Invoice: {0}.</value>
    <comment>Message</comment>
  </data>
  <data name="RateTypeDesc" xml:space="preserve">
    <value>Rate Type Description</value>
    <comment>Rates - Field</comment>
  </data>
  <data name="RecalculateTerms" xml:space="preserve">
    <value>Do you want to recalculate the schedule dates?</value>
    <comment>Message</comment>
  </data>
  <data name="ReplaceINV" xml:space="preserve">
    <value>Do you want to replace the invoice information you entered with the information from Receipt {0}?</value>
    <comment>Message</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Do you want to post this invoice?</value>
    <comment>Message</comment>
  </data>
  <data name="SelectReceiptMessage" xml:space="preserve">
    <value>You must select at least one receipt to invoice before entering invoice information.</value>
    <comment>Message</comment>
  </data>
  <data name="TaxGroupDesc" xml:space="preserve">
    <value>Tax Group Description</value>
    <comment>Taxes - Table Column</comment>
  </data>
  <data name="TermsCodeDesc" xml:space="preserve">
    <value>Terms Code Description</value>
    <comment>Terms - Field</comment>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
    <comment>Options - Table Column</comment>
  </data>
  <data name="ValueDesc" xml:space="preserve">
    <value>Value Description</value>
    <comment>Options - Table Column</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>Value Set</value>
    <comment>Options - Table Column</comment>
  </data>
  <data name="VendorAcctSetDesc" xml:space="preserve">
    <value>Vendor Account Set Description</value>
    <comment>Invoice - Field</comment>
  </data>
</root>