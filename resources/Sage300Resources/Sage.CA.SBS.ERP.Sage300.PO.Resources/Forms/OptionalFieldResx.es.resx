<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllowBlank" xml:space="preserve">
    <value>Admitir en Blanco</value>
  </data>
  <data name="AutoInsert" xml:space="preserve">
    <value>Autoinsertar</value>
  </data>
  <data name="DefaultDateValue" xml:space="preserve">
    <value>Valor Fecha Predeterminado</value>
  </data>
  <data name="DefaultIntegerValue" xml:space="preserve">
    <value>Valor Entero Predeterminado</value>
  </data>
  <data name="DefaultMoneyValue" xml:space="preserve">
    <value>Valor Monetario Predeterminado</value>
  </data>
  <data name="DefaultNumberValue" xml:space="preserve">
    <value>Valor de Número Predeterminado</value>
  </data>
  <data name="DefaultTextValue" xml:space="preserve">
    <value>Valor de Texto Predeterminado</value>
  </data>
  <data name="DefaultTimeValue" xml:space="preserve">
    <value>Valor Hora Predeterminado</value>
  </data>
  <data name="DefaultValue" xml:space="preserve">
    <value>Valor Predeterminado</value>
  </data>
  <data name="DefaultValueDescription" xml:space="preserve">
    <value>Descripción de Valor Predeterminado</value>
  </data>
  <data name="DefaultValueMessage" xml:space="preserve">
    <value>Valor Predeterminado Campo Opcional {0}</value>
    <comment>Added</comment>
  </data>
  <data name="DefaultYesNoValue" xml:space="preserve">
    <value>Valor Sí/No Predeterminado</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>OC – Campos Opcionales</value>
    <comment>Screen Title</comment>
  </data>
  <data name="OptionalField" xml:space="preserve">
    <value>Campo Opcional</value>
  </data>
  <data name="OptionalFieldsFor" xml:space="preserve">
    <value>Campos Opcionales de</value>
  </data>
  <data name="OptionalFieldValues" xml:space="preserve">
    <value>Valores de Campos Opcionales</value>
    <comment>Table Column</comment>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Obligatorio</value>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>Valor Fijado</value>
  </data>
  <data name="CreditDebitNoteAdditionalCostDetails" xml:space="preserve">
    <value>Detalles Costo Adicional de Nota Crédito/Débito</value>
  </data>
  <data name="CreditDebitNoteDetails" xml:space="preserve">
    <value>Detalles de Nota de Crédito/Débito</value>
  </data>
  <data name="CreditDebitNotes" xml:space="preserve">
    <value>Notas de Débito/Crédito</value>
  </data>
  <data name="InvoiceAdditionalCostDetails" xml:space="preserve">
    <value>Detalles de Costo Adicional de Factura</value>
  </data>
  <data name="InvoiceDetails" xml:space="preserve">
    <value>Detalles de Factura</value>
  </data>
  <data name="PurchaseOrderDetails" xml:space="preserve">
    <value>Detalles de Orden de Compra</value>
  </data>
  <data name="ReceiptAdditionalCostDetails" xml:space="preserve">
    <value>Detalles de Costo Adicional de Recibo</value>
  </data>
  <data name="ReceiptAdditionalCosts" xml:space="preserve">
    <value>Costos Adicionales de Recibos</value>
  </data>
  <data name="ReceiptDetails" xml:space="preserve">
    <value>Detalles de Recibos</value>
  </data>
  <data name="RequisitionDetails" xml:space="preserve">
    <value>Detalles de Solicitud</value>
  </data>
  <data name="ReturnDetails" xml:space="preserve">
    <value>Detalles de Devolución</value>
  </data>
  <data name="AccountsPayable" xml:space="preserve">
    <value>Cuentas por Pagar</value>
  </data>
  <data name="AccountsPayableDetailGLAccounts" xml:space="preserve">
    <value>Cuentas del LM de Detalle de Cuentas por Pagar</value>
  </data>
  <data name="AdditionalCostExpense" xml:space="preserve">
    <value>Gasto de Costo Adicional</value>
  </data>
  <data name="AdditionalCostExpensePayablesClearing" xml:space="preserve">
    <value>C/P Gasto de Costo Adicional a Compensar</value>
  </data>
  <data name="Decimals" xml:space="preserve">
    <value>Decimales</value>
  </data>
  <data name="GLAccounts" xml:space="preserve">
    <value>Cuentas del LM</value>
  </data>
  <data name="InventoryControl" xml:space="preserve">
    <value>Control de Inventario</value>
  </data>
  <data name="InvoicesOptionalFields" xml:space="preserve">
    <value>Campos Opcionales de Factura</value>
  </data>
  <data name="Labor" xml:space="preserve">
    <value>Mano de Obra</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Longitud</value>
  </data>
  <data name="NonInventoryExpense" xml:space="preserve">
    <value>Gasto Fuera de Inventario</value>
  </data>
  <data name="NonInventoryPayablesClearing" xml:space="preserve">
    <value>C/P Fuera de Inventario a Compensar</value>
  </data>
  <data name="NonStockClearing" xml:space="preserve">
    <value>No Almacenables a Compensar</value>
  </data>
  <data name="NumberOfValues" xml:space="preserve">
    <value>Número de Valores</value>
  </data>
  <data name="OptionalFieldDescription" xml:space="preserve">
    <value>Descripción Campo Opcional</value>
  </data>
  <data name="Overhead" xml:space="preserve">
    <value>Gastos Generales</value>
  </data>
  <data name="PayablesClearing" xml:space="preserve">
    <value>C/P a Compensar</value>
  </data>
  <data name="TypedDefaultValueFieldIndex" xml:space="preserve">
    <value>Índice de Campo de Valor Escrito Predeterminado</value>
  </data>
  <data name="Validate" xml:space="preserve">
    <value>Validar</value>
  </data>
  <data name="SettingsDescription" xml:space="preserve">
    <value>Estas especificaciones determinan si este campo opcional se incluye con las transacciones del Libro Mayor y con las transacciones enviadas a otros libros mayores auxiliares.</value>
  </data>
  <data name="ExternalCostTransactions" xml:space="preserve">
    <value>Transacciones de Costo Externo</value>
  </data>
  <data name="PO0580" xml:space="preserve">
    <value>OC - Campos Opcionales</value>
  </data>
  <data name="PO0585" xml:space="preserve">
    <value>OC - Ubicaciones de Campos Opcionales</value>
  </data>
  <data name="Integer" xml:space="preserve">
    <value>Entero</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Número</value>
  </data>
  <data name="YesNo" xml:space="preserve">
    <value>Sí/No</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Texto</value>
  </data>
</root>