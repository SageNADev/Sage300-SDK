<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCostOptFlds" xml:space="preserve">
    <value>采购订单附加成本可选字段</value>
    <comment>Modal Title</comment>
  </data>
  <data name="AddEdit" xml:space="preserve">
    <value>添加/编辑</value>
    <comment>Hamburger menu</comment>
  </data>
  <data name="AdditionalCost" xml:space="preserve">
    <value>附加成本</value>
    <comment>Field</comment>
  </data>
  <data name="AllowBlank" xml:space="preserve">
    <value>允许空置</value>
    <comment>Field</comment>
  </data>
  <data name="AmountValue" xml:space="preserve">
    <value>金额值</value>
    <comment>Field</comment>
  </data>
  <data name="Command" xml:space="preserve">
    <value>指令</value>
    <comment>Finder column</comment>
  </data>
  <data name="CurrencyDescription" xml:space="preserve">
    <value>币种描述</value>
    <comment>Field</comment>
  </data>
  <data name="DateInactive" xml:space="preserve">
    <value>闲置日期</value>
    <comment>Field</comment>
  </data>
  <data name="DateLastMaintained" xml:space="preserve">
    <value>上一维护日期</value>
    <comment>Field</comment>
  </data>
  <data name="DateValue" xml:space="preserve">
    <value>日期值</value>
    <comment>Field</comment>
  </data>
  <data name="DefaultValueDescription" xml:space="preserve">
    <value>默认值描述</value>
    <comment>Field</comment>
  </data>
  <data name="DeleteAddCost" xml:space="preserve">
    <value>是否确要删除附加成本{0}？</value>
    <comment>Confirmation</comment>
  </data>
  <data name="DeleteDetailLine" xml:space="preserve">
    <value>是否确要删除这一税务机构？</value>
    <comment>Confirmation</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>采购订单附加成本</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ExpAcct" xml:space="preserve">
    <value>费用科目</value>
    <comment>Field</comment>
  </data>
  <data name="ExpenseAccountDescription" xml:space="preserve">
    <value>费用科目描述</value>
    <comment>Field</comment>
  </data>
  <data name="GLAcctconst" xml:space="preserve">
    <value>总帐科目</value>
    <comment>Field</comment>
  </data>
  <data name="IntegerValue" xml:space="preserve">
    <value>整数值</value>
    <comment>Field</comment>
  </data>
  <data name="Lines" xml:space="preserve">
    <value>行</value>
    <comment>Field</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
    <comment>Field</comment>
  </data>
  <data name="NumberValue" xml:space="preserve">
    <value>数字值</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalField" xml:space="preserve">
    <value>可选字段</value>
    <comment>Field</comment>
  </data>
  <data name="OptionalFieldDescription" xml:space="preserve">
    <value>可选字段描述</value>
    <comment>Table Column</comment>
  </data>
  <data name="PO0290" xml:space="preserve">
    <value>附加成本税</value>
    <comment>Field</comment>
  </data>
  <data name="PO0299" xml:space="preserve">
    <value>附加成本可选字段</value>
    <comment>Field</comment>
  </data>
  <data name="PO0300" xml:space="preserve">
    <value>附加成本</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessingDescription" xml:space="preserve">
    <value>附加成本描述</value>
    <comment>Field</comment>
  </data>
  <data name="Proration" xml:space="preserve">
    <value>摊配</value>
    <comment>Field</comment>
  </data>
  <data name="ProrationMethod" xml:space="preserve">
    <value>摊配方法</value>
    <comment>Field</comment>
  </data>
  <data name="ReprorationMethod" xml:space="preserve">
    <value>再摊配方法</value>
    <comment>Field</comment>
  </data>
  <data name="ReturnAccountDescription" xml:space="preserve">
    <value>退货科目描述</value>
    <comment>Field</comment>
  </data>
  <data name="ReturnAcct" xml:space="preserve">
    <value>退货科目</value>
    <comment>Field</comment>
  </data>
  <data name="ReturnProration" xml:space="preserve">
    <value>退货摊配</value>
    <comment>Field</comment>
  </data>
  <data name="SaveAdditionalCost" xml:space="preserve">
    <value>是否保存对附加成本{0}的更改？</value>
    <comment>Confirmation</comment>
  </data>
  <data name="TaxAuthNotExist" xml:space="preserve">
    <value>无法找到指定的税务机构。</value>
    <comment>Error</comment>
  </data>
  <data name="TaxAuthority" xml:space="preserve">
    <value>税务机构</value>
    <comment>Field</comment>
  </data>
  <data name="TaxClass" xml:space="preserve">
    <value>税级</value>
    <comment>Field</comment>
  </data>
  <data name="TaxClassNotExist" xml:space="preserve">
    <value>无法找到指定的税级。</value>
    <comment>Error</comment>
  </data>
  <data name="TaxClsDescription" xml:space="preserve">
    <value>税级描述</value>
    <comment>Field</comment>
  </data>
  <data name="TaxDescription" xml:space="preserve">
    <value>税务描述</value>
    <comment>Field</comment>
  </data>
  <data name="TextValue" xml:space="preserve">
    <value>文本值</value>
    <comment>Field</comment>
  </data>
  <data name="TimeValue" xml:space="preserve">
    <value>时间值</value>
    <comment>Field</comment>
  </data>
  <data name="TypedValueFieldIndex" xml:space="preserve">
    <value>键入的值字段索引</value>
    <comment>Field</comment>
  </data>
  <data name="Value" xml:space="preserve">
    <value>值</value>
    <comment>Table Column</comment>
  </data>
  <data name="ValueDescription" xml:space="preserve">
    <value>值描述</value>
    <comment>Table Column</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>值已设</value>
    <comment>Table Column</comment>
  </data>
  <data name="VendorExists" xml:space="preserve">
    <value>供应商存在</value>
    <comment>Field</comment>
  </data>
  <data name="VendorNoDescription" xml:space="preserve">
    <value>供应商描述</value>
    <comment>Field</comment>
  </data>
  <data name="VendorOnHold" xml:space="preserve">
    <value>供应商已搁置。</value>
    <comment>Field</comment>
  </data>
  <data name="YesNoValue" xml:space="preserve">
    <value>是/否值</value>
    <comment>Field</comment>
  </data>
</root>