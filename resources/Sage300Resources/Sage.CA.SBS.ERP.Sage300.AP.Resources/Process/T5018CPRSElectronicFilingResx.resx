<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressLine1" xml:space="preserve">
    <value>Address Line 1</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="AddressLine2" xml:space="preserve">
    <value>Address Line 2</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="CounterOverflow" xml:space="preserve">
    <value>The output file cannot include more than 99,999,999 records.</value>
    <comment>Error</comment>
  </data>
  <data name="CountryCode" xml:space="preserve">
    <value>Country Code</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="EmptyField" xml:space="preserve">
    <value>{0} cannot be blank, and is required by the IRS.</value>
    <comment>Error</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>A/P T5018 (CPRS) Electronic Filing</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FedTaxWithHd" xml:space="preserve">
    <value>Federal income tax withheld appears excessive in relation to the income amount.</value>
    <comment>Error</comment>
  </data>
  <data name="FileFalse" xml:space="preserve">
    <value>0</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="FileTrue" xml:space="preserve">
    <value>1</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ForeignAddrSize" xml:space="preserve">
    <value>Total address length will exceed space available in the file.  Reenter the City, State, ZIP/Postal Code, and/or Country.</value>
    <comment>Error</comment>
  </data>
  <data name="FrameXmitInfo" xml:space="preserve">
    <value>Transmitter Information</value>
    <comment>Group</comment>
  </data>
  <data name="FromCPRSCode" xml:space="preserve">
    <value>From CPRS Code</value>
    <comment>Field</comment>
  </data>
  <data name="InvState" xml:space="preserve">
    <value>Enter a valid State code as defined by the US Postal Service</value>
    <comment>Error</comment>
  </data>
  <data name="InvTaxIDno" xml:space="preserve">
    <value>Tax Number must be exactly 9 digits long, and can include only digits, dashes, and spaces.</value>
    <comment>Error</comment>
  </data>
  <data name="InvTaxYear" xml:space="preserve">
    <value>Payment Year cannot be later than the current year.</value>
    <comment>Error</comment>
  </data>
  <data name="InvTaxYrTest" xml:space="preserve">
    <value>The specified Payment Year can be used only for test files.</value>
    <comment>Error</comment>
  </data>
  <data name="InvTCC" xml:space="preserve">
    <value>Transmitter Control Code (TCC) must be the five-character alphanumeric code assigned by the IRS/MCC.</value>
    <comment>Error</comment>
  </data>
  <data name="InvZIPcode" xml:space="preserve">
    <value>ZIP/Postal Code must contain only digits or a single dash after five digits.</value>
    <comment>Error</comment>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
    <comment>TransmitterInfo - List</comment>
  </data>
  <data name="Name1" xml:space="preserve">
    <value>Name Line 1</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="Name2" xml:space="preserve">
    <value>Name Line 2</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="NoRecords" xml:space="preserve">
    <value>No records match your criteria. No file will be generated.</value>
    <comment>Error</comment>
  </data>
  <data name="OutFilePath" xml:space="preserve">
    <value>Cannot find file or folder {0}. Please try again.</value>
    <comment>Error</comment>
  </data>
  <data name="OutputDest" xml:space="preserve">
    <value>Output File</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessDone" xml:space="preserve">
    <value>Process complete.  File {0} was generated successfully and is ready to download.</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="SubmissionReferenceID" xml:space="preserve">
    <value>Submission Reference ID</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="SuffixVend" xml:space="preserve">
    <value>Use the Vendors window to make changes.</value>
    <comment>Error</comment>
  </data>
  <data name="TaxYear" xml:space="preserve">
    <value>Payment Year</value>
    <comment>Field</comment>
  </data>
  <data name="TmpFilePath" xml:space="preserve">
    <value>A problem occurred and the temporary file was not created.</value>
    <comment>Error</comment>
  </data>
  <data name="ToCPRSCode" xml:space="preserve">
    <value>To CPRS Code</value>
    <comment>Field</comment>
  </data>
  <data name="TooManyErrors" xml:space="preserve">
    <value>{0} errors occurred in Vendors, the {1} of which are listed here.  Check other Vendor records for errors.</value>
    <comment>Error</comment>
  </data>
  <data name="TransmitterNumber" xml:space="preserve">
    <value>Transmitter Number</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="VendCodeOverflow" xml:space="preserve">
    <value>The total amount paid in this Payment Year to Vendor {0} for 1099 code {1} is too large to be stored in the file.  No more than $9,999,999,999.99 may be specified for any code and vendor.</value>
    <comment>Error</comment>
  </data>
  <data name="XferAgent" xml:space="preserve">
    <value>If a transfer agent is acting for the payer, the agent's name must appear in the Agent field.</value>
    <comment>Error</comment>
  </data>
  <data name="Amended" xml:space="preserve">
    <value>Amended</value>
    <comment>Enum Value</comment>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelled</value>
    <comment>Enum Value</comment>
  </data>
  <data name="Original" xml:space="preserve">
    <value>Original</value>
    <comment>Enum Value</comment>
  </data>
  <data name="ZipOrPostalCode" xml:space="preserve">
    <value>ZIP/Postal Code</value>
    <comment>Transmitter/Payer Zip Code</comment>
  </data>
  <data name="ErrorMsgFileName" xml:space="preserve">
    <value>Filename cannot be blank.</value>
    <comment>Error</comment>
  </data>
  <data name="AllowCPRSReporting" xml:space="preserve">
    <value>The option to allow CPRS reporting is not selected in A/P Options.</value>
    <comment>Error message</comment>
  </data>
  <data name="PaymentYearError" xml:space="preserve">
    <value>Payment Year can not be blank.</value>
    <comment>Error</comment>
  </data>
  <data name="CanadaCode" xml:space="preserve">
    <value>CAN</value>
    <comment>Country Code</comment>
  </data>
</root>