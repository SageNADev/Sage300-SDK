<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressLine1" xml:space="preserve">
    <value>地址行1</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="AddressLine2" xml:space="preserve">
    <value>地址行2</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="CounterOverflow" xml:space="preserve">
    <value>输出文件不能包括超过99,999,999条记录。</value>
    <comment>Error</comment>
  </data>
  <data name="CountryCode" xml:space="preserve">
    <value>国家代码</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="EmptyField" xml:space="preserve">
    <value>{0}不能空置，而且为IRS要求。</value>
    <comment>Error</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>应付帐款T5018 (CPRS)电子申报</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FedTaxWithHd" xml:space="preserve">
    <value>联邦所得税扣缴相对于收入金额似乎过多。</value>
    <comment>Error</comment>
  </data>
  <data name="FileFalse" xml:space="preserve">
    <value>0</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="FileTrue" xml:space="preserve">
    <value>1</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ForeignAddrSize" xml:space="preserve">
    <value>总地址长度将超过文件中可用的空间。重新输入市县，省市区，邮编代码，和/或国家。</value>
    <comment>Error</comment>
  </data>
  <data name="FrameXmitInfo" xml:space="preserve">
    <value>传送者信息</value>
    <comment>Group</comment>
  </data>
  <data name="FromCPRSCode" xml:space="preserve">
    <value>从CPRS代码</value>
    <comment>Field</comment>
  </data>
  <data name="InvState" xml:space="preserve">
    <value>输入由美国邮政总局定义的有效的国家代码。</value>
    <comment>Error</comment>
  </data>
  <data name="InvTaxIDno" xml:space="preserve">
    <value>税务编号必须正好是9位数，并且只能包含数字，破折号，和空格。</value>
    <comment>Error</comment>
  </data>
  <data name="InvTaxYear" xml:space="preserve">
    <value>付款年度不能迟于当前年度。</value>
    <comment>Error</comment>
  </data>
  <data name="InvTaxYrTest" xml:space="preserve">
    <value>指定的付款年度仅可用于测试文件。</value>
    <comment>Error</comment>
  </data>
  <data name="InvTCC" xml:space="preserve">
    <value>发送器控制代码（TCC）必须是IRS/MCC分派的五字符字母数字代码。</value>
    <comment>Error</comment>
  </data>
  <data name="InvZIPcode" xml:space="preserve">
    <value>邮政编码必须仅包含数字或五个数字后的单一破折号。</value>
    <comment>Error</comment>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
    <comment>TransmitterInfo - List</comment>
  </data>
  <data name="Name1" xml:space="preserve">
    <value>名称行1</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="Name2" xml:space="preserve">
    <value>名称行2</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="NoRecords" xml:space="preserve">
    <value>没有记录符合您的标准。将不会生成任何文件。</value>
    <comment>Error</comment>
  </data>
  <data name="OutFilePath" xml:space="preserve">
    <value>无法找到文件或文件夹{0}。请重试。</value>
    <comment>Error</comment>
  </data>
  <data name="OutputDest" xml:space="preserve">
    <value>输出文件</value>
    <comment>Field</comment>
  </data>
  <data name="ProcessDone" xml:space="preserve">
    <value>处理完成。文件{0}已成功生成并可供下载。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="SubmissionReferenceID" xml:space="preserve">
    <value>提交参考标识</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="SuffixVend" xml:space="preserve">
    <value>使用供应商窗口进行更改。</value>
    <comment>Error</comment>
  </data>
  <data name="TaxYear" xml:space="preserve">
    <value>付款年度</value>
    <comment>Field</comment>
  </data>
  <data name="TmpFilePath" xml:space="preserve">
    <value>发生一个问题，未创建临时文件。</value>
    <comment>Error</comment>
  </data>
  <data name="ToCPRSCode" xml:space="preserve">
    <value>到CPRS代码</value>
    <comment>Field</comment>
  </data>
  <data name="TooManyErrors" xml:space="preserve">
    <value>供应商中发生{0}个错误，其中{1}个列在此处。检查其它供应商记录是否有错误。</value>
    <comment>Error</comment>
  </data>
  <data name="TransmitterNumber" xml:space="preserve">
    <value>传送器编号</value>
    <comment>TransmitterInfo - Field</comment>
  </data>
  <data name="VendCodeOverflow" xml:space="preserve">
    <value>这一付款年度到供应商{0}中为1099代码{1}的合计已支付金额太大而不能存储在文件中。不可以为任何代码和供应商定义超过$9,999,999,999.99。</value>
    <comment>Error</comment>
  </data>
  <data name="XferAgent" xml:space="preserve">
    <value>如果付款者有一个转帐代理为其服务，代理的名称必须出现在代理字段中。</value>
    <comment>Error</comment>
  </data>
  <data name="Amended" xml:space="preserve">
    <value>已修改</value>
    <comment>Enum Value</comment>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>已取消</value>
    <comment>Enum Value</comment>
  </data>
  <data name="Original" xml:space="preserve">
    <value>原始</value>
    <comment>Enum Value</comment>
  </data>
  <data name="ZipOrPostalCode" xml:space="preserve">
    <value>邮政编码</value>
    <comment>Transmitter/Payer Zip Code</comment>
  </data>
  <data name="ErrorMsgFileName" xml:space="preserve">
    <value>文件名不能空置。</value>
    <comment>Error</comment>
  </data>
  <data name="AllowCPRSReporting" xml:space="preserve">
    <value>未在应付帐款选项中选择允许CPRS报告的选项。</value>
    <comment>Error message</comment>
  </data>
  <data name="PaymentYearError" xml:space="preserve">
    <value>付款年度不能空置。</value>
    <comment>Error</comment>
  </data>
  <data name="CanadaCode" xml:space="preserve">
    <value>CAN</value>
    <comment>Country Code</comment>
  </data>
</root>