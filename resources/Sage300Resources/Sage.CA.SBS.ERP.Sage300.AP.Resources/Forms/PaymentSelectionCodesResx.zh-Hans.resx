<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmountValue" xml:space="preserve">
    <value>金额值</value>
  </data>
  <data name="AP0035" xml:space="preserve">
    <value>选择标准标头</value>
  </data>
  <data name="AP0036" xml:space="preserve">
    <value>选择标准明细</value>
  </data>
  <data name="AP0411" xml:space="preserve">
    <value>选择标准可选字段</value>
  </data>
  <data name="BankCurrencyCode" xml:space="preserve">
    <value>银行币种代码</value>
  </data>
  <data name="BankExchangeRate" xml:space="preserve">
    <value>银行汇率</value>
  </data>
  <data name="BankMatch" xml:space="preserve">
    <value>银行匹配</value>
  </data>
  <data name="BankRateOperator" xml:space="preserve">
    <value>银行汇率运算符</value>
  </data>
  <data name="BankRateOverridden" xml:space="preserve">
    <value>银行汇率已撤换</value>
  </data>
  <data name="BankRateType" xml:space="preserve">
    <value>银行汇率类型</value>
  </data>
  <data name="CsvFilename" xml:space="preserve">
    <value>CSV文件名</value>
  </data>
  <data name="DateValue" xml:space="preserve">
    <value>日期值</value>
  </data>
  <data name="DocumentstoProcess" xml:space="preserve">
    <value>要处理的凭证</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>应付帐款付款选择代码</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ExcludeVendor" xml:space="preserve">
    <value>排除供应商</value>
  </data>
  <data name="ExcludeVendorNumber" xml:space="preserve">
    <value>排除供应商编号</value>
  </data>
  <data name="FromDiscountDate" xml:space="preserve">
    <value>从折扣日期</value>
  </data>
  <data name="FromGroupCode" xml:space="preserve">
    <value>从群组代码</value>
  </data>
  <data name="FromOptionalFieldValue" xml:space="preserve">
    <value>从可选字段值</value>
  </data>
  <data name="FromPaymentCode" xml:space="preserve">
    <value>从付款代码</value>
  </data>
  <data name="GeneratedSelectionCriteria" xml:space="preserve">
    <value>已生成的选择标准</value>
  </data>
  <data name="IntegerValue" xml:space="preserve">
    <value>整数值</value>
  </data>
  <data name="JobApplyMethod" xml:space="preserve">
    <value>项目核销方法</value>
  </data>
  <data name="MaximumPaymentAmount" xml:space="preserve">
    <value>最高付款金额</value>
  </data>
  <data name="MinimumPaymentAmount" xml:space="preserve">
    <value>最低付款金额</value>
  </data>
  <data name="NumberValue" xml:space="preserve">
    <value>数字值</value>
  </data>
  <data name="OptionalFieldDesc" xml:space="preserve">
    <value>可选字段描述</value>
    <comment>Optional - Table Column</comment>
  </data>
  <data name="PaymentBankCode" xml:space="preserve">
    <value>付款银行代码</value>
  </data>
  <data name="PaymentSelectionCode" xml:space="preserve">
    <value>付款选择代码</value>
  </data>
  <data name="ProcessCommandCode" xml:space="preserve">
    <value>处理指令代码</value>
  </data>
  <data name="SelectDocumentsby" xml:space="preserve">
    <value>选择凭证标准</value>
  </data>
  <data name="SelectionCodeDescription" xml:space="preserve">
    <value>选择代码描述</value>
  </data>
  <data name="SelectionCriteria" xml:space="preserve">
    <value>选择标准</value>
  </data>
  <data name="SelectionCriteriaHeader" xml:space="preserve">
    <value>选择标准标头</value>
  </data>
  <data name="TextValue" xml:space="preserve">
    <value>文本值</value>
  </data>
  <data name="ThruAccountSet" xml:space="preserve">
    <value>至科目集合</value>
  </data>
  <data name="ThruDiscountDate" xml:space="preserve">
    <value>至折扣日期</value>
  </data>
  <data name="ThruGroupCode" xml:space="preserve">
    <value>至群组代码</value>
  </data>
  <data name="ThruOptionalFieldValue" xml:space="preserve">
    <value>至可选字段值</value>
  </data>
  <data name="ThruPaymentCode" xml:space="preserve">
    <value>至付款代码</value>
  </data>
  <data name="TimeValue" xml:space="preserve">
    <value>时间值</value>
  </data>
  <data name="TypedValueFieldIndex" xml:space="preserve">
    <value>键入的值字段索引</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>值</value>
    <comment>Optional - Table Column</comment>
  </data>
  <data name="ValueDesc" xml:space="preserve">
    <value>值描述</value>
    <comment>Optional - Table Column</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>值已设</value>
    <comment>Optional - Table Column</comment>
  </data>
  <data name="VendorCurrencyCode" xml:space="preserve">
    <value>供应商币种代码</value>
  </data>
  <data name="VendorExchangeRate" xml:space="preserve">
    <value>供应商币种汇率</value>
  </data>
  <data name="VendorRateDate" xml:space="preserve">
    <value>供应商币种汇率日期</value>
  </data>
  <data name="VendorRateOperator" xml:space="preserve">
    <value>供应商币种汇率运算符</value>
  </data>
  <data name="VendorRateOverridden" xml:space="preserve">
    <value>已替代供应商汇率</value>
  </data>
  <data name="VendorRateType" xml:space="preserve">
    <value>供应商币种汇率类型</value>
  </data>
  <data name="YesOrNoValue" xml:space="preserve">
    <value>是/否值</value>
  </data>
  <data name="DateDue" xml:space="preserve">
    <value>到期日期</value>
  </data>
  <data name="ThruVendorNumber" xml:space="preserve">
    <value>至供应商编号</value>
  </data>
  <data name="Vendorswithanybankcode" xml:space="preserve">
    <value>有任何银行代码的供应商</value>
  </data>
  <data name="Vendorswithpaymentbankcodeonly" xml:space="preserve">
    <value>仅有付款银行代码的供应商</value>
  </data>
  <data name="DateLastMaintained" xml:space="preserve">
    <value>上一维护日期</value>
  </data>
  <data name="DocumentstoProcess_Processforceddocumentsonly" xml:space="preserve">
    <value>仅处理强制的凭证</value>
  </data>
  <data name="RateTypeInvalid" xml:space="preserve">
    <value>未在公共服务中定义汇率类型&quot;{0}&quot;。</value>
  </data>
  <data name="BankCode" xml:space="preserve">
    <value>银行代码</value>
  </data>
</root>