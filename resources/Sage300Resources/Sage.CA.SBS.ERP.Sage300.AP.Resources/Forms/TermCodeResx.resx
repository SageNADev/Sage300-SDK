<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddMonths" xml:space="preserve">
    <value>Add Months</value>
    <comment>Due Date and Discount Date table Header</comment>
  </data>
  <data name="AP0011" xml:space="preserve">
    <value>Terms Payment Schedule</value>
    <comment>Used for Export/Import</comment>
  </data>
  <data name="AP0012" xml:space="preserve">
    <value>Terms</value>
    <comment>Used for Export/Import</comment>
  </data>
  <data name="APTerms" xml:space="preserve">
    <value>A/P Terms</value>
    <comment>Added to display screen title</comment>
  </data>
  <data name="CalcBaseforDiscountwithTax" xml:space="preserve">
    <value>Calculate Base for Discount with Tax</value>
  </data>
  <data name="CannotTurnOffMultiplePayment" xml:space="preserve">
    <value>You cannot clear the Multiple Payment Schedule option if you have set up more than one payment.  Delete extra payment lines, and then clear the option.</value>
    <comment>Warning message</comment>
  </data>
  <data name="DateLastMaintained" xml:space="preserve">
    <value>Date Last Maintained</value>
  </data>
  <data name="DayOfMonth" xml:space="preserve">
    <value>Day of Month</value>
  </data>
  <data name="DiscountDateTable" xml:space="preserve">
    <value>Discount Date Table</value>
    <comment>Label</comment>
  </data>
  <data name="DiscountDateType" xml:space="preserve">
    <value>Discount Date Type</value>
    <comment>Label</comment>
  </data>
  <data name="DiscountDayofMonth" xml:space="preserve">
    <value>Discount Day of Month</value>
    <comment>Grid Header</comment>
  </data>
  <data name="DiscountNumberofDays" xml:space="preserve">
    <value>Discount Number of Days</value>
    <comment>Grid Header</comment>
  </data>
  <data name="DiscountPercentErrorMessage" xml:space="preserve">
    <value>Discount percent cannot exceed 100.</value>
    <comment>Error message for grid</comment>
  </data>
  <data name="DiscountTableDayofMonth1" xml:space="preserve">
    <value>Discount Table Day of Month 1</value>
  </data>
  <data name="DiscountTableDayofMonth2" xml:space="preserve">
    <value>Discount Table Day of Month 2</value>
  </data>
  <data name="DiscountTableDayofMonth3" xml:space="preserve">
    <value>Discount Table Day of Month 3</value>
  </data>
  <data name="DiscountTableDayofMonth4" xml:space="preserve">
    <value>Discount Table Day of Month 4</value>
  </data>
  <data name="DiscountTableEndingDay1" xml:space="preserve">
    <value>Discount Table Ending Day 1</value>
  </data>
  <data name="DiscountTableEndingDay2" xml:space="preserve">
    <value>Discount Table Ending Day 2</value>
  </data>
  <data name="DiscountTableEndingDay3" xml:space="preserve">
    <value>Discount Table Ending Day 3</value>
  </data>
  <data name="DiscountTableEndingDay4" xml:space="preserve">
    <value>Discount Table Ending Day 4</value>
  </data>
  <data name="DiscountTableAddMonths1" xml:space="preserve">
    <value>Discount Table Add Months 1</value>
  </data>
  <data name="DiscountTableAddMonths2" xml:space="preserve">
    <value>Discount Table Add Months 2</value>
  </data>
  <data name="DiscountTableAddMonths3" xml:space="preserve">
    <value>Discount Table Add Months 3</value>
  </data>
  <data name="DiscountTableAddMonths4" xml:space="preserve">
    <value>Discount Table Add Months 4</value>
  </data>
  <data name="DiscountTableStartingDay1" xml:space="preserve">
    <value>Discount Table Starting Day 1</value>
  </data>
  <data name="DiscountTableStartingDay2" xml:space="preserve">
    <value>Discount Table Starting Day 2</value>
  </data>
  <data name="DiscountTableStartingDay3" xml:space="preserve">
    <value>Discount Table Starting Day 3</value>
  </data>
  <data name="DiscountTableStartingDay4" xml:space="preserve">
    <value>Discount Table Starting Day 4</value>
  </data>
  <data name="DiscountType" xml:space="preserve">
    <value>Discount Type</value>
    <comment>Field</comment>
  </data>
  <data name="DISCPCT" xml:space="preserve">
    <value>Discount Percentage</value>
  </data>
  <data name="DiscType" xml:space="preserve">
    <value>Discount Type</value>
  </data>
  <data name="DTEDUESYNC" xml:space="preserve">
    <value>Due Date Sync</value>
  </data>
  <data name="DueDateTable" xml:space="preserve">
    <value>Due Date Table</value>
    <comment>Label</comment>
  </data>
  <data name="DueTableDayofMonth1" xml:space="preserve">
    <value>Due Table Day of Month 1</value>
  </data>
  <data name="DueTableDayofMonth2" xml:space="preserve">
    <value>Due Table Day of Month 2</value>
  </data>
  <data name="DueTableDayofMonth3" xml:space="preserve">
    <value>Due Table Day of Month 3</value>
  </data>
  <data name="DueTableDayofMonth4" xml:space="preserve">
    <value>Due Table Day of Month 4</value>
  </data>
  <data name="DueDateTableEndingDay1" xml:space="preserve">
    <value>Due Date Table Ending Day 1</value>
  </data>
  <data name="DueDateTableEndingDay2" xml:space="preserve">
    <value>Due Date Table Ending Day 2</value>
  </data>
  <data name="DueDateTableEndingDay3" xml:space="preserve">
    <value>Due Date Table Ending Day 3</value>
  </data>
  <data name="DueDateTableEndingDay4" xml:space="preserve">
    <value>Due Date Table Ending Day 4</value>
  </data>
  <data name="DueTableAddMonths1" xml:space="preserve">
    <value>Due Table Add Months 1</value>
  </data>
  <data name="DueTableAddMonths2" xml:space="preserve">
    <value>Due Table Add Months 2</value>
  </data>
  <data name="DueTableAddMonths3" xml:space="preserve">
    <value>Due Table Add Months 3</value>
  </data>
  <data name="DueTableAddMonths4" xml:space="preserve">
    <value>Due Table Add Months 4</value>
  </data>
  <data name="DueDateTableStartingDay1" xml:space="preserve">
    <value>Due Date Table Starting Day 1</value>
  </data>
  <data name="DueDateTableStartingDay2" xml:space="preserve">
    <value>Due Date Table Starting Day 2</value>
  </data>
  <data name="DueDateTableStartingDay3" xml:space="preserve">
    <value>Due Date Table Starting Day 3</value>
  </data>
  <data name="DueDateTableStartingDay4" xml:space="preserve">
    <value>Due Date Table Starting Day 4</value>
  </data>
  <data name="DueDateType" xml:space="preserve">
    <value>Due Date Type</value>
    <comment>Field</comment>
  </data>
  <data name="DueDayofMonth" xml:space="preserve">
    <value>Due Day of Month</value>
  </data>
  <data name="DUENBRDAYS" xml:space="preserve">
    <value>Due Number of Days</value>
  </data>
  <data name="DueNumberofDays" xml:space="preserve">
    <value>Due Number of Days</value>
  </data>
  <data name="DueType" xml:space="preserve">
    <value>Due Type</value>
  </data>
  <data name="EndingDay" xml:space="preserve">
    <value>Ending Day</value>
    <comment>Due Date and Discount Date table Header</comment>
  </data>
  <data name="DiscountPercent" xml:space="preserve">
    <value>Discount Percent</value>
    <comment>Grid header/ field</comment>
  </data>
  <data name="GridDueNumberofDays" xml:space="preserve">
    <value>Number of Days</value>
    <comment>Grid header field</comment>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="InactiveDate" xml:space="preserve">
    <value>Inactive Date</value>
  </data>
  <data name="MultiplePaymentSchedule" xml:space="preserve">
    <value>Multiple Payment Schedule</value>
    <comment>Field</comment>
  </data>
  <data name="NumberofPayments" xml:space="preserve">
    <value>Number of Payments</value>
  </data>
  <data name="PaymentNumber" xml:space="preserve">
    <value>Payment Number</value>
  </data>
  <data name="PercentDue" xml:space="preserve">
    <value>Percent Due</value>
    <comment>Grid Header</comment>
  </data>
  <data name="StartingDay" xml:space="preserve">
    <value>Starting Day</value>
    <comment>Due Date and Discount Date table Header</comment>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TotalPercentageDue" xml:space="preserve">
    <value>Total Percentage Due</value>
  </data>
  <data name="UsePaymentSchedule" xml:space="preserve">
    <value>Use Payment Schedule</value>
  </data>
  <data name="MethodofCalcforDueDate" xml:space="preserve">
    <value>Method of Calc for Due Date</value>
    <comment>Field</comment>
  </data>
  <data name="InactiveFailure" xml:space="preserve">
    <value>Cannot be made inactive.</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="MethodofCalcforDiscountDate" xml:space="preserve">
    <value>Method of Calc for Discount Date</value>
  </data>
  <data name="PercentageDue" xml:space="preserve">
    <value>Percentage Due</value>
  </data>
</root>