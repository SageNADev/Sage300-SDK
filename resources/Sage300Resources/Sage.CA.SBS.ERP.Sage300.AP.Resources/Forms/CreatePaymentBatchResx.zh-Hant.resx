<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="At" xml:space="preserve">
    <value>時間</value>
    <comment>Select - Field</comment>
  </data>
  <data name="CurrencyDesc" xml:space="preserve">
    <value>幣別描述</value>
    <comment>Rates - Field</comment>
  </data>
  <data name="DataLastMaintained" xml:space="preserve">
    <value>上一維護日期</value>
  </data>
  <data name="DiscountsAvailableFrom" xml:space="preserve">
    <value>可用折扣從</value>
    <comment>Criteria - Field</comment>
  </data>
  <data name="DiscountsAvailableTo" xml:space="preserve">
    <value>可用折扣到</value>
    <comment>Criteria - Field</comment>
  </data>
  <data name="DocumentToProcess" xml:space="preserve">
    <value>要處理的憑證</value>
  </data>
  <data name="DueOnOrBefore" xml:space="preserve">
    <value>在此日前到期</value>
    <comment>Criteria - Field</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>應付帳款建立付款批次</value>
    <comment>Screen Title</comment>
  </data>
  <data name="IncludeBypassed" xml:space="preserve">
    <value>在付款登記簿中包括未選擇的預付款</value>
    <comment>Error</comment>
  </data>
  <data name="IncludeBypassedHelp" xml:space="preserve">
    <value>包括付款登記簿上到期但因有付款控制而被排除在批次外，或者在排除列表中的付款。使用這個來檢查哪些發票將作為陳舊的擱置或者過於籠統的擱置的結果而不予支付。</value>
    <comment>Hover Help</comment>
  </data>
  <data name="invalidPaymentSelectionCode" xml:space="preserve">
    <value>無法找到付款選擇代碼{0}。</value>
  </data>
  <data name="LastManualCheck" xml:space="preserve">
    <value>上一手動列印支票日期</value>
    <comment>Select - Field</comment>
  </data>
  <data name="LastPaymentRegister" xml:space="preserve">
    <value>上一付款登記簿列印日期</value>
    <comment>Select - Field</comment>
  </data>
  <data name="LastSystemCheck" xml:space="preserve">
    <value>上一系統列印支票日期</value>
    <comment>Select - Field</comment>
  </data>
  <data name="NoOustandingBatches" xml:space="preserve">
    <value>沒有未過帳付款批次</value>
    <comment>Status</comment>
  </data>
  <data name="OptionalFieldDesc" xml:space="preserve">
    <value>自選欄位描述</value>
    <comment>Optional Fields - Table Column</comment>
  </data>
  <data name="OustandingBatches" xml:space="preserve">
    <value>有未過帳付款批次</value>
    <comment>Status</comment>
  </data>
  <data name="PaymentRegister" xml:space="preserve">
    <value>付款登記簿</value>
    <comment>Select - Group</comment>
  </data>
  <data name="ProratebyAmount" xml:space="preserve">
    <value>按金額攤配</value>
    <comment>Select - List Option</comment>
  </data>
  <data name="RateTypeDesc" xml:space="preserve">
    <value>匯率類型描述</value>
    <comment>Rates - Field</comment>
  </data>
  <data name="Register" xml:space="preserve">
    <value>註冊</value>
    <comment>Button</comment>
  </data>
  <data name="SelectionCode" xml:space="preserve">
    <value>選擇代碼</value>
    <comment>Field</comment>
  </data>
  <data name="SelectionCodeDesc" xml:space="preserve">
    <value>選擇代碼描述</value>
    <comment>Field</comment>
  </data>
  <data name="SelectionCodeHelp" xml:space="preserve">
    <value>付款選擇代碼為選擇未結清發票和產生支付它們的交易定義標準。</value>
    <comment>Hover Help</comment>
  </data>
  <data name="SelectionCriteria" xml:space="preserve">
    <value>選擇標準</value>
  </data>
  <data name="TopDown" xml:space="preserve">
    <value>自上而下</value>
    <comment>Select - List Option</comment>
  </data>
  <data name="Value" xml:space="preserve">
    <value>值</value>
    <comment>Optional Fields - Table Column</comment>
  </data>
  <data name="ValueDesc" xml:space="preserve">
    <value>值描述</value>
    <comment>Optional Fields - Table Column</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>值已設</value>
    <comment>Optional Fields - Table Column</comment>
  </data>
  <data name="VendorNo1" xml:space="preserve">
    <value>供應商編號</value>
    <comment>Exclusion - Table Column</comment>
  </data>
</root>