<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddEdit" xml:space="preserve">
    <value>增加/編輯</value>
    <comment>Link</comment>
  </data>
  <data name="AmountsIn" xml:space="preserve">
    <value>顯示金額以</value>
    <comment>Activity - List</comment>
  </data>
  <data name="Applied" xml:space="preserve">
    <value>已核銷</value>
    <comment>Transactions - Table Column</comment>
  </data>
  <data name="DiscAmtAvailable" xml:space="preserve">
    <value>可獲取折扣金額</value>
    <comment>Transactions - Table Column</comment>
  </data>
  <data name="DistCode" xml:space="preserve">
    <value>分佈代碼</value>
    <comment>Modal - Table Column</comment>
  </data>
  <data name="DocumentDescription" xml:space="preserve">
    <value>憑證描述</value>
    <comment>Transactions - Table Column</comment>
  </data>
  <data name="DocumentInfo" xml:space="preserve">
    <value>憑證資訊</value>
    <comment>Modal - Title</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>應付帳款供應商活動</value>
    <comment>Screen Title</comment>
  </data>
  <data name="IncludeFullyPaid" xml:space="preserve">
    <value>包括完全付清交易</value>
    <comment>Transactions - Check Box</comment>
  </data>
  <data name="IncludeOnHold" xml:space="preserve">
    <value>包括擱置的交易</value>
    <comment>Aging - Check Box</comment>
  </data>
  <data name="IncludePendingAmount" xml:space="preserve">
    <value>包括待處理金額</value>
    <comment>Transactions - Check Box</comment>
  </data>
  <data name="JobRelated" xml:space="preserve">
    <value>作業相關</value>
    <comment>Transactions - Table Column</comment>
  </data>
  <data name="LastInvoiceAmount" xml:space="preserve">
    <value>上一發票金額</value>
    <comment>Activity - Field</comment>
  </data>
  <data name="LastInvoiceDate" xml:space="preserve">
    <value>上一發票日期</value>
    <comment>Activity - Field</comment>
  </data>
  <data name="LastPaymentAmount" xml:space="preserve">
    <value>上一付款金額</value>
    <comment>Activity - Field</comment>
  </data>
  <data name="StartingValue" xml:space="preserve">
    <value>起始值</value>
    <comment>Transactions - Field</comment>
  </data>
  <data name="Tab2" xml:space="preserve">
    <value>帳析</value>
    <comment>Tab</comment>
  </data>
  <data name="TermsCodeDesc" xml:space="preserve">
    <value>條款代碼描述</value>
    <comment>Modal - Field</comment>
  </data>
  <data name="VendorDescription" xml:space="preserve">
    <value>供應商描述</value>
    <comment>Label for Vendor Description</comment>
  </data>
  <data name="FunctionalPaymentAmount" xml:space="preserve">
    <value>功能幣別付款金額</value>
  </data>
  <data name="ReferenceDocumentNo" xml:space="preserve">
    <value>參考憑證編號</value>
  </data>
  <data name="VendorPaymentAmount" xml:space="preserve">
    <value>供應商幣別付款金額</value>
  </data>
  <data name="NoSelectionOfVendor" xml:space="preserve">
    <value>選擇一個供應商。</value>
  </data>
  <data name="NoOptionalFieldsMessage" xml:space="preserve">
    <value>所選記錄沒有分派的自選欄位。</value>
  </data>
  <data name="NoTransactionSelected" xml:space="preserve">
    <value>選擇一個交易。</value>
  </data>
  <data name="FunctionalPendingAdjustmentAmount" xml:space="preserve">
    <value>功能幣別待處理調整金額</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="FunctionalPendingBalance" xml:space="preserve">
    <value>功能幣別待處理餘額</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="FunctionalPendingDiscountAmount" xml:space="preserve">
    <value>功能幣別待處理折扣金額</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="FunctionalPendingPaymentAmount" xml:space="preserve">
    <value>功能幣別待處理付款金額</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="PaymentAmountApplied" xml:space="preserve">
    <value>已核銷付款金額</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="ShowPendingAmountsSwitch" xml:space="preserve">
    <value>顯示待處理金額開關</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="VendorNoUsedtoCalculatePen" xml:space="preserve">
    <value>用來計算罰款的供應商編號</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="Obsolete" xml:space="preserve">
    <value>過時的</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="DocumentDetails" xml:space="preserve">
    <value>憑證明細</value>
    <comment>As Document details header</comment>
  </data>
  <data name="NoDocumentDetails" xml:space="preserve">
    <value>明細對付款和預付款憑證不可用。</value>
    <comment>for Validation message</comment>
  </data>
</root>