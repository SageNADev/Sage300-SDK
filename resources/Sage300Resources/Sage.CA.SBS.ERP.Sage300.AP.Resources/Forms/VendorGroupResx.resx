<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountSet" xml:space="preserve">
    <value>Account Set</value>
    <comment>used in finder</comment>
  </data>
  <data name="BankCode" xml:space="preserve">
    <value>Bank Code</value>
    <comment>used in finder</comment>
  </data>
  <data name="CPRS" xml:space="preserve">
    <value>1099/CPRS Code</value>
    <comment>used in finder</comment>
  </data>
  <data name="CurrencyCode" xml:space="preserve">
    <value>Currency Code</value>
    <comment>used in finder</comment>
  </data>
  <data name="DateLastMaintained" xml:space="preserve">
    <value>Date Last Maintained</value>
    <comment>used in finder</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Group Description</value>
    <comment>used in finder</comment>
  </data>
  <data name="DistributionCode" xml:space="preserve">
    <value>Distribution Code</value>
    <comment>used in finder</comment>
  </data>
  <data name="DistributionSet" xml:space="preserve">
    <value>Distribution Set</value>
  </data>
  <data name="DistributionSetDescription" xml:space="preserve">
    <value>Distribution Set Description</value>
    <comment>used in finder</comment>
  </data>
  <data name="DistributionType" xml:space="preserve">
    <value>Distribution Type</value>
    <comment>used in finder</comment>
  </data>
  <data name="DuplicateAmountCode" xml:space="preserve">
    <value>Duplicate Amount Code </value>
    <comment>used in finder</comment>
  </data>
  <data name="DuplicateDateCode" xml:space="preserve">
    <value>Duplicate Date Code</value>
    <comment>used in finder</comment>
  </data>
  <data name="DUPLINVC" xml:space="preserve">
    <value>Duplicate Invoice Checking</value>
    <comment>used in finder</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>A/P Vendor Groups</value>
  </data>
  <data name="GeneralLedgerAccountNo" xml:space="preserve">
    <value>General Ledger Account Number</value>
    <comment>used in finder</comment>
  </data>
  <data name="GOrLAccount" xml:space="preserve">
    <value>G/L Account</value>
    <comment>used in finder</comment>
  </data>
  <data name="GroupCode" xml:space="preserve">
    <value>Group Code</value>
    <comment>used in finder</comment>
  </data>
  <data name="InactiveDate" xml:space="preserve">
    <value>Inactive Date</value>
    <comment>used in finder</comment>
  </data>
  <data name="InsertOptionalFields" xml:space="preserve">
    <value>Insert Optional Fields</value>
    <comment>used in finder</comment>
  </data>
  <data name="IsActive" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="Num1099" xml:space="preserve">
    <value>1099</value>
    <comment>used in finder</comment>
  </data>
  <data name="Num1099OrCPRSCode" xml:space="preserve">
    <value>1099/CPRS Code</value>
    <comment>used in finder</comment>
  </data>
  <data name="OptionalFields" xml:space="preserve">
    <value>Optional Fields</value>
    <comment>used in finder</comment>
  </data>
  <data name="PaymentCode" xml:space="preserve">
    <value>Payment Code</value>
    <comment>used in finder</comment>
  </data>
  <data name="PrintSeparateChecks" xml:space="preserve">
    <value>Print Separate Checks</value>
    <comment>used in finder</comment>
  </data>
  <data name="ProcessCommandCode" xml:space="preserve">
    <value>Process Command Code</value>
    <comment>used in finder</comment>
  </data>
  <data name="RateType" xml:space="preserve">
    <value>Rate Type</value>
    <comment>used in finder</comment>
  </data>
  <data name="StatusDescription" xml:space="preserve">
    <value>Status Description</value>
    <comment>used in finder</comment>
  </data>
  <data name="SUBJWTHHSW" xml:space="preserve">
    <value>SUBJWTHHSW</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxClass1" xml:space="preserve">
    <value>Tax Class 1</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxClass2" xml:space="preserve">
    <value>Tax Class 2</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxClass3" xml:space="preserve">
    <value>Tax Class 3</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxClass4" xml:space="preserve">
    <value>Tax Class 4</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxClass5" xml:space="preserve">
    <value>Tax Class 5</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxClassIncludedMessage" xml:space="preserve">
    <value>Tax Authority {0} does not allow included taxes.</value>
  </data>
  <data name="TaxClassWarning" xml:space="preserve">
    <value>Cannot find Tax Class {0}.</value>
  </data>
  <data name="TaxGroup" xml:space="preserve">
    <value>Tax Group</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxGroupDesc" xml:space="preserve">
    <value>Tax Group Description</value>
    <comment>used as a header in invoicing tab</comment>
  </data>
  <data name="TaxIncluded1" xml:space="preserve">
    <value>Tax Included 1</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxIncluded2" xml:space="preserve">
    <value>Tax Included 2</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxIncluded3" xml:space="preserve">
    <value>Tax Included 3</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxIncluded4" xml:space="preserve">
    <value>Tax Included 4</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxIncluded5" xml:space="preserve">
    <value>Tax Included 5</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxReportingType" xml:space="preserve">
    <value>Tax Reporting Type</value>
    <comment>used in finder</comment>
  </data>
  <data name="TaxWarning" xml:space="preserve">
    <value>Tax group {0} has a tax reporting currency of {1} which differs from the account set currency {2}.</value>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>Terms</value>
    <comment>used in finder</comment>
  </data>
  <data name="ValueSet" xml:space="preserve">
    <value>Value Set</value>
  </data>
  <data name="VendorAndAmount" xml:space="preserve">
    <value>Vendor and Amount</value>
    <comment>used as a header in invoicing tab</comment>
  </data>
  <data name="VendorAndDate" xml:space="preserve">
    <value>Vendor and Date</value>
    <comment>used as a header in invoicing tab</comment>
  </data>
  <data name="VendorGroupStatistics" xml:space="preserve">
    <value>Vendor Group Statistics</value>
  </data>
  <data name="_1099CPRSCodeDesc" xml:space="preserve">
    <value>1099/CPRS Code Description</value>
    <comment>used as a header in invoicing tab</comment>
  </data>
  <data name="GenerateSeperatePayments" xml:space="preserve">
    <value>Generate Separate Payments for Each Invoice</value>
  </data>
  <data name="InvalidPeriod" xml:space="preserve">
    <value>Period {0} is invalid.</value>
  </data>
  <data name="UnSavedStatisticsMessage" xml:space="preserve">
    <value>There are unsaved changes in {0}. Do you want to continue?</value>
  </data>
  <data name="AmountValue" xml:space="preserve">
    <value>Amount Value</value>
  </data>
  <data name="DateValue" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="IntegerValue" xml:space="preserve">
    <value>Integer Value</value>
  </data>
  <data name="NumberValue" xml:space="preserve">
    <value>Number Value</value>
  </data>
  <data name="TextValue" xml:space="preserve">
    <value>Text Value</value>
  </data>
  <data name="TimeValue" xml:space="preserve">
    <value>Time Value</value>
  </data>
  <data name="TypedValueFieldIndex" xml:space="preserve">
    <value>Typed Value Field Index</value>
  </data>
  <data name="YesOrNoValue" xml:space="preserve">
    <value>Yes or No Value</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="DistributionCodeDescription" xml:space="preserve">
    <value>Distribution Code Description</value>
  </data>
  <data name="GLAccountDescription" xml:space="preserve">
    <value>G/L Account Description</value>
  </data>
  <data name="GroupInformation" xml:space="preserve">
    <value>Group Information</value>
  </data>
  <data name="DuplicateInvoiceChecking" xml:space="preserve">
    <value>Duplicate Invoice Checking</value>
  </data>
  <data name="AP0016" xml:space="preserve">
    <value>Vendor Groups</value>
  </data>
  <data name="AP0017" xml:space="preserve">
    <value>Vendor Group Statistics</value>
  </data>
  <data name="AP0408" xml:space="preserve">
    <value>Vendor Group Optional Field Value</value>
  </data>
</root>