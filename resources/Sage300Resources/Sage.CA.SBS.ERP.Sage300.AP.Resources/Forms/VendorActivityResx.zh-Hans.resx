<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddEdit" xml:space="preserve">
    <value>添加/编辑</value>
    <comment>Link</comment>
  </data>
  <data name="AmountsIn" xml:space="preserve">
    <value>显示金额以</value>
    <comment>Activity - List</comment>
  </data>
  <data name="Applied" xml:space="preserve">
    <value>已核销</value>
    <comment>Transactions - Table Column</comment>
  </data>
  <data name="DiscAmtAvailable" xml:space="preserve">
    <value>可获取折扣金额</value>
    <comment>Transactions - Table Column</comment>
  </data>
  <data name="DistCode" xml:space="preserve">
    <value>分布代码</value>
    <comment>Modal - Table Column</comment>
  </data>
  <data name="DocumentDescription" xml:space="preserve">
    <value>凭证描述</value>
    <comment>Transactions - Table Column</comment>
  </data>
  <data name="DocumentInfo" xml:space="preserve">
    <value>凭证信息</value>
    <comment>Modal - Title</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>应付帐款供应商活动</value>
    <comment>Screen Title</comment>
  </data>
  <data name="IncludeFullyPaid" xml:space="preserve">
    <value>包括完全付清交易</value>
    <comment>Transactions - Check Box</comment>
  </data>
  <data name="IncludeOnHold" xml:space="preserve">
    <value>包括搁置的交易</value>
    <comment>Aging - Check Box</comment>
  </data>
  <data name="IncludePendingAmount" xml:space="preserve">
    <value>包括待处理金额</value>
    <comment>Transactions - Check Box</comment>
  </data>
  <data name="JobRelated" xml:space="preserve">
    <value>作业相关</value>
    <comment>Transactions - Table Column</comment>
  </data>
  <data name="LastInvoiceAmount" xml:space="preserve">
    <value>上一发票金额</value>
    <comment>Activity - Field</comment>
  </data>
  <data name="LastInvoiceDate" xml:space="preserve">
    <value>上一发票日期</value>
    <comment>Activity - Field</comment>
  </data>
  <data name="LastPaymentAmount" xml:space="preserve">
    <value>上一付款金额</value>
    <comment>Activity - Field</comment>
  </data>
  <data name="StartingValue" xml:space="preserve">
    <value>起始值</value>
    <comment>Transactions - Field</comment>
  </data>
  <data name="Tab2" xml:space="preserve">
    <value>帐析</value>
    <comment>Tab</comment>
  </data>
  <data name="TermsCodeDesc" xml:space="preserve">
    <value>条款代码描述</value>
    <comment>Modal - Field</comment>
  </data>
  <data name="VendorDescription" xml:space="preserve">
    <value>供应商描述</value>
    <comment>Label for Vendor Description</comment>
  </data>
  <data name="FunctionalPaymentAmount" xml:space="preserve">
    <value>功能币种付款金额</value>
  </data>
  <data name="ReferenceDocumentNo" xml:space="preserve">
    <value>参考凭证编号</value>
  </data>
  <data name="VendorPaymentAmount" xml:space="preserve">
    <value>供应商币种付款金额</value>
  </data>
  <data name="NoSelectionOfVendor" xml:space="preserve">
    <value>选择一个供应商。</value>
  </data>
  <data name="NoOptionalFieldsMessage" xml:space="preserve">
    <value>所选记录没有分派的可选字段。</value>
  </data>
  <data name="NoTransactionSelected" xml:space="preserve">
    <value>选择一个交易。</value>
  </data>
  <data name="FunctionalPendingAdjustmentAmount" xml:space="preserve">
    <value>功能币种待处理调整金额</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="FunctionalPendingBalance" xml:space="preserve">
    <value>功能币种待处理余额</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="FunctionalPendingDiscountAmount" xml:space="preserve">
    <value>功能币种待处理折扣金额</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="FunctionalPendingPaymentAmount" xml:space="preserve">
    <value>功能币种待处理付款金额</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="PaymentAmountApplied" xml:space="preserve">
    <value>已核销付款金额</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="ShowPendingAmountsSwitch" xml:space="preserve">
    <value>显示待处理金额开关</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="VendorNoUsedtoCalculatePen" xml:space="preserve">
    <value>用来计算罚款的供应商编号</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="Obsolete" xml:space="preserve">
    <value>过时的</value>
    <comment>for Document Finder</comment>
  </data>
  <data name="DocumentDetails" xml:space="preserve">
    <value>凭证明细</value>
    <comment>As Document details header</comment>
  </data>
  <data name="NoDocumentDetails" xml:space="preserve">
    <value>明细对付款和预付款凭证不可用。</value>
    <comment>for Validation message</comment>
  </data>
</root>