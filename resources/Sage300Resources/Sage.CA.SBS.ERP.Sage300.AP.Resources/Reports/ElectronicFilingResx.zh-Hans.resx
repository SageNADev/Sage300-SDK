<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddrStreet" xml:space="preserve">
    <value>街道</value>
    <comment>Group - Field</comment>
  </data>
  <data name="Company" xml:space="preserve">
    <value>公司</value>
    <comment>Group - Field</comment>
  </data>
  <data name="ControlCodeTCC" xml:space="preserve">
    <value>控制代码 (TCC)</value>
    <comment>Group - Field</comment>
  </data>
  <data name="CounterOverflow" xml:space="preserve">
    <value>输出文件不能包括超过99,999,999条记录。</value>
    <comment>Message</comment>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>电邮</value>
    <comment>Group - Field</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>应付帐款1099电子申报</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FedTaxWithHd" xml:space="preserve">
    <value>联邦所得税扣缴相对于收入金额似乎过多。</value>
    <comment>Message</comment>
  </data>
  <data name="FinalFiling" xml:space="preserve">
    <value>最终填报</value>
    <comment>Group - Check Box</comment>
  </data>
  <data name="ForeignAddrSize" xml:space="preserve">
    <value>总地址长度将超过文件中可用的空间。重新输入市县，省市区，邮编代码，和/或国家。</value>
    <comment>Message</comment>
  </data>
  <data name="ForeignEnt" xml:space="preserve">
    <value>外国实体</value>
    <comment>Group - Check Box</comment>
  </data>
  <data name="FrameXmitInfo" xml:space="preserve">
    <value>传送者信息</value>
    <comment>Group</comment>
  </data>
  <data name="InvState" xml:space="preserve">
    <value>输入由美国邮政总局定义的有效的国家代码。</value>
    <comment>Message</comment>
  </data>
  <data name="InvTaxIDno" xml:space="preserve">
    <value>税务编号必须正好是9位数，并且只能包含数字，破折号，和空格。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvTaxYear" xml:space="preserve">
    <value>付款年度不能迟于当前年度。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvTaxYrTest" xml:space="preserve">
    <value>指定的付款年度仅可用于测试文件。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvTCC" xml:space="preserve">
    <value>发送器控制代码（TCC）必须是IRS/MCC分派的五字符字母数字代码。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvZIPcode" xml:space="preserve">
    <value>邮政编码必须仅包含数字或五个数字后的单一破折号。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="NameControl" xml:space="preserve">
    <value>名称控制</value>
    <comment>Group - Field</comment>
  </data>
  <data name="NameLine1" xml:space="preserve">
    <value>名称行1</value>
    <comment>Group - Field</comment>
  </data>
  <data name="NameLine2" xml:space="preserve">
    <value>名称行2</value>
    <comment>Group - Field</comment>
  </data>
  <data name="OfficeBranch" xml:space="preserve">
    <value>办公室分部</value>
    <comment>Group - Field</comment>
  </data>
  <data name="OutputFile" xml:space="preserve">
    <value>输出文件</value>
    <comment>Field</comment>
  </data>
  <data name="PaymentYear" xml:space="preserve">
    <value>付款年度</value>
    <comment>Field</comment>
  </data>
  <data name="TestFile" xml:space="preserve">
    <value>测试文件</value>
    <comment>Group - Check Box</comment>
  </data>
  <data name="TransferAgent" xml:space="preserve">
    <value>转帐代理</value>
    <comment>Group - Check Box</comment>
  </data>
  <data name="TransmitterTaxNumber" xml:space="preserve">
    <value>传送者税务编号</value>
  </data>
  <data name="Agent" xml:space="preserve">
    <value>代理</value>
  </data>
  <data name="Payer" xml:space="preserve">
    <value>付款者</value>
  </data>
  <data name="Transmitter" xml:space="preserve">
    <value>传送者</value>
  </data>
  <data name="FormatEmptyMessage" xml:space="preserve">
    <value>请去到供应商屏幕作相关的更改。</value>
  </data>
  <data name="InvalidAddressLength" xml:space="preserve">
    <value>外国地址的总长度将超过文件中可用的空间。请重新输入以下一个或多个字段：市县，省市县，邮政编码，国家。</value>
  </data>
  <data name="InvalidMessage" xml:space="preserve">
    <value>{0} &apos;{1}&apos;无效。</value>
  </data>
  <data name="TotalErrorsCount" xml:space="preserve">
    <value>供应商中共发生{0}个错误，但仅前{1}个错误在此列出。请检查其它供应商记录。</value>
  </data>
  <data name="NoRecords" xml:space="preserve">
    <value>没有记录符合您的搜索条件。因此没有生成输出文件。</value>
  </data>
  <data name="StateCode" xml:space="preserve">
    <value>国家代码</value>
  </data>
  <data name="InvalidInputUnknown" xml:space="preserve">
    <value>{0} &apos;{1}&apos;未知。{2}</value>
  </data>
  <data name="MaxLengthError" xml:space="preserve">
    <value>&apos;{0} {1}&apos;不能超过{2}个字符。</value>
  </data>
  <data name="VendorMessage" xml:space="preserve">
    <value>供应商{0}</value>
  </data>
</root>