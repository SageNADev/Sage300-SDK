<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddrStreet" xml:space="preserve">
    <value>Calle</value>
    <comment>Group - Field</comment>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Empresa</value>
    <comment>Group - Field</comment>
  </data>
  <data name="ControlCodeTCC" xml:space="preserve">
    <value>Código de Control (TCC)</value>
    <comment>Group - Field</comment>
  </data>
  <data name="CounterOverflow" xml:space="preserve">
    <value>El archivo de resultados no puede incluir más de 99,999,999 registros.</value>
    <comment>Message</comment>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Correo Electrónico</value>
    <comment>Group - Field</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>C/P – Presentación Electrónica de 1099</value>
    <comment>Screen Title</comment>
  </data>
  <data name="FedTaxWithHd" xml:space="preserve">
    <value>El impuesto federal a la renta retenido parece ser excesivo en relación al volumen de ingresos.</value>
    <comment>Message</comment>
  </data>
  <data name="FinalFiling" xml:space="preserve">
    <value>Presentación Final</value>
    <comment>Group - Check Box</comment>
  </data>
  <data name="ForeignAddrSize" xml:space="preserve">
    <value>El tamaño total de la dirección excederá el espacio disponible en el archivo.  Reingrese la Ciudad, el Estado, el Código ZIP/Postal y/o el País.</value>
    <comment>Message</comment>
  </data>
  <data name="ForeignEnt" xml:space="preserve">
    <value>Entidad Extranjera</value>
    <comment>Group - Check Box</comment>
  </data>
  <data name="FrameXmitInfo" xml:space="preserve">
    <value>Información del Transmisor</value>
    <comment>Group</comment>
  </data>
  <data name="InvState" xml:space="preserve">
    <value>Ingrese un código de estado válido definido por el Servicio Postal de los Estados Unidos (USPS).</value>
    <comment>Message</comment>
  </data>
  <data name="InvTaxIDno" xml:space="preserve">
    <value>El Número de Impuesto debe tener exactamente nueve 9 dígitos y sólo puede incluir dígitos. No se admiten guiones ni espacios.</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvTaxYear" xml:space="preserve">
    <value>El Año de Pago no puede ser posterior al año en curso.</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvTaxYrTest" xml:space="preserve">
    <value>El Año de Pago especificado sólo puede ser usado para archivos de prueba.</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvTCC" xml:space="preserve">
    <value>El Código de Control del Transmisor (TCC) debe ser un código de cinco caracteres alfanuméricos asignado por IRS/MCC.</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvZIPcode" xml:space="preserve">
    <value>Un Código ZIP/Postal debe contener sólo dígitos (con excepción de un guión después de cinco dígitos).</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="NameControl" xml:space="preserve">
    <value>Control Nombre</value>
    <comment>Group - Field</comment>
  </data>
  <data name="NameLine1" xml:space="preserve">
    <value>Línea de Nombre 1</value>
    <comment>Group - Field</comment>
  </data>
  <data name="NameLine2" xml:space="preserve">
    <value>Línea de Nombre 2</value>
    <comment>Group - Field</comment>
  </data>
  <data name="OfficeBranch" xml:space="preserve">
    <value>Oficina Sucursal</value>
    <comment>Group - Field</comment>
  </data>
  <data name="OutputFile" xml:space="preserve">
    <value>Archivo Resultados</value>
    <comment>Field</comment>
  </data>
  <data name="PaymentYear" xml:space="preserve">
    <value>Año de Pago</value>
    <comment>Field</comment>
  </data>
  <data name="TestFile" xml:space="preserve">
    <value>Archivo Prueba</value>
    <comment>Group - Check Box</comment>
  </data>
  <data name="TransferAgent" xml:space="preserve">
    <value>Agente de Transferencia</value>
    <comment>Group - Check Box</comment>
  </data>
  <data name="TransmitterTaxNumber" xml:space="preserve">
    <value>N° Impuesto Federal de Transmisor</value>
  </data>
  <data name="Agent" xml:space="preserve">
    <value>Agente</value>
  </data>
  <data name="Payer" xml:space="preserve">
    <value>Pagador</value>
  </data>
  <data name="Transmitter" xml:space="preserve">
    <value>Transmisor</value>
  </data>
  <data name="FormatEmptyMessage" xml:space="preserve">
    <value>Por favor, vaya al formulario Proveedores para realizar los cambios pertinentes.</value>
  </data>
  <data name="InvalidAddressLength" xml:space="preserve">
    <value>El tamaño total de una dirección extranjera excederá el espacio disponible en el archivo.  Vuelva a ingresar uno o más de los siguientes campos: Ciudad, Estado, Código Postal, País.</value>
  </data>
  <data name="InvalidMessage" xml:space="preserve">
    <value>{0} &apos;{1}&apos; no es válido/a.</value>
  </data>
  <data name="TotalErrorsCount" xml:space="preserve">
    <value>Se encontró un total de {0} errores en Proveedores, pero sólo los primeros {1} se enumeran aquí.  Verifique los otros registros de Proveedores.</value>
  </data>
  <data name="NoRecords" xml:space="preserve">
    <value>No hay registros que cumplan sus criterios, por tanto no se generará archivo de salida.</value>
  </data>
  <data name="StateCode" xml:space="preserve">
    <value>Código de Estado</value>
  </data>
  <data name="InvalidInputUnknown" xml:space="preserve">
    <value>No se conoce {0} &apos;{1}&apos;. {2}</value>
  </data>
  <data name="MaxLengthError" xml:space="preserve">
    <value>&apos;{0} {1}&apos; no puede exceder {2} carácter(es).</value>
  </data>
  <data name="VendorMessage" xml:space="preserve">
    <value>Proveedor {0}</value>
  </data>
</root>