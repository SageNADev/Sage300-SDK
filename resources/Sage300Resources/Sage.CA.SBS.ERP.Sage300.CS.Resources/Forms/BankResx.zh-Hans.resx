<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>科目</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>地址</value>
  </data>
  <data name="AddressLine1" xml:space="preserve">
    <value>地址行1</value>
  </data>
  <data name="AddressLine2" xml:space="preserve">
    <value>地址行2</value>
  </data>
  <data name="AddressLine3" xml:space="preserve">
    <value>地址行3</value>
  </data>
  <data name="AddressLine4" xml:space="preserve">
    <value>地址行4 </value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>余额</value>
  </data>
  <data name="BankAccount" xml:space="preserve">
    <value>银行帐户</value>
  </data>
  <data name="BankAccountNumber" xml:space="preserve">
    <value>银行科目编号</value>
  </data>
  <data name="BankCode" xml:space="preserve">
    <value>银行代码</value>
  </data>
  <data name="BankInactive" xml:space="preserve">
    <value>闲置（至日期）</value>
  </data>
  <data name="bankTitle" xml:space="preserve">
    <value>银行</value>
  </data>
  <data name="CheckStocks" xml:space="preserve">
    <value>支票簿</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>市/县</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>联系人</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>国家</value>
  </data>
  <data name="CreditCardChargesAccount" xml:space="preserve">
    <value>信用卡收费科目</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>币种</value>
  </data>
  <data name="CurrentBalance" xml:space="preserve">
    <value>当前余额</value>
  </data>
  <data name="DaysBeforeEligibleforClearin" xml:space="preserve">
    <value>合格于清算之前天数</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>电邮</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>银行</value>
  </data>
  <data name="ErrorSpread" xml:space="preserve">
    <value>错误/冲销误差范围</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>传真</value>
  </data>
  <data name="LastClosingStatementBalance" xml:space="preserve">
    <value>上一对帐单期末余额</value>
  </data>
  <data name="LastMaintained" xml:space="preserve">
    <value>上一维护日期</value>
  </data>
  <data name="LastReconciliationDate" xml:space="preserve">
    <value>上一调节日期</value>
  </data>
  <data name="LastReconciliationPeriod" xml:space="preserve">
    <value>上一调节年度/期间</value>
  </data>
  <data name="LastStatementDate" xml:space="preserve">
    <value>上一对帐单日期</value>
  </data>
  <data name="Multicurrency" xml:space="preserve">
    <value>多币种</value>
  </data>
  <data name="NextDepositSlipNumber" xml:space="preserve">
    <value>下一存款单编号</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>电话</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>概览</value>
  </data>
  <data name="StateProvince" xml:space="preserve">
    <value>省/市/区</value>
  </data>
  <data name="Taxes" xml:space="preserve">
    <value>税费</value>
  </data>
  <data name="TotalChecks" xml:space="preserve">
    <value>- 提款</value>
  </data>
  <data name="TotalDeposits" xml:space="preserve">
    <value>+ 存款</value>
  </data>
  <data name="TransitNumber" xml:space="preserve">
    <value>分行编号</value>
  </data>
  <data name="WebSite" xml:space="preserve">
    <value>网站</value>
  </data>
  <data name="WriteOffAccount" xml:space="preserve">
    <value>冲销科目</value>
  </data>
  <data name="ZIPPostal" xml:space="preserve">
    <value>邮政编码</value>
  </data>
  <data name="AdviceForm" xml:space="preserve">
    <value>通知表格</value>
  </data>
  <data name="AdviceLinesPerPage" xml:space="preserve">
    <value>通知每页行数</value>
  </data>
  <data name="CheckForm" xml:space="preserve">
    <value>支票表格</value>
  </data>
  <data name="CheckRateType" xml:space="preserve">
    <value>支票汇率类型</value>
  </data>
  <data name="CheckStockCode" xml:space="preserve">
    <value>支票簿代码</value>
  </data>
  <data name="CurrencyCode" xml:space="preserve">
    <value>币种代码</value>
  </data>
  <data name="DepositRateType" xml:space="preserve">
    <value>存款汇率类型</value>
  </data>
  <data name="ExchangeGainAccount" xml:space="preserve">
    <value>汇兑收益科目</value>
  </data>
  <data name="ExchangeLossAccount" xml:space="preserve">
    <value>汇兑损失科目</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="NextCheckNumber" xml:space="preserve">
    <value>下一支票编号</value>
  </data>
  <data name="RoundingAccount" xml:space="preserve">
    <value>舍入科目</value>
  </data>
  <data name="StockType" xml:space="preserve">
    <value>支票簿类型</value>
  </data>
  <data name="TaxAuthority" xml:space="preserve">
    <value>税务机构</value>
  </data>
  <data name="TaxAuthorityDescription" xml:space="preserve">
    <value>税务机构描述</value>
  </data>
  <data name="TaxClassDescription" xml:space="preserve">
    <value>税级描述</value>
  </data>
  <data name="TaxGroup" xml:space="preserve">
    <value>税组</value>
  </data>
  <data name="StatementCurrency" xml:space="preserve">
    <value>对帐单币种</value>
  </data>
  <data name="TaxGroupCode" xml:space="preserve">
    <value>税组代码</value>
  </data>
  <data name="RateType" xml:space="preserve">
    <value>汇率类型</value>
  </data>
  <data name="BK0001" xml:space="preserve">
    <value>银行</value>
  </data>
  <data name="BK0002" xml:space="preserve">
    <value>银行币种</value>
  </data>
  <data name="BK0008" xml:space="preserve">
    <value>支票簿</value>
  </data>
  <data name="PleaseSelect" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="AccountDescription" xml:space="preserve">
    <value>科目描述</value>
  </data>
  <data name="StatementDescription" xml:space="preserve">
    <value>币种描述</value>
  </data>
  <data name="TaxGroupDescription" xml:space="preserve">
    <value>税组描述</value>
  </data>
  <data name="DeleteConfirmMessage" xml:space="preserve">
    <value>删除银行&quot;{0}&quot;将导致使用它的应用程序出错。是否确要删除它？</value>
  </data>
</root>