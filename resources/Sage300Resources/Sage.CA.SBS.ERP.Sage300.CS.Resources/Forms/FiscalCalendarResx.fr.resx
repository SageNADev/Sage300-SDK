<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active" xml:space="preserve">
    <value>Actif</value>
  </data>
  <data name="CS0002" xml:space="preserve">
    <value>Calendriers fiscaux</value>
    <comment>Used in Export Import</comment>
  </data>
  <data name="CS0060" xml:space="preserve">
    <value>États périodes</value>
    <comment>Used in Export Import</comment>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>Date fin</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Calendrier fiscal</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="FiscalCalendar" xml:space="preserve">
    <value>Calendrier fiscal</value>
  </data>
  <data name="LckAdjPeriod" xml:space="preserve">
    <value>Verrouiller période ajustement</value>
  </data>
  <data name="LckClPeriod" xml:space="preserve">
    <value>Verrouiller période clôture</value>
  </data>
  <data name="LockAdjustmentPeriod" xml:space="preserve">
    <value>Verrouiller période ajustement</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="LockAll" xml:space="preserve">
    <value>Verrouiller tout</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="LockCol" xml:space="preserve">
    <value>Verrouiller colonne</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>Verrouillé</value>
  </data>
  <data name="LockRow" xml:space="preserve">
    <value>Verrouiller ligne</value>
  </data>
  <data name="PERIOD_STATUS" xml:space="preserve">
    <value>État période</value>
  </data>
  <data name="PGM_STATUS" xml:space="preserve">
    <value>État application</value>
  </data>
  <data name="Quarterwith4Periods" xml:space="preserve">
    <value>Trimestre de 4 périodes</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Date début</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="FiscalYear" xml:space="preserve">
    <value>Exercice</value>
  </data>
  <data name="Unlocked" xml:space="preserve">
    <value>Déverrouillé</value>
  </data>
  <data name="FiscalPeriod1StartDate" xml:space="preserve">
    <value>Date début de période 1</value>
  </data>
  <data name="FiscalPeriod2StartDate" xml:space="preserve">
    <value>Date début de période 2</value>
  </data>
  <data name="FiscalPeriod10EndDate" xml:space="preserve">
    <value>Date fin de période 10</value>
  </data>
  <data name="FiscalPeriod10StartDate" xml:space="preserve">
    <value>Date début de période 10</value>
  </data>
  <data name="FiscalPeriod11EndDate" xml:space="preserve">
    <value>Date fin de période 11</value>
  </data>
  <data name="FiscalPeriod11StartDate" xml:space="preserve">
    <value>Date début de période 11</value>
  </data>
  <data name="FiscalPeriod12EndDate" xml:space="preserve">
    <value>Date fin de période 12</value>
  </data>
  <data name="FiscalPeriod12StartDate" xml:space="preserve">
    <value>Date début de période 12</value>
  </data>
  <data name="FiscalPeriod13EndDate" xml:space="preserve">
    <value>Date fin de période 13</value>
  </data>
  <data name="FiscalPeriod13StartDate" xml:space="preserve">
    <value>Date début de période 13</value>
  </data>
  <data name="FiscalPeriod1EndDate" xml:space="preserve">
    <value>Date fin de période 1</value>
  </data>
  <data name="FiscalPeriod2EndDate" xml:space="preserve">
    <value>Date fin de période 2</value>
  </data>
  <data name="FiscalPeriod3EndDate" xml:space="preserve">
    <value>Date fin de période 3</value>
  </data>
  <data name="FiscalPeriod3StartDate" xml:space="preserve">
    <value>Date début de période 3</value>
  </data>
  <data name="FiscalPeriod4EndDate" xml:space="preserve">
    <value>Date fin de période 4</value>
  </data>
  <data name="FiscalPeriod4StartDate" xml:space="preserve">
    <value>Date début de période 4</value>
  </data>
  <data name="FiscalPeriod5EndDate" xml:space="preserve">
    <value>Date fin de période 5</value>
  </data>
  <data name="FiscalPeriod5StartDate" xml:space="preserve">
    <value>Date début de période 5</value>
  </data>
  <data name="FiscalPeriod6EndDate" xml:space="preserve">
    <value>Date fin de période 6</value>
  </data>
  <data name="FiscalPeriod6StartDate" xml:space="preserve">
    <value>Date début de période 6</value>
  </data>
  <data name="FiscalPeriod7EndDate" xml:space="preserve">
    <value>Date fin de période 7</value>
  </data>
  <data name="FiscalPeriod7StartDate" xml:space="preserve">
    <value>Date début de période 7</value>
  </data>
  <data name="FiscalPeriod8EndDate" xml:space="preserve">
    <value>Date fin de période 8</value>
  </data>
  <data name="FiscalPeriod8StartDate" xml:space="preserve">
    <value>Date début de période 8</value>
  </data>
  <data name="FiscalPeriod9EndDate" xml:space="preserve">
    <value>Date fin de période 9</value>
  </data>
  <data name="FiscalPeriod9StartDate" xml:space="preserve">
    <value>Date début de période 9</value>
  </data>
  <data name="AdjustmentPeriodStatus" xml:space="preserve">
    <value>État période ajustement</value>
  </data>
  <data name="Application" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="ClosingPeriodStatus" xml:space="preserve">
    <value>État période clôture</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>Commande</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Ouvert</value>
  </data>
  <data name="Period10Status" xml:space="preserve">
    <value>État période 10</value>
  </data>
  <data name="Period11Status" xml:space="preserve">
    <value>État période 11</value>
  </data>
  <data name="Period12Status" xml:space="preserve">
    <value>État période 12</value>
  </data>
  <data name="Period13Status" xml:space="preserve">
    <value>État période 13</value>
  </data>
  <data name="Period1Status" xml:space="preserve">
    <value>État période 1</value>
  </data>
  <data name="Period2Status" xml:space="preserve">
    <value>État période 2</value>
  </data>
  <data name="Period3Status" xml:space="preserve">
    <value>État période 3</value>
  </data>
  <data name="Period4Status" xml:space="preserve">
    <value>État période 4</value>
  </data>
  <data name="Period5Status" xml:space="preserve">
    <value>État période 5</value>
  </data>
  <data name="Period6Status" xml:space="preserve">
    <value>État période 6</value>
  </data>
  <data name="Period7Status" xml:space="preserve">
    <value>État période 7</value>
  </data>
  <data name="Period8Status" xml:space="preserve">
    <value>État période 8</value>
  </data>
  <data name="Period9Status" xml:space="preserve">
    <value>État période 9</value>
  </data>
  <data name="FiscalCalendarImportTableMissingError" xml:space="preserve">
    <value>La table Calendrier fiscal spécifiée est introuvable.</value>
  </data>
  <data name="FiscalStatusImportTableMissingError" xml:space="preserve">
    <value>La table États périodes spécifiée est introuvable.</value>
  </data>
  <data name="GetApplication" xml:space="preserve">
    <value>Obtenir application</value>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>Inactif</value>
  </data>
  <data name="Nocommand" xml:space="preserve">
    <value>Aucune commande</value>
  </data>
  <data name="SetDirty" xml:space="preserve">
    <value>Définir comme non intègre</value>
  </data>
  <data name="NumFiscalPeriods" xml:space="preserve">
    <value>Nombre de périodes</value>
  </data>
  <data name="Period" xml:space="preserve">
    <value>Période {0}</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Quarter4Periods" xml:space="preserve">
    <value>Trimestre de 4 périodes</value>
  </data>
  <data name="StatusLocked" xml:space="preserve">
    <value>Verrouillé</value>
  </data>
  <data name="InvalidYearMessage" xml:space="preserve">
    <value>Saisissez un exercice ultérieur à 1900.</value>
  </data>
  <data name="UnlockAll" xml:space="preserve">
    <value>Déverrouiller tout</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="UnlockCol" xml:space="preserve">
    <value>Déverrouiller colonne</value>
  </data>
  <data name="UnlockRow" xml:space="preserve">
    <value>Déverrouiller ligne</value>
  </data>
</root>