<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CdlgFilter" xml:space="preserve">
    <value>OFX Statements (*.aso;*.ofx;*.dbo;*.afx;*.qfx)|*.aso;*.ofx|Text Files (*.txt)|*.txt|All Files (*.*)|*.*</value>
    <comment>Message</comment>
  </data>
  <data name="EmptyFiscCal" xml:space="preserve">
    <value>The fiscal calendar is empty.</value>
    <comment>Message</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Import OFX Statements</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ErrintBKStmt" xml:space="preserve">
    <value>A problem occurred and at least one {0} currency statement for account {1} (with transit number {2}) on {3} failed to be reconciled to bank {4}.</value>
    <comment>Message</comment>
  </data>
  <data name="ErrintCCStmt" xml:space="preserve">
    <value>A problem occurred and at least one {0} currency statement for account {1} on {2} failed to be reconciled to bank {3}.</value>
    <comment>Message</comment>
  </data>
  <data name="FromBankCode" xml:space="preserve">
    <value>From Bank Code</value>
    <comment>Field</comment>
  </data>
  <data name="ImportedTrx" xml:space="preserve">
    <value>{0} statement(s) and {1} new transaction(s) imported, saved, and ready for matching.</value>
    <comment>Message</comment>
  </data>
  <data name="InvRecYP" xml:space="preserve">
    <value>Reconciliations for bank {0} were skipped. To reconcile this bank, you must specify a reconciliation year/period that is {1}-{2} or later.</value>
    <comment>Message</comment>
  </data>
  <data name="MatchBKCurrMatchingStmtInfo" xml:space="preserve">
    <value>Statement(s) in currency {0} for account {1} (transit number {2}) on {3} were imported successfully for bank {4}.</value>
  </data>
  <data name="MatchBKCurrNotMatchingStmtInfo" xml:space="preserve">
    <value>Warning: Statement(s) in currency {0} for account {1} (transit number {2}) on {3} were imported but are not in the currency range of bank {4}. Review and verify the imported transactions.</value>
  </data>
  <data name="MatchBKStmtInfo" xml:space="preserve">
    <value>The {0} currency statement(s) for account {1} (with transit number {2}) on {3} matched bank {4}.</value>
    <comment>Message</comment>
  </data>
  <data name="MatchCCCurrMatchingStmtInfo" xml:space="preserve">
    <value>Statement(s) in currency {0} for account {1} on {2} were imported successfully for bank {3}.</value>
  </data>
  <data name="MatchCCCurrNotMatchingStmtInfo" xml:space="preserve">
    <value>Warning: Statement(s) in currency {0} for account {1} on {2} were imported but are not in the currency range of bank {3}. Review and verify the imported transactions.</value>
  </data>
  <data name="MatchCCStmtInfo" xml:space="preserve">
    <value>The {0} currency statement(s) for account {1} on {2} matched bank {3}.</value>
    <comment>Message</comment>
  </data>
  <data name="MatchTrxAmt" xml:space="preserve">
    <value>{0} transaction(s) matched, based only on the amount. Please verify the reconciliation.</value>
    <comment>Message</comment>
  </data>
  <data name="NoActUnlckYP" xml:space="preserve">
    <value>A problem occurred while trying to detect the first active and unlocked fiscal period for the company.</value>
    <comment>Message</comment>
  </data>
  <data name="OFXFile" xml:space="preserve">
    <value>Downloaded Bank Statement File</value>
    <comment>Field</comment>
  </data>
  <data name="OFXNoRateComment" xml:space="preserve">
    <value>No {0} rate from {1} to {2} on {3}.</value>
    <comment>Message</comment>
  </data>
  <data name="PContents" xml:space="preserve">
    <value>Select a valid OFX file.</value>
    <comment>Message</comment>
  </data>
  <data name="PVersion" xml:space="preserve">
    <value>The selected file was created using an unsupported version of OFX.</value>
    <comment>Message</comment>
  </data>
  <data name="StmtCurrency" xml:space="preserve">
    <value>The {0} currency statement(s) is not in the currency range of bank {1} . Continue importing anyway?</value>
    <comment>Message</comment>
  </data>
  <data name="StmtProcessInfo" xml:space="preserve">
    <value>{0} statement(s) processed, {1} reconciled.</value>
    <comment>Message</comment>
  </data>
  <data name="ToBankCode" xml:space="preserve">
    <value>To Bank Code</value>
    <comment>Field</comment>
  </data>
  <data name="TrxProcessInfo" xml:space="preserve">
    <value>{0} transactions processed in reconciled statements, {1} cleared. (Processed transactions that were not cleared are added as entries the first time they are processed.)</value>
    <comment>Message</comment>
  </data>
  <data name="UnmatchBKStmtInfo" xml:space="preserve">
    <value>The {0} currency statement(s) for account {1} (with transit number {2}) on {3} did not match any bank records in the specified range.</value>
    <comment>Message</comment>
  </data>
  <data name="UnmatchCCStmtInfo" xml:space="preserve">
    <value>The {0} currency statement(s) for account {1} on {2} did not match any bank records in the specified range.</value>
    <comment>Message</comment>
  </data>
</root>