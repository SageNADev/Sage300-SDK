<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Compte</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Adresse</value>
  </data>
  <data name="AddressLine1" xml:space="preserve">
    <value>Adresse ligne 1</value>
  </data>
  <data name="AddressLine2" xml:space="preserve">
    <value>Adresse ligne 2</value>
  </data>
  <data name="AddressLine3" xml:space="preserve">
    <value>Adresse ligne 3</value>
  </data>
  <data name="AddressLine4" xml:space="preserve">
    <value>Adresse ligne 4 </value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Solde</value>
  </data>
  <data name="BankAccount" xml:space="preserve">
    <value>Compte bancaire</value>
  </data>
  <data name="BankAccountNumber" xml:space="preserve">
    <value>Numéro compte bancaire</value>
  </data>
  <data name="BankCode" xml:space="preserve">
    <value>Code banque</value>
  </data>
  <data name="BankInactive" xml:space="preserve">
    <value>Inactif (au)</value>
  </data>
  <data name="bankTitle" xml:space="preserve">
    <value>Banque</value>
  </data>
  <data name="CheckStocks" xml:space="preserve">
    <value>Formules chèque</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Ville</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Pays</value>
  </data>
  <data name="CreditCardChargesAccount" xml:space="preserve">
    <value>Compte frais carte de crédit</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Devise</value>
  </data>
  <data name="CurrentBalance" xml:space="preserve">
    <value>Solde courant</value>
  </data>
  <data name="DaysBeforeEligibleforClearin" xml:space="preserve">
    <value>Jours admissibles pour supprimer</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Courriel</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Banques</value>
  </data>
  <data name="ErrorSpread" xml:space="preserve">
    <value>Écart erreur/annulation</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="LastClosingStatementBalance" xml:space="preserve">
    <value>Solde clôture du dernier relevé</value>
  </data>
  <data name="LastMaintained" xml:space="preserve">
    <value>Dernière modification</value>
  </data>
  <data name="LastReconciliationDate" xml:space="preserve">
    <value>Date dernier rapprochement</value>
  </data>
  <data name="LastReconciliationPeriod" xml:space="preserve">
    <value>Exercice/période du dernier rapprochement</value>
  </data>
  <data name="LastStatementDate" xml:space="preserve">
    <value>Date dernier relevé</value>
  </data>
  <data name="Multicurrency" xml:space="preserve">
    <value>Multidevise</value>
  </data>
  <data name="NextDepositSlipNumber" xml:space="preserve">
    <value>Numéro bordereau de dépôt suivant</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Téléphone</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profil</value>
  </data>
  <data name="StateProvince" xml:space="preserve">
    <value>État/Province</value>
  </data>
  <data name="Taxes" xml:space="preserve">
    <value>Taxes</value>
  </data>
  <data name="TotalChecks" xml:space="preserve">
    <value>- Retraits</value>
  </data>
  <data name="TotalDeposits" xml:space="preserve">
    <value>+ Dépôts</value>
  </data>
  <data name="TransitNumber" xml:space="preserve">
    <value>Numéro d’agence</value>
  </data>
  <data name="WebSite" xml:space="preserve">
    <value>Site web</value>
  </data>
  <data name="WriteOffAccount" xml:space="preserve">
    <value>Compte d'annulations</value>
  </data>
  <data name="ZIPPostal" xml:space="preserve">
    <value>Code postal</value>
  </data>
  <data name="AdviceForm" xml:space="preserve">
    <value>Formule talon</value>
  </data>
  <data name="AdviceLinesPerPage" xml:space="preserve">
    <value>Lignes du talon par page</value>
  </data>
  <data name="CheckForm" xml:space="preserve">
    <value>Formule de chèque</value>
  </data>
  <data name="CheckRateType" xml:space="preserve">
    <value>Type taux du chèque</value>
  </data>
  <data name="CheckStockCode" xml:space="preserve">
    <value>Code formule de chèques</value>
  </data>
  <data name="CurrencyCode" xml:space="preserve">
    <value>Code de devise</value>
  </data>
  <data name="DepositRateType" xml:space="preserve">
    <value>Type taux du dépôt</value>
  </data>
  <data name="ExchangeGainAccount" xml:space="preserve">
    <value>Compte gain de change</value>
  </data>
  <data name="ExchangeLossAccount" xml:space="preserve">
    <value>Compte perte de change</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="NextCheckNumber" xml:space="preserve">
    <value>Numéro chèque suivant</value>
  </data>
  <data name="RoundingAccount" xml:space="preserve">
    <value>Compte d'arrondi</value>
  </data>
  <data name="StockType" xml:space="preserve">
    <value>Type de formule</value>
  </data>
  <data name="TaxAuthority" xml:space="preserve">
    <value>Autorité fiscale</value>
  </data>
  <data name="TaxAuthorityDescription" xml:space="preserve">
    <value>Description autorité fiscale</value>
  </data>
  <data name="TaxClassDescription" xml:space="preserve">
    <value>Description classe de taxe</value>
  </data>
  <data name="TaxGroup" xml:space="preserve">
    <value>Groupe de taxes</value>
  </data>
  <data name="StatementCurrency" xml:space="preserve">
    <value>Devise du relevé</value>
  </data>
  <data name="TaxGroupCode" xml:space="preserve">
    <value>Code groupe de taxes</value>
  </data>
  <data name="RateType" xml:space="preserve">
    <value>Type de taux</value>
  </data>
  <data name="BK0001" xml:space="preserve">
    <value>Banques</value>
  </data>
  <data name="BK0002" xml:space="preserve">
    <value>Devises compte bancaire</value>
  </data>
  <data name="BK0008" xml:space="preserve">
    <value>Formules chèque</value>
  </data>
  <data name="PleaseSelect" xml:space="preserve">
    <value>Sélectionner</value>
  </data>
  <data name="AccountDescription" xml:space="preserve">
    <value>Description compte</value>
  </data>
  <data name="StatementDescription" xml:space="preserve">
    <value>Description devise</value>
  </data>
  <data name="TaxGroupDescription" xml:space="preserve">
    <value>Description groupe de taxes</value>
  </data>
  <data name="DeleteConfirmMessage" xml:space="preserve">
    <value>Supprimer la banque "{0}" entrainera des erreurs dans les applications qui l'utilisent. Voulez-vous vraiment la supprimer?</value>
  </data>
</root>