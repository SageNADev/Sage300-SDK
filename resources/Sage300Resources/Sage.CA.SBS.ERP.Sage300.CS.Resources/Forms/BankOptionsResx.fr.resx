<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BankCodeDesc" xml:space="preserve">
    <value>Description banque</value>
    <comment>Processing - Field</comment>
  </data>
  <data name="BankentryLABEL" xml:space="preserve">
    <value>Opération bancaire</value>
    <comment>Documents - Table Row</comment>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Entreprise</value>
    <comment>Tab Label</comment>
  </data>
  <data name="ContactnameLABEL" xml:space="preserve">
    <value>Nom du contact</value>
    <comment>Company - Field</comment>
  </data>
  <data name="DefaultDistCodeDesc" xml:space="preserve">
    <value>Description code ventilation</value>
    <comment>Processing - Field</comment>
  </data>
  <data name="DefbankcodeLABEL" xml:space="preserve">
    <value>Code bancaire par défaut</value>
    <comment>Processing - Field</comment>
  </data>
  <data name="DetailSortByLABEL" xml:space="preserve">
    <value>Trier détails de dépôt par</value>
    <comment>Processing - Field</comment>
  </data>
  <data name="Documents" xml:space="preserve">
    <value>Documents</value>
    <comment>Tab Label</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Options de banque</value>
    <comment>Screen Name</comment>
  </data>
  <data name="FaxnumberLABEL" xml:space="preserve">
    <value>Fax</value>
    <comment>Company - Field</comment>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>Traitement</value>
    <comment>Tab Label</comment>
  </data>
  <data name="RecoptionClrperiodLABEL" xml:space="preserve">
    <value>Vérifier documents rapprochés pour périodes futures</value>
    <comment>Processing - Field</comment>
  </data>
  <data name="RecoptionDepwriteoffLABEL" xml:space="preserve">
    <value>Méthode annulation dépôt</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="RecoptionFRAME" xml:space="preserve">
    <value>Options de rapprochement</value>
    <comment>Processing - Panel</comment>
  </data>
  <data name="RecoptionReconcilLABEL" xml:space="preserve">
    <value>Rapprocher</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="TelephoneLABEL" xml:space="preserve">
    <value>Téléphone</value>
    <comment>Processing - Field</comment>
  </data>
  <data name="TfradjustmentGlaccountLABEL" xml:space="preserve">
    <value>Compte GL ajustement virement</value>
    <comment>Processing - Field</comment>
  </data>
  <data name="TransferLABEL" xml:space="preserve">
    <value>Virement bancaire</value>
    <comment>Documents - Table Row</comment>
  </data>
  <data name="TransferserviceAccountLABEL" xml:space="preserve">
    <value>Compte GL par défaut</value>
    <comment>Processing - Field</comment>
  </data>
  <data name="TransferserviceDistcodeLABEL" xml:space="preserve">
    <value>Code ventilation par défaut</value>
    <comment>Processing - Field</comment>
  </data>
  <data name="TransferserviceFRAME" xml:space="preserve">
    <value>Options de transaction</value>
    <comment>Processing - Panel</comment>
  </data>
  <data name="BankCode" xml:space="preserve">
    <value>Code banque</value>
  </data>
  <data name="BK0010" xml:space="preserve">
    <value>Options de banque</value>
    <comment>Import/Export</comment>
  </data>
  <data name="BankEntryLength" xml:space="preserve">
    <value>Longueur opération bancaire</value>
  </data>
  <data name="BankEntryPrefix" xml:space="preserve">
    <value>Préfixe opération bancaire</value>
  </data>
  <data name="BankTransferLength" xml:space="preserve">
    <value>Longueur virement bancaire</value>
  </data>
  <data name="BankTransferPrefix" xml:space="preserve">
    <value>Préfixe virement bancaire</value>
  </data>
  <data name="DepositWriteOffMethod" xml:space="preserve">
    <value>Méthode annulation dépôt</value>
  </data>
  <data name="ErrorinDefaultAccount" xml:space="preserve">
    <value>Erreur dans compte par défaut</value>
  </data>
  <data name="ErrorinDefaultDistCode" xml:space="preserve">
    <value>Erreur dans code ventilation par défaut</value>
  </data>
  <data name="NextBankEntryDocSeq" xml:space="preserve">
    <value>Séquence document opération bancaire suivante</value>
  </data>
  <data name="NextBankEntryNumber" xml:space="preserve">
    <value>Numéro opération bancaire suivant</value>
  </data>
  <data name="NextBankTransferDocSeq" xml:space="preserve">
    <value>Séquence document virement bancaire suivante</value>
  </data>
  <data name="NextBankTransferNumber" xml:space="preserve">
    <value>Numéro virement bancaire suivant</value>
  </data>
  <data name="NextRunId" xml:space="preserve">
    <value>Code exécution suivant</value>
  </data>
  <data name="ReconcileList" xml:space="preserve">
    <value>Liste rapprochement</value>
  </data>
  <data name="BankOption" xml:space="preserve">
    <value>Option de banque</value>
  </data>
  <data name="DistributionCode" xml:space="preserve">
    <value>Code ventilation</value>
  </data>
  <data name="DocumentNo" xml:space="preserve">
    <value>Numéros des documents</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Longueur</value>
  </data>
  <data name="NextNumber" xml:space="preserve">
    <value>Numéro suivant</value>
  </data>
  <data name="NextPostingSequence" xml:space="preserve">
    <value>Séquence report suivante</value>
  </data>
  <data name="Prefix" xml:space="preserve">
    <value>Préfixe</value>
  </data>
  <data name="ReceiptNo" xml:space="preserve">
    <value>Numéro encaissement</value>
  </data>
  <data name="RECDATE" xml:space="preserve">
    <value>Date rapprochement</value>
  </data>
</root>