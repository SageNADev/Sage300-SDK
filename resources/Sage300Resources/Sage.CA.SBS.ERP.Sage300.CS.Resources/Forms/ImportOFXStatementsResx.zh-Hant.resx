<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CdlgFilter" xml:space="preserve">
    <value>OFX 對帳單 (*.aso;*.ofx;*.dbo;*.afx;*.qfx)|*.aso;*.ofx|文字檔 (*.txt)|*.txt|所有檔案 (*.*)|*.*</value>
    <comment>Message</comment>
  </data>
  <data name="EmptyFiscCal" xml:space="preserve">
    <value>會計年曆是空的。</value>
    <comment>Message</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>匯入OFX對帳單</value>
    <comment>Screen Title</comment>
  </data>
  <data name="ErrintBKStmt" xml:space="preserve">
    <value>發生一個問題，至少一個科目{1}的有在途編號{2}於{3}的{0}幣別對帳單未能調節到銀行{4}。</value>
    <comment>Message</comment>
  </data>
  <data name="ErrintCCStmt" xml:space="preserve">
    <value>發生一個問題，至少一個科目{1}的於{2}於{2}的{0}幣別對帳單未能調節到銀行{3}。</value>
    <comment>Message</comment>
  </data>
  <data name="FromBankCode" xml:space="preserve">
    <value>從銀行代碼</value>
    <comment>Field</comment>
  </data>
  <data name="ImportedTrx" xml:space="preserve">
    <value>{0}個對帳單和{1}個新增交易已匯入，儲存並準備好匹配。</value>
    <comment>Message</comment>
  </data>
  <data name="InvRecYP" xml:space="preserve">
    <value>為{0}的調節被跳過。要調節此一銀行，您必須指定一個{1}-{2}或更遲的調節年度/期間。</value>
    <comment>Message</comment>
  </data>
  <data name="MatchBKCurrMatchingStmtInfo" xml:space="preserve">
    <value>為銀行{4}成功匯入幣別{0}，科目{1}（分行編號{2}）於{3}的對帳單。</value>
  </data>
  <data name="MatchBKCurrNotMatchingStmtInfo" xml:space="preserve">
    <value>警告：匯入幣別{0}，科目{1}（分行編號{2}）於{3}的對帳單，但對帳單不在銀行{4}的幣別範圍內。複查並核實匯入的交易。</value>
  </data>
  <data name="MatchBKStmtInfo" xml:space="preserve">
    <value>科目{1}，分行編號{2}於{3}的{0}幣別對帳單符合銀行{4}。</value>
    <comment>Message</comment>
  </data>
  <data name="MatchCCCurrMatchingStmtInfo" xml:space="preserve">
    <value>為銀行{3}成功匯入幣別{0}，科目{1}於{2}的對帳單。</value>
  </data>
  <data name="MatchCCCurrNotMatchingStmtInfo" xml:space="preserve">
    <value>警告：匯入幣別{0}，科目{1}於{2}的對帳單，但對帳單不在銀行{3}的幣別範圍內。複查並核實匯入的交易。</value>
  </data>
  <data name="MatchCCStmtInfo" xml:space="preserve">
    <value>科目{1}於{2}的{0}幣別對帳單符合銀行{3}。</value>
    <comment>Message</comment>
  </data>
  <data name="MatchTrxAmt" xml:space="preserve">
    <value>{0}個交易相符，僅基於金額。請核實調節。</value>
    <comment>Message</comment>
  </data>
  <data name="NoActUnlckYP" xml:space="preserve">
    <value>試圖探測該公司首個活動且未鎖定的會計期間時發生一個問題。</value>
    <comment>Message</comment>
  </data>
  <data name="OFXFile" xml:space="preserve">
    <value>下載的銀行對帳單檔案</value>
    <comment>Field</comment>
  </data>
  <data name="OFXNoRateComment" xml:space="preserve">
    <value>沒有{0}匯率從{1}到{2}於{3}。</value>
    <comment>Message</comment>
  </data>
  <data name="PContents" xml:space="preserve">
    <value>選擇一個有效的OFX檔案。</value>
    <comment>Message</comment>
  </data>
  <data name="PVersion" xml:space="preserve">
    <value>所選檔案被使用一個不支持的OFX版本建立。</value>
    <comment>Message</comment>
  </data>
  <data name="StmtCurrency" xml:space="preserve">
    <value>{0}幣別對帳單不在銀行{1}的幣別範圍內。是否仍然繼續匯入？</value>
    <comment>Message</comment>
  </data>
  <data name="StmtProcessInfo" xml:space="preserve">
    <value>處理了{0}個對帳單，調節了{1}個。</value>
    <comment>Message</comment>
  </data>
  <data name="ToBankCode" xml:space="preserve">
    <value>到銀行代碼</value>
    <comment>Field</comment>
  </data>
  <data name="TrxProcessInfo" xml:space="preserve">
    <value>在調節的對帳單中處理了{0}個交易，清算了{1}個。（未清算的已處理交易在其首次處理時作為分錄增加。）</value>
    <comment>Message</comment>
  </data>
  <data name="UnmatchBKStmtInfo" xml:space="preserve">
    <value>科目{1}，在途編號{2}於{3}的{0}幣別對帳單不符合任何指定範圍內的銀行記錄。</value>
    <comment>Message</comment>
  </data>
  <data name="UnmatchCCStmtInfo" xml:space="preserve">
    <value>科目{1}於{2}的{0}幣別對帳單不符合任何指定範圍內的銀行記錄。</value>
    <comment>Message</comment>
  </data>
</root>