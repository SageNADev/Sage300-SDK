<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActEntryRestartWarn" xml:space="preserve">
    <value>An entry posting restart record exists for bank {0}.  You must complete entry posting before editing entries for this bank.</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ActRecRestartErr" xml:space="preserve">
    <value>A reconciliation posting restart record exists for bank {0}.  Use the Post Reconciliation screen to complete reconciliation posting before editing or posting entries for this bank.</value>
    <comment>Error Message</comment>
  </data>
  <data name="BankAcct" xml:space="preserve">
    <value>Bank Account</value>
    <comment>Field</comment>
  </data>
  <data name="BankCode" xml:space="preserve">
    <value>Bank Code</value>
    <comment>Field</comment>
  </data>
  <data name="BankCodeDesc" xml:space="preserve">
    <value>Bank Description</value>
    <comment>Field</comment>
  </data>
  <data name="BankEntryType" xml:space="preserve">
    <value>Bank Entry Type</value>
    <comment>List</comment>
  </data>
  <data name="BankInactive" xml:space="preserve">
    <value>Bank {0} is inactive.</value>
    <comment>Error Message</comment>
  </data>
  <data name="BANKNOTEXISTNOTEDITABLE" xml:space="preserve">
    <value>A problem occurred while retrieving information for bank {0} and the bank entry could not be saved. Please review setup information for bank {1}.</value>
    <comment>Error Message</comment>
  </data>
  <data name="BankRequiredInDetail" xml:space="preserve">
    <value>Enter a bank code before creating a detail line.</value>
    <comment>Error Message</comment>
  </data>
  <data name="CREATEDIST" xml:space="preserve">
    <value>Create Distribution</value>
    <comment>Button</comment>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
    <comment>Field</comment>
  </data>
  <data name="CurrencyCode" xml:space="preserve">
    <value>Currency Code</value>
    <comment>Rates - Field</comment>
  </data>
  <data name="CurrencyDesc" xml:space="preserve">
    <value>Currency Description</value>
    <comment>Table Row</comment>
  </data>
  <data name="DepositAmt" xml:space="preserve">
    <value>Deposit Amount</value>
    <comment>Field</comment>
  </data>
  <data name="DISTCODE" xml:space="preserve">
    <value>Distribution Code</value>
    <comment>Table - Column</comment>
  </data>
  <data name="DISTCODEDESC" xml:space="preserve">
    <value>Distribution Code Description</value>
    <comment>Table - Column</comment>
  </data>
  <data name="DISTSet" xml:space="preserve">
    <value>Distribution Set</value>
    <comment>Field</comment>
  </data>
  <data name="DistSetDesc" xml:space="preserve">
    <value>Distribution Set Description</value>
    <comment>Field</comment>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Bank Entry</value>
    <comment>Screen Title</comment>
  </data>
  <data name="EntryDesc" xml:space="preserve">
    <value>Entry Description</value>
    <comment>Field</comment>
  </data>
  <data name="EntryNo" xml:space="preserve">
    <value>Entry Number</value>
    <comment>Field</comment>
  </data>
  <data name="ErrorCreateDist" xml:space="preserve">
    <value>A problem occurred while creating the distribution. Please try again.</value>
    <comment>Error Message</comment>
  </data>
  <data name="ErrorDEFACCOUNT" xml:space="preserve">
    <value>You cannot create a new bank entry because the G/L account {0} is invalid. Check data integrity to determine the cause of the error.</value>
    <comment>Error Message</comment>
  </data>
  <data name="ErrorDEFBANK" xml:space="preserve">
    <value>You cannot create a new bank entry because a setting for bank {0} is invalid, or a default bank code has not been set up. Check data integrity to determine the error, and then either correct the setting for bank {1}, or change the default bank code in Bank Options.</value>
    <comment>Error Message</comment>
  </data>
  <data name="ErrorDEFDISTCODE" xml:space="preserve">
    <value>You cannot create a new bank entry because a setting for distribution code {0} is invalid, or a default distribution code has not been set up. Check data integrity to determine the error, and then either correct the setting in the {1} distribution code record, or change the default distribution code in Bank Options.</value>
    <comment>Error Message</comment>
  </data>
  <data name="ExchangeRate" xml:space="preserve">
    <value>Exchange Rate</value>
    <comment>Rates - Table Row</comment>
  </data>
  <data name="FroBankRate" xml:space="preserve">
    <value>From Bank Rate</value>
    <comment>Rates - Table Column</comment>
  </data>
  <data name="FuncDepositAm" xml:space="preserve">
    <value>Functional Deposit Amount</value>
    <comment>Rates - Field</comment>
  </data>
  <data name="FuncTransferAm" xml:space="preserve">
    <value>Functional Transfer Amount</value>
    <comment>Rates - Field</comment>
  </data>
  <data name="PaymentType" xml:space="preserve">
    <value>Payment Type</value>
    <comment>List</comment>
  </data>
  <data name="POSTINGDATE" xml:space="preserve">
    <value>Bank Entry Date</value>
    <comment>Field</comment>
  </data>
  <data name="RateDate" xml:space="preserve">
    <value>Rate Date</value>
    <comment>Rates - Table Row</comment>
  </data>
  <data name="RATEOVERRIDE" xml:space="preserve">
    <value>Rate Override</value>
    <comment>Panel</comment>
  </data>
  <data name="RateType" xml:space="preserve">
    <value>Rate Type</value>
    <comment>Rates - Table Row</comment>
  </data>
  <data name="RateTypeDesc" xml:space="preserve">
    <value>Rate Type Descriptiom</value>
    <comment>Rates - Table Row</comment>
  </data>
  <data name="SaveBeforeChangePostDate" xml:space="preserve">
    <value>Changing the bank entry date in a multicurrency company may alter either the currency rate or the tax reporting currency rate. You must save the bank entry first in order to proceed. Do you want to continue?</value>
    <comment>Error Message</comment>
  </data>
  <data name="ToBankRate" xml:space="preserve">
    <value>To Bank Rate</value>
    <comment>Rates - Table Column</comment>
  </data>
  <data name="TransferAm" xml:space="preserve">
    <value>Transfer Amount</value>
    <comment>Rates - Field</comment>
  </data>
  <data name="TransferDepCon" xml:space="preserve">
    <value>Transfer - Deposit Conversion</value>
    <comment>Rates - Field</comment>
  </data>
  <data name="WarnBlankTaxGroup" xml:space="preserve">
    <value>Select a tax group for taxable entry details.</value>
    <comment>Error Message</comment>
  </data>
  <data name="SequenceNumber" xml:space="preserve">
    <value>Sequence Number</value>
  </data>
  <data name="BankEntryAmount" xml:space="preserve">
    <value>Bank Entry Amount</value>
    <comment>Label</comment>
  </data>
  <data name="BankEntryTotalFuncCurrency" xml:space="preserve">
    <value>Bank Entry Total (Functional Currency)</value>
    <comment>Label</comment>
  </data>
  <data name="BankEntryTotalSourceCurrency" xml:space="preserve">
    <value>Bank Entry Total (Source Currency)</value>
    <comment>Label</comment>
  </data>
  <data name="FunctionalAmount" xml:space="preserve">
    <value>Functional Amount</value>
    <comment>Label</comment>
  </data>
  <data name="AgingRecondays" xml:space="preserve">
    <value>Aging Reconciliation Days</value>
  </data>
  <data name="BankEntryCurrency" xml:space="preserve">
    <value>Bank Entry Currency</value>
  </data>
  <data name="CompletedStatus" xml:space="preserve">
    <value>Completed Status</value>
  </data>
  <data name="DateCreated" xml:space="preserve">
    <value>Date Created</value>
  </data>
  <data name="DefaultNewDocumentNumber" xml:space="preserve">
    <value>Default New Document Number</value>
  </data>
  <data name="EntryTotalWithoutTax" xml:space="preserve">
    <value>Entry Total Without Tax</value>
  </data>
  <data name="EntryType" xml:space="preserve">
    <value>Entry Type</value>
  </data>
  <data name="FiscalEntryAmount" xml:space="preserve">
    <value>Fiscal Entry Amount</value>
  </data>
  <data name="FuncEntryTotalWithoutTax" xml:space="preserve">
    <value>Functional Entry Total Without Tax</value>
  </data>
  <data name="NumberofLines" xml:space="preserve">
    <value>Number of Lines</value>
  </data>
  <data name="OFXTransactionID" xml:space="preserve">
    <value>OFX Transaction ID</value>
  </data>
  <data name="PostingSequence" xml:space="preserve">
    <value>Posting Sequence</value>
  </data>
  <data name="ReconciledEntryAmount" xml:space="preserve">
    <value>Reconciled Entry Amount</value>
  </data>
  <data name="RunId" xml:space="preserve">
    <value>Run ID</value>
  </data>
  <data name="BankEntryTotFunc" xml:space="preserve">
    <value>Functional Entry Total</value>
  </data>
  <data name="BankEntryTotSour" xml:space="preserve">
    <value>Entry Total</value>
  </data>
  <data name="DepositType" xml:space="preserve">
    <value>Deposit Type</value>
    <comment>Field</comment>
  </data>
  <data name="BankEntrySerialNumber" xml:space="preserve">
    <value>Bank Entry Serial Number</value>
    <comment>field</comment>
  </data>
  <data name="BankEntryCurrencyDesc" xml:space="preserve">
    <value>Bank Entry Currency Description</value>
    <comment>Finder field</comment>
  </data>
  <data name="BankEntryPeriod" xml:space="preserve">
    <value>Bank Entry Period</value>
    <comment>Finder - field</comment>
  </data>
  <data name="BankEntryYear" xml:space="preserve">
    <value>Bank Entry Year</value>
    <comment>Finder - field</comment>
  </data>
  <data name="BankStatementCurrency" xml:space="preserve">
    <value>Bank Statement Currency</value>
    <comment>finder field</comment>
  </data>
  <data name="BK0450" xml:space="preserve">
    <value>Bank Entry Header</value>
  </data>
  <data name="BK0460" xml:space="preserve">
    <value>Bank Entry Detail</value>
  </data>
  <data name="BankEntryCurrencyDesc1" xml:space="preserve">
    <value>Bank Entry Currency Description</value>
  </data>
  <data name="WarnTaxGroupBlank" xml:space="preserve">
    <value>Entry detail is taxable but tax group is blank.</value>
  </data>
  <data name="NoMatchingRateInCurrencyTable" xml:space="preserve">
    <value>The Currency Server rate table does not have a matching rate defined for source currency code {0}, rate type {1}, and rate date {2}.</value>
    <comment>Warning message</comment>
  </data>
  <data name="EntryRateInformationRequired" xml:space="preserve">
    <value>You must save your Bank Entry updates before changing entry rate information. Do you want to continue?</value>
    <comment>Confirmation message</comment>
  </data>
</root>