<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Address1" xml:space="preserve">
    <value>Address Line 1</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address Line 2</value>
  </data>
  <data name="Address3" xml:space="preserve">
    <value>Address Line 3</value>
  </data>
  <data name="Address4" xml:space="preserve">
    <value>Address Line 4</value>
  </data>
  <data name="CS0001" xml:space="preserve">
    <value>Company Profile</value>
    <comment>For Export</comment>
  </data>
  <data name="Branch" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="BusinessAsLABEL" xml:space="preserve">
    <value>Doing Business As</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="BusinessRegistrationNumber" xml:space="preserve">
    <value>Business Registration Number</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
    <comment>For Export</comment>
  </data>
  <data name="ContactFax" xml:space="preserve">
    <value>Fax </value>
  </data>
  <data name="ContactFRAME" xml:space="preserve">
    <value>Contact Information</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ContactNAME" xml:space="preserve">
    <value>Contact Name</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ContactPhone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CountryCode" xml:space="preserve">
    <value>Country Code</value>
  </data>
  <data name="CurrencyDesc" xml:space="preserve">
    <value>Currency Description</value>
  </data>
  <data name="DatabaseID" xml:space="preserve">
    <value>Database ID</value>
  </data>
  <data name="DefaultRateType" xml:space="preserve">
    <value>Default Rate Type</value>
  </data>
  <data name="DoingBussinessAs" xml:space="preserve">
    <value>Doing Business As</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Company Profile</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Euro" xml:space="preserve">
    <value>Euro</value>
    <comment>For Export</comment>
  </data>
  <data name="FormatPhone" xml:space="preserve">
    <value>Format Phone and Fax Numbers</value>
  </data>
  <data name="FunctionalCurrency" xml:space="preserve">
    <value>Functional Currency</value>
  </data>
  <data name="GainLossAcctMethod" xml:space="preserve">
    <value>Gain/Loss Accounting Method</value>
  </data>
  <data name="GnLssMthdOneWayChg" xml:space="preserve">
    <value>Changing the Gain/Loss Accounting Method to "Recognized Gain/Loss" is permanent.  You will not be able to switch back to "Realized and Unrealized Gain/Loss" after saving the Company Profile.</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InactiveAccount" xml:space="preserve">
    <value>Inactive G/L Account</value>
  </data>
  <data name="InvalidDefaultRateType" xml:space="preserve">
    <value>Cannot find Rate Type {0}.</value>
  </data>
  <data name="LegalName" xml:space="preserve">
    <value>Legal Name</value>
  </data>
  <data name="LocationCode" xml:space="preserve">
    <value>Location Code</value>
  </data>
  <data name="LocationType" xml:space="preserve">
    <value>Location Type</value>
  </data>
  <data name="LockedFiscalPeriod" xml:space="preserve">
    <value>Locked Fiscal Period</value>
  </data>
  <data name="Multicurrency" xml:space="preserve">
    <value>Multicurrency</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
    <comment>For Export </comment>
  </data>
  <data name="NoExistAccount" xml:space="preserve">
    <value>Non-existent G/L Account</value>
  </data>
  <data name="NumFiscalPeriods" xml:space="preserve">
    <value>Number of Fiscal Periods</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Qtr4Periods" xml:space="preserve">
    <value>Quarter with 4 Periods</value>
  </data>
  <data name="RateTypeDesc" xml:space="preserve">
    <value>Rate Type Description</value>
  </data>
  <data name="ReportingCurrency" xml:space="preserve">
    <value>Reporting Currency</value>
    <comment>For Export</comment>
  </data>
  <data name="StateProv" xml:space="preserve">
    <value>State/Province</value>
  </data>
  <data name="TabAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="TabOptions" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="TaxNumber" xml:space="preserve">
    <value>Tax Number</value>
  </data>
  <data name="WarningDateRange" xml:space="preserve">
    <value>Warning Date Range</value>
  </data>
  <data name="ZpPostal" xml:space="preserve">
    <value>ZIP/Postal Code</value>
  </data>
  <data name="CompanyLogo" xml:space="preserve">
    <value>Company Logo</value>
  </data>
  <data name="SelectLogo" xml:space="preserve">
    <value>Select Company Logo</value>
  </data>
  <data name="UpLoad" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="FileFormatError" xml:space="preserve">
    <value>Select a supported image type (JPEG or PNG).</value>
  </data>
  <data name="UpLoadMessage" xml:space="preserve">
    <value>Company logo uploaded successfully.</value>
  </data>
  <data name="DeleteLogoMessage" xml:space="preserve">
    <value>Company logo deleted successfully.</value>
  </data>
  <data name="FileSizeError" xml:space="preserve">
    <value>Maximum image size is 100 KB. Please select a smaller image.</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SendTestEmail" xml:space="preserve">
    <value>Send Test Email</value>
  </data>
  <data name="SendTo" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="ServerName" xml:space="preserve">
    <value>Server Name</value>
  </data>
  <data name="ServerPort" xml:space="preserve">
    <value>Server Port</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UseSSL" xml:space="preserve">
    <value>Use SSL</value>
  </data>
  <data name="EmailBody" xml:space="preserve">
    <value>This is a test email sent from Sage 300.</value>
  </data>
  <data name="EmailSendMessage" xml:space="preserve">
    <value>Email sent successfully.</value>
  </data>
  <data name="EmailSubject" xml:space="preserve">
    <value>Test email from Sage 300</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>From Email Address</value>
  </data>
  <data name="EmailAuthenticatedFailed" xml:space="preserve">
    <value>The SMTP server requires a secure connection or the client was not authenticated.</value>
  </data>
  <data name="EmailBoxBusy" xml:space="preserve">
    <value>Mailbox is busy, please try again later.</value>
  </data>
  <data name="EmailDeliveryFailed" xml:space="preserve">
    <value>Email settings are incomplete or incorrect. Review your settings on the Email tab of the Company Profile screen.</value>
  </data>
  <data name="EmailInfoMessage" xml:space="preserve">
    <value>You must complete the fields on the Email tab if you want to use Email as the delivery method for customers and vendors.</value>
  </data>
  <data name="EmailQueuedMessage" xml:space="preserve">
    <value>Email messages successfully created and added to the print queue for delivery.</value>
  </data>
  <data name="InvalidEmailAddress" xml:space="preserve">
    <value>Invalid email address.</value>
  </data>
  <data name="SendCopyTo" xml:space="preserve">
    <value>Send Copies To</value>
  </data>
  <data name="BccEmailAddress" xml:space="preserve">
    <value>Bcc Email Address</value>
  </data>
  <data name="BccEmailMessageHelp" xml:space="preserve">
    <value>If you enter multiple email addresses, separate them with a semicolon (;).</value>
  </data>
</root>