<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Entity" xml:space="preserve">
    <value>打印支票</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvalidBankMsg" xml:space="preserve">
    <value>银行代码缺失或无效。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvalidSrceAppMsg" xml:space="preserve">
    <value>来源客户端应用程序标识缺失或无效。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvalidAppRunNumMsg" xml:space="preserve">
    <value>应用程序运行编号缺失或无效。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="InvalidChkStockMsg" xml:space="preserve">
    <value>支票簿代码无效。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="IntErrChkStkPrefMsg" xml:space="preserve">
    <value>支票簿代码无效。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="NoCheckStocksMsg" xml:space="preserve">
    <value>或者没有支票簿，或者全部被其他用户所使用。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="BlankChkAdvForm" xml:space="preserve">
    <value>支票/通知表格不能空置。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="QAdvPrinted" xml:space="preserve">
    <value>是否所有通知都已打印成功？</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="QAllPrintedOK" xml:space="preserve">
    <value>您没有标记任何支票为要打印。是否所有支票都已打印成功？</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="QChkPrinted" xml:space="preserve">
    <value>是否所有支票都打印成功？</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Endserial" xml:space="preserve">
    <value>报表规格错误。无法设置ENDSERIAL参数。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="Startserial" xml:space="preserve">
    <value>报表规格错误。无法设置STARTSERIAL参数。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="FormidNotExist" xml:space="preserve">
    <value>无法找到指定的支票簿代码。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="AdvPrinting" xml:space="preserve">
    <value>打印通知。将通知簿插入打印机后按OK（确定）。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="ChkPrinting" xml:space="preserve">
    <value>打印支票。将支票簿插入打印机后按OK（确定）。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="QCancelChkRun" xml:space="preserve">
    <value>并未打印所有支票。是否取消支票打印（作废所有先前已打印的支票）？</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="VlsBKREGColSrcecurnCap" xml:space="preserve">
    <value>支票币种</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="CUSTLeadingNumCap" xml:space="preserve">
    <value>导引支票数目</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="BKFORMCheckAdviceCap" xml:space="preserve">
    <value>支票/通知表格</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="CmdBrowseAdvCap" xml:space="preserve">
    <value>浏览...</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="CmdAlignCap" xml:space="preserve">
    <value>预览</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="CmdReprintCap" xml:space="preserve">
    <value>选择重新打印范围</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="PrReprint" xml:space="preserve">
    <value>重新打印</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="HIDEPRINT" xml:space="preserve">
    <value>显示已打印的支票</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="TOTUNPRCHK" xml:space="preserve">
    <value>未打印的支票数</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="BANUNPRCHK" xml:space="preserve">
    <value>这一银行未打印的支票</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="PFRFrmCap" xml:space="preserve">
    <value>选择重新打印范围</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="PFRLblInstructionCap" xml:space="preserve">
    <value>指定一个支票范围并选择一个要应用的状态。有“未打印”状态的支票将被列入下一个打印运行中。</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="PFRBKPRFUNStatusCap" xml:space="preserve">
    <value>将状态设为</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="PFRFrmSetupFailTxt" xml:space="preserve">
    <value>未能设置</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="PFRNoFormHelpMsg" xml:space="preserve">
    <value>无法找到帮助，为</value>
    <comment>Auto-Generated</comment>
  </data>
  <data name="FromCheckNumber" xml:space="preserve">
    <value>从支票编号</value>
  </data>
  <data name="ToCheckNumber" xml:space="preserve">
    <value>到支票编号</value>
  </data>
  <data name="ReprintRangeError" xml:space="preserve">
    <value>起始值不能大于截止值。</value>
  </data>
  <data name="SelectReportFile" xml:space="preserve">
    <value>选择报表文件</value>
  </data>
  <data name="StockDescription" xml:space="preserve">
    <value>簿描述</value>
  </data>
  <data name="InstalledReports" xml:space="preserve">
    <value>安装的报表</value>
  </data>
  <data name="PrintCheck" xml:space="preserve">
    <value>打印支票</value>
  </data>
  <data name="SelectChecksReprint" xml:space="preserve">
    <value>选择要打印的支票。</value>
  </data>
  <data name="CheckStockInUse" xml:space="preserve">
    <value>另一用户正在使用支票簿&quot;{0}&quot;。</value>
    <comment>Used when check stock is locked</comment>
  </data>
</root>