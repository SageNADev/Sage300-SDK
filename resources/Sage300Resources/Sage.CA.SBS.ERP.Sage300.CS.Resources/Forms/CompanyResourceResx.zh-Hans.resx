<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>地址</value>
  </data>
  <data name="AddressLine1" xml:space="preserve">
    <value>地址行1</value>
  </data>
  <data name="AddressLine2" xml:space="preserve">
    <value>地址行2</value>
  </data>
  <data name="AddressLine3" xml:space="preserve">
    <value>地址行3</value>
  </data>
  <data name="AddressLine4" xml:space="preserve">
    <value>地址行4</value>
  </data>
  <data name="Branch" xml:space="preserve">
    <value>分部</value>
  </data>
  <data name="BusinessRegistrationNumber" xml:space="preserve">
    <value>商业注册编号</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>市/县</value>
  </data>
  <data name="CompanyProfile" xml:space="preserve">
    <value>公司概览</value>
  </data>
  <data name="ContactInformation" xml:space="preserve">
    <value>联系人信息</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>国家</value>
  </data>
  <data name="CountryCode" xml:space="preserve">
    <value>国家代码</value>
  </data>
  <data name="CsDefaultRateDropDownChange" xml:space="preserve">
    <value>更改收益/损失核算方法为&apos;已确认收益/损失&apos;是永久性的。在您保存了公司概览之后，您将不能够切换回&apos;已实现和未实现收益/损失&apos;。</value>
  </data>
  <data name="DataBaseID" xml:space="preserve">
    <value>数据库标识</value>
  </data>
  <data name="DefaultRateType" xml:space="preserve">
    <value>默认汇率类型</value>
  </data>
  <data name="DoingBussinessAs" xml:space="preserve">
    <value>商业别称</value>
  </data>
  <data name="Euro" xml:space="preserve">
    <value>欧元</value>
  </data>
  <data name="FaxNumber" xml:space="preserve">
    <value>传真</value>
  </data>
  <data name="FormatPhoneNumber" xml:space="preserve">
    <value>格式化电话号码</value>
  </data>
  <data name="FunctionalCurrency" xml:space="preserve">
    <value>功能币种</value>
    <comment>Common Service Company Profile Screen, GL Setup Options Account Screen</comment>
  </data>
  <data name="Gain_LossAccountingMethod" xml:space="preserve">
    <value>收益/损失核算方法</value>
  </data>
  <data name="InactiveGorLAccount" xml:space="preserve">
    <value>闲置的总帐科目</value>
  </data>
  <data name="InvalidDefaultRateType" xml:space="preserve">
    <value>无法找到指定的汇率类型。</value>
  </data>
  <data name="LegalName" xml:space="preserve">
    <value>法定名称</value>
  </data>
  <data name="LocationCode" xml:space="preserve">
    <value>地点代码</value>
  </data>
  <data name="LocationType" xml:space="preserve">
    <value>地点类型</value>
  </data>
  <data name="LockedFiscalPeriod" xml:space="preserve">
    <value>锁定的财务期间</value>
  </data>
  <data name="Multi_currency" xml:space="preserve">
    <value>多币种</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="NonexistentGorLAccount" xml:space="preserve">
    <value>不存在的总帐科目</value>
  </data>
  <data name="NumberofFiscalPeriods" xml:space="preserve">
    <value>财务期间数</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>选项</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>电话</value>
  </data>
  <data name="Quarterwith4Periods" xml:space="preserve">
    <value>有4个期间的季度</value>
  </data>
  <data name="ReportCurrency" xml:space="preserve">
    <value>报表币种</value>
  </data>
  <data name="State_Province" xml:space="preserve">
    <value>省/市/区</value>
  </data>
  <data name="TaxNumber" xml:space="preserve">
    <value>税务编号</value>
  </data>
  <data name="WarningDateRange" xml:space="preserve">
    <value>警告日期范围：</value>
  </data>
  <data name="WarningMessageTitle" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="Zip_PostalCode" xml:space="preserve">
    <value>邮政编码</value>
  </data>
</root>