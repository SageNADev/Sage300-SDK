<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppliedPayment" xml:space="preserve">
    <value>SELECT * FROM APTCP WHERE BATCHTYPE='{0}' AND IDVEND='{1}' AND IDINVC='{2}' AND IDDOCMTCH='{3}' AND TRXTYPE={4}</value>
    <comment>Added for Prepayment AP Invoice Entry</comment>
  </data>
  <data name="KPI001" xml:space="preserve">
    <value>/*
KPI001 Account Balances
{0} - Fiscal Year, eg, '2019'
{1} - Fiscal Period, eg, 10 (will sum up the data from periods from 1 to 10)
{2} - Currency Code, eg, 'USD'
{3} - Acct Number 1
{4} - Acct Number 2
{5} - Acct Number 3
{6} - Acct Number 4
{7} - Acct Number 5
declare @year nvarchar(100), @period int, @currency nvarchar(100)
select @year='2020', @period = 12, @currency = 'CAD'
*/

SELECT 
	a.ACCTID, 
	a.ACCTDESC, 
	a.ACCTFMTTD,
	ISNULL(b.AMOUNT, 0) *
	CASE 
		WHEN a.ACCTBAL = 1 THEN 1
		WHEN a.ACCTBAL = 2 THEN -1
	END AS Amount
FROM 
	GLAMF a LEFT JOIN 
	(
		SELECT
			ACCTID,
			SUM(OPENBAL + 
				CASE WHEN {1} &gt;= 1 THEN NETPERD1 ELSE 0 END + 
				CASE WHEN {1} &gt;= 2 THEN NETPERD2 ELSE 0 END + 
				CASE WHEN {1} &gt;= 3 THEN NETPERD3 ELSE 0 END + 
				CASE WHEN {1} &gt;= 4 THEN NETPERD4 ELSE 0 END + 
				CASE WHEN {1} &gt;= 5 THEN NETPERD5 ELSE 0 END + 
				CASE WHEN {1} &gt;= 6 THEN NETPERD6 ELSE 0 END + 
				CASE WHEN {1} &gt;= 7 THEN NETPERD7 ELSE 0 END + 
				CASE WHEN {1} &gt;= 8 THEN NETPERD8 ELSE 0 END + 
				CASE WHEN {1} &gt;= 9 THEN NETPERD9 ELSE 0 END + 
				CASE WHEN {1} &gt;= 10 THEN NETPERD10 ELSE 0 END + 
				CASE WHEN {1} &gt;= 11 THEN NETPERD11 ELSE 0 END + 
				CASE WHEN {1} &gt;= 12 THEN NETPERD12 ELSE 0 END + 
				CASE WHEN {1} &gt;= 13 THEN NETPERD13 ELSE 0 END) as AMOUNT
		FROM	
			GLAFS
		WHERE			
			FSCSYR = '{0}' AND 
			FSCSDSG = 'A' AND 
			FSCSCURN = '{2}' AND 
			CURNTYPE = 'F'
		GROUP BY 
			ACCTID
			
	) b on a.ACCTID = b.ACCTID
WHERE
	a.ACCTFMTTD='{3}' OR a.ACCTFMTTD='{4}' OR a.ACCTFMTTD='{5}' OR a.ACCTFMTTD='{6}' OR a.ACCTFMTTD='{7}'</value>
    <comment>KPI001 Account Balances
{0} - Fiscal Year, eg, '2019'
{1} - Fiscal Period, eg, 10 (will sum up the data from periods from 1 to 10)
{2} - Currency Code, eg, 'USD'
{3} - Acct Number 1
{4} - Acct Number 2
{5} - Acct Number 3
{6} - Acct Number 4
{7} - Acct Number 5</comment>
  </data>
  <data name="KPI002" xml:space="preserve">
    <value>/*
KPI002 Cash Position
{0} - FiscalYear
{1} - FiscalPeriod
{2} - CurrencyCode
declare @fiscalYear nchar(4), @fiscalPeriod int, @currecyCode nchar(3)
select @fiscalYear='2020', @fiscalPeriod=5, @currecyCode='CAD'
*/

;WITH data AS
(
	SELECT 
		g.GRPCOD,
		s.OPENBAL + 
			CASE WHEN {1} &gt;= 1 THEN s.NETPERD1 ELSE 0 END + 
			CASE WHEN {1} &gt;= 2 THEN s.NETPERD2 ELSE 0 END + 
			CASE WHEN {1} &gt;= 3 THEN s.NETPERD3 ELSE 0 END + 
			CASE WHEN {1} &gt;= 4 THEN s.NETPERD4 ELSE 0 END + 
			CASE WHEN {1} &gt;= 5 THEN s.NETPERD5 ELSE 0 END + 
			CASE WHEN {1} &gt;= 6 THEN s.NETPERD6 ELSE 0 END + 
			CASE WHEN {1} &gt;= 7 THEN s.NETPERD7 ELSE 0 END + 
			CASE WHEN {1} &gt;= 8 THEN s.NETPERD8 ELSE 0 END + 
			CASE WHEN {1} &gt;= 9 THEN s.NETPERD9 ELSE 0 END + 
			CASE WHEN {1} &gt;= 10 THEN s.NETPERD10 ELSE 0 END + 
			CASE WHEN {1} &gt;= 11 THEN s.NETPERD11 ELSE 0 END + 
			CASE WHEN {1} &gt;= 12 THEN s.NETPERD12 ELSE 0 END + 
			CASE WHEN {1} &gt;= 13 THEN s.NETPERD13 ELSE 0 END
		AS Amount
	FROM 
		GLAMF a LEFT JOIN 
		GLACGRP g on a.ACCTGRPCOD = g.ACCTGRPCOD LEFT JOIN 
		GLAFS s on a.ACCTID = s.ACCTID
	WHERE 
		g.GRPCOD in (10, 20, 80, 90) and
		s.FSCSYR = '{0}' and 
		s.FSCSDSG = 'A' and 
		s.FSCSCURN = '{2}' and 
		s.CURNTYPE = 'F'
)

SELECT 
	(SELECT SUM(Amount) FROM data WHERE GRPCOD=10) as 'TotalCash',
	(SELECT SUM(Amount) FROM data WHERE GRPCOD=20) as 'TotalReceivables',
	(SELECT SUM(Amount) * -1 FROM data WHERE GRPCOD IN (80, 90)) as 'TotalLiabilities'</value>
    <comment>KPI002 Cash Position
{0} - FiscalYear
{1} - FiscalPeriod
{2} - CurrencyCode</comment>
  </data>
  <data name="KPI003" xml:space="preserve">
    <value>/*
KPI003 Income From Operations
{0} - Fiscal Year, eg, '2019'
{1} - Fiscal Period, eg, 10 (will sum up the data from periods from 1 to 10)
{2} - Currency Code, eg, 'USD'
declare @year nvarchar(100), @period int, @currency nvarchar(100)
select @year='2019', @period = 7, @currency = 'CAD'
*/

;with data as
(
	SELECT 
		g.GRPCOD,  
		SUM( 
			CASE {1}
			WHEN 1 THEN NETPERD1
			WHEN 2 THEN NETPERD2
			WHEN 3 THEN NETPERD3
			WHEN 4 THEN NETPERD4
			WHEN 5 THEN NETPERD5
			WHEN 6 THEN NETPERD6
			WHEN 7 THEN NETPERD7
			WHEN 8 THEN NETPERD8
			WHEN 9 THEN NETPERD9
			WHEN 10 THEN NETPERD10
			WHEN 11 THEN NETPERD11
			WHEN 12 THEN NETPERD12
			WHEN 13 THEN NETPERD13
			ELSE 0
			END) as PeriodAmount,
		SUM( 
			CASE WHEN {1} &gt;= 1 THEN NETPERD1 ELSE 0 END + 
			CASE WHEN {1} &gt;= 2 THEN NETPERD2 ELSE 0 END + 
			CASE WHEN {1} &gt;= 3 THEN NETPERD3 ELSE 0 END + 
			CASE WHEN {1} &gt;= 4 THEN NETPERD4 ELSE 0 END + 
			CASE WHEN {1} &gt;= 5 THEN NETPERD5 ELSE 0 END + 
			CASE WHEN {1} &gt;= 6 THEN NETPERD6 ELSE 0 END + 
			CASE WHEN {1} &gt;= 7 THEN NETPERD7 ELSE 0 END + 
			CASE WHEN {1} &gt;= 8 THEN NETPERD8 ELSE 0 END + 
			CASE WHEN {1} &gt;= 9 THEN NETPERD9 ELSE 0 END + 
			CASE WHEN {1} &gt;= 10 THEN NETPERD10 ELSE 0 END + 
			CASE WHEN {1} &gt;= 11 THEN NETPERD11 ELSE 0 END + 
			CASE WHEN {1} &gt;= 12 THEN NETPERD12 ELSE 0 END + 
			CASE WHEN {1} &gt;= 13 THEN NETPERD13 ELSE 0 END) as TotalAmount
	FROM 
		 GLAMF a LEFT JOIN 
		 GLACGRP g ON a.ACCTGRPCOD = g.ACCTGRPCOD LEFT JOIN 
		 GLAFS s ON a.ACCTID = s.ACCTID
	WHERE 
		g.GRPCOD in (140, 150, 180, 170) and 
		s.FSCSYR = '{0}' and 
		s.FSCSDSG = 'A' and 
		s.FSCSCURN = '{2}' and 
		s.CURNTYPE = 'F'
	GROUP BY
		g.GRPCOD
)

SELECT
	(SELECT PeriodAmount * -1 FROM data WHERE GRPCOD=140) as PeriodSales,
	(SELECT TotalAmount * -1 FROM data WHERE GRPCOD=140) as TotalSales,
	(SELECT PeriodAmount FROM data WHERE GRPCOD=150) as PeriodCostOfSales,
	(SELECT TotalAmount FROM data WHERE GRPCOD=150) as TotalCostOfSales,
	(SELECT PeriodAmount FROM data WHERE GRPCOD=180) as PeriodDepreciationExpenses,
	(SELECT TotalAmount FROM data WHERE GRPCOD=180) as TotalDepreciationExpenses,
	(SELECT PeriodAmount FROM data WHERE GRPCOD=170) as PeriodOtherExpenses,
	(SELECT TotalAmount FROM data WHERE GRPCOD=170) as TotalOtherExpenses</value>
    <comment>KPI003 Income From Operations
{0} - Fiscal Year, eg, '2019'
{1} - Fiscal Period, eg, 10 (will sum up the data from periods from 1 to 10)
{2} - Currency Code, eg, 'USD'</comment>
  </data>
  <data name="KPI004" xml:space="preserve">
    <value>select sum(NETPERD1) * -1 as "NETPERD1",
       sum(NETPERD2) * -1 as "NETPERD2",
       sum(NETPERD3) * -1 as "NETPERD3",
       sum(NETPERD4) * -1 as "NETPERD4",
       sum(NETPERD5) * -1 as "NETPERD5",
       sum(NETPERD6) * -1 as "NETPERD6",
       sum(NETPERD7) * -1 as "NETPERD7",
       sum(NETPERD8) * -1 as "NETPERD8",
       sum(NETPERD9) * -1 as "NETPERD9",
       sum(NETPERD10) * -1 as "NETPERD10",
       sum(NETPERD11) * -1 as "NETPERD11",
       sum(NETPERD12) * -1 as "NETPERD12",
       sum(NETPERD13) * -1 as "NETPERD13",
ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS, 1 AS SEQUENCE
from GLAFS, CSFSC where ACCTID in (
select ACCTID from GLAMF where ACCTGRPCOD in (select ACCTGRPCOD from GLACGRP where GRPCOD in (140, 160) )
) and GLAFS.FSCSYR = {0} and GLAFS.FSCSYR = CSFSC.FSCYEAR and FSCSDSG='A' and CURNTYPE = 'F' group by ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS
union all
select sum(NETPERD1) as "NETPERD1",
    sum(NETPERD2) as "NETPERD2",
    sum(NETPERD3) as "NETPERD3",
    sum(NETPERD4) as "NETPERD4",
    sum(NETPERD5) as "NETPERD5",
    sum(NETPERD6) as "NETPERD6",
    sum(NETPERD7) as "NETPERD7",
    sum(NETPERD8) as "NETPERD8",
    sum(NETPERD9) as "NETPERD9",
    sum(NETPERD10) as "NETPERD10",
    sum(NETPERD11) as "NETPERD11",
    sum(NETPERD12) as "NETPERD12",
    sum(NETPERD13) as "NETPERD13",
	ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS, 2 AS SEQUENCE
from GLAFS, CSFSC  where ACCTID in (
select ACCTID from GLAMF where ACCTGRPCOD in (select ACCTGRPCOD from GLACGRP where GRPCOD in (150, 180, 170, 190, 200, 210) )
) and GLAFS.FSCSYR = {0} and GLAFS.FSCSYR = CSFSC.FSCYEAR and FSCSDSG='A' and CURNTYPE = 'F' group by ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS
order by SEQUENCE</value>
  </data>
  <data name="KPI005" xml:space="preserve">
    <value>select sum(NETPERD1) * -1 as "NETPERD1",
       sum(NETPERD2) * -1 as "NETPERD2",
       sum(NETPERD3) * -1 as "NETPERD3",
       sum(NETPERD4) * -1 as "NETPERD4",
       sum(NETPERD5) * -1 as "NETPERD5",
       sum(NETPERD6) * -1 as "NETPERD6",
       sum(NETPERD7) * -1 as "NETPERD7",
       sum(NETPERD8) * -1 as "NETPERD8",
       sum(NETPERD9) * -1 as "NETPERD9",
       sum(NETPERD10) * -1 as "NETPERD10",
       sum(NETPERD11) * -1 as "NETPERD11",
       sum(NETPERD12) * -1 as "NETPERD12",
       sum(NETPERD13) * -1 as "NETPERD13",
ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS, 1 AS SEQUENCE
from GLAFS, CSFSC where ACCTID in (
select ACCTID from GLAMF where ACCTGRPCOD in (select ACCTGRPCOD from GLACGRP where GRPCOD in (140, 160) )
) and GLAFS.FSCSYR = {0} and GLAFS.FSCSYR = CSFSC.FSCYEAR and FSCSDSG='A' and CURNTYPE = 'F' group by ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS
union all
select sum(NETPERD1) * -1 as "NETPERD1",
       sum(NETPERD2) * -1 as "NETPERD2",
       sum(NETPERD3) * -1 as "NETPERD3",
       sum(NETPERD4) * -1 as "NETPERD4",
       sum(NETPERD5) * -1 as "NETPERD5",
       sum(NETPERD6) * -1 as "NETPERD6",
       sum(NETPERD7) * -1 as "NETPERD7",
       sum(NETPERD8) * -1 as "NETPERD8",
       sum(NETPERD9) * -1 as "NETPERD9",
       sum(NETPERD10) * -1 as "NETPERD10",
       sum(NETPERD11) * -1 as "NETPERD11",
       sum(NETPERD12) * -1 as "NETPERD12",
       sum(NETPERD13) * -1 as "NETPERD13",
ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS, 2 AS SEQUENCE
from GLAFS, CSFSC where ACCTID in (
select ACCTID from GLAMF where ACCTGRPCOD in (select ACCTGRPCOD from GLACGRP where GRPCOD in (140, 160) )
) and GLAFS.FSCSYR = {1} and GLAFS.FSCSYR = CSFSC.FSCYEAR and FSCSDSG='A' and CURNTYPE = 'F' group by ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS
order by SEQUENCE</value>
  </data>
  <data name="KPI006" xml:space="preserve">
    <value>select sum(NETPERD1) as "NETPERD1",
    sum(NETPERD2) as "NETPERD2",
    sum(NETPERD3) as "NETPERD3",
    sum(NETPERD4) as "NETPERD4",
    sum(NETPERD5) as "NETPERD5",
    sum(NETPERD6) as "NETPERD6",
    sum(NETPERD7) as "NETPERD7",
    sum(NETPERD8) as "NETPERD8",
    sum(NETPERD9) as "NETPERD9",
    sum(NETPERD10) as "NETPERD10",
    sum(NETPERD11) as "NETPERD11",
    sum(NETPERD12) as "NETPERD12",
    sum(NETPERD13) as "NETPERD13",
	ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS, 1 AS SEQUENCE
from GLAFS, CSFSC  where ACCTID in (
select ACCTID from GLAMF where ACCTGRPCOD in (select ACCTGRPCOD from GLACGRP where GRPCOD in (150, 180, 170, 190, 200, 210) )
) and GLAFS.FSCSYR = {0} and GLAFS.FSCSYR = CSFSC.FSCYEAR and FSCSDSG='A' and CURNTYPE = 'F' group by ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS
union all
select sum(NETPERD1) as "NETPERD1",
    sum(NETPERD2) as "NETPERD2",
    sum(NETPERD3) as "NETPERD3",
    sum(NETPERD4) as "NETPERD4",
    sum(NETPERD5) as "NETPERD5",
    sum(NETPERD6) as "NETPERD6",
    sum(NETPERD7) as "NETPERD7",
    sum(NETPERD8) as "NETPERD8",
    sum(NETPERD9) as "NETPERD9",
    sum(NETPERD10) as "NETPERD10",
    sum(NETPERD11) as "NETPERD11",
    sum(NETPERD12) as "NETPERD12",
    sum(NETPERD13) as "NETPERD13",
	ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS, 2 AS SEQUENCE
from GLAFS, CSFSC  where ACCTID in (
select ACCTID from GLAMF where ACCTGRPCOD in (select ACCTGRPCOD from GLACGRP where GRPCOD in (150, 180, 170, 190, 200, 210) )
) and GLAFS.FSCSYR = {1} and GLAFS.FSCSYR = CSFSC.FSCYEAR and FSCSDSG='A' and CURNTYPE = 'F' group by ENDDATE1, ENDDATE2, ENDDATE3, ENDDATE4, ENDDATE5, ENDDATE6, ENDDATE7, ENDDATE8, ENDDATE9, ENDDATE10, ENDDATE11, ENDDATE12, ENDDATE13, PERIODS
order by SEQUENCE</value>
  </data>
  <data name="KPI014" xml:space="preserve">
    <value>SELECT TOP {0} c.VENDNAME AS VendorName, sum(c.AMTINVCHC) AS Amount
  FROM (SELECT a.IDVEND, b.VENDNAME, a.AMTINVCHC, a.TXTTRXTYPE
          FROM APOBL a, APVEN b
         WHERE a.IDVEND = b.VENDORID 
		   AND a.TXTTRXTYPE IN (1, 2, 3) 
		   AND a.FISCYR = '{1}' ) c 
GROUP BY IDVEND, VENDNAME 
ORDER BY Amount DESC</value>
    <comment>Top Vendors: {0} = Top Count, {1} = Fsical Year</comment>
  </data>
  <data name="KPI015" xml:space="preserve">
    <value>SELECT COALESCE(SUM(AMTDCSRMHC), 0) AS Amount
  FROM APOBS 
 WHERE SWPAID = 0 
   AND TXTTRXTYPE = 1 
   AND (DATEDISC &gt;= '{0}' AND DATEDISC &lt;= '{1}')
UNION ALL
SELECT COALESCE(SUM(AMTDCSRMHC), 0) AS Amount
  FROM APOBS 
 WHERE SWPAID = 0 
   AND TXTTRXTYPE = 1 
   AND (DATEDISC &gt;= '{2}' AND DATEDISC &lt;= '{3}')</value>
    <comment>Expiring Vendor Discounts: {0} = Start Date This Week, {1} = End Date This Week, {2} = Start Date Next Week, {3} = End Date Next Week</comment>
  </data>
  <data name="KPI018" xml:space="preserve">
    <value>SELECT TOP {0} c.NAMECUST AS CustomerName, sum(c.AMTINVCHC) AS Amount 
  FROM (SELECT a.IDCUST, b.NAMECUST, a.AMTINVCHC 
          FROM AROBL a, ARCUS b 
         WHERE a.IDCUST = b.IDCUST 
           AND a.TRXTYPETXT IN (1, 2, 3) 
           AND a.FISCYR = '{1}') c 
GROUP BY c.IDCUST, c.NAMECUST
ORDER BY Amount DESC</value>
    <comment>Top Customers by Billing: {0} = Top Count, {1} = Fiscal Year</comment>
  </data>
  <data name="KPI019" xml:space="preserve">
    <value>SELECT TOP {0} NAMECUST AS CustomerName, AMTBALDUEH AS Amount 
  FROM ARCUS 
 WHERE AMTBALDUEH &gt; 0 
   AND SWACTV = 1 
   AND SWHOLD = 0 
ORDER BY Amount DESC</value>
    <comment>Top Customers by Amount Due: {0} = Top Count</comment>
  </data>
  <data name="KPI020" xml:space="preserve">
    <value>select top({4}) ITEM, i.[DESC], SUM(FTOTSALES) as FTOTSALES, SUM(FCSTSALES) as FCSTSALES, SUM(QTYSOLD) as QTYSOLD, SUM(SALESCNT) as SALESCNT, SUM(RETCNT) as RETCNT, SUM(FRETSALES) as FRETSALES
from OESHHD, ICITEM i
where YR &gt;= '{0}' and YR &lt;= '{1}' and 
      PERIOD &gt;= {2} and PERIOD &lt;= {3} and
      ITEM = i.ITEMNO
group by ITEM, i.[DESC]
order by FTOTSALES {5}</value>
    <comment>Inventory Item KPI: {0} - startYear, {1} - endYear, {2} - startPeriod, {3} - endPeriod, {4} - maxNumberOfItems</comment>
  </data>
  <data name="KPI022" xml:space="preserve">
    <value>/*
KPI022 - Sales per Salesperson
{0} - maximum number of Sales Persons to display
{1} - startDate
{2} - endDate
declare @startDate decimal(9,0), @endDate decimal (9,0)
select @startDate='20200101', @endDate='20201231'	
*/
	
;with data as 
(
	select 
		SALESPER1, SALESPLT1, SALESPER2, SALESPLT2, SALESPER3, SALESPLT3, SALESPER4, SALESPLT4, SALESPER5, SALESPLT5, 
		INRATE as 'RATE', 
		INRATEREP as 'ROPER', 
		INVNET as 'NETAMT', 
		2 as 'ADJTYPE'
	from 
		OEINVH
	where 
		INVDATE between {1} and {2}
                     
	union all

	select 
		SALESPER1, SALESPLT1, SALESPER2, SALESPLT2, SALESPER3, SALESPLT3, SALESPER4, SALESPLT4, SALESPER5, SALESPLT5, 
		CRRATE as 'RATE', 
		CRRATEREP as 'ROPER', 
		CRDNET as 'NETAMT', 
		ADJTYPE
	from 
		OECRDH
	where 
		CRDDATE between {1} and {2}
), 

dataUnpivoted as
(
	select RATE, ROPER, NETAMT, ADJTYPE, SP, SPR
	from 
	(
		select RATE, ROPER, NETAMT, ADJTYPE, SALESPER1, SALESPLT1, SALESPER2, SALESPLT2, SALESPER3, SALESPLT3, SALESPER4, SALESPLT4, SALESPER5, SALESPLT5
		from data
	) s
	unpivot (SP FOR SPX IN (SALESPER1, SALESPER2, SALESPER3, SALESPER4, SALESPER5)) as U1
	unpivot (SPR FOR SPRX IN (SALESPLT1, SALESPLT2, SALESPLT3, SALESPLT4, SALESPLT5)) as U2
	where 
		RIGHT(SPX, 1) = RIGHT(SPRX, 1) and SP &lt;&gt; ''
)

select top {0}
	d.SP as SalesPersonInitials,
	s.NAMEEMPL as SalesPersonName,
	CAST(
		SUM(
			case
					when ROPER = 1 then (NETAMT * SPR * 0.01) * RATE
					when ROPER = 2 then (NETAMT * SPR * 0.01) / RATE
			end * 
			case
					when ADJTYPE = 1 then -1
					when ADJTYPE = 2 then 1
			end) 
		as decimal(19, 6)) as Sales
from 
	dataUnpivoted d inner join
	ARSAP s ON (d.SP = s.CODESLSP)
group by d.SP, s.NAMEEMPL
order by Sales desc</value>
    <comment>KPI022 - Sales per Salesperson
{0} - maximum number of Sales Persons to display
{1} - startDate
{2} - endDate</comment>
  </data>
  <data name="KPI030" xml:space="preserve">
    <value>select b.ORDDATE
       , sum(b.PENDINGAMOUNT) as '$ Value of Pending Orders per day for past week'
       , sum(b.LOSTAMOUNT) as '$ Value of Lost Sales per day for past week'
       , sum(b.SHIPPEDAMOUNT) as '$ Value of Shipments per day for past week'
       , count(distinct b.ORDNUMBER) as '# of Orders Placed per day for past month'
from
(
       select ORDNUMBER, ORDDATE, PENDINGAMOUNT = 
              case
                     when ORRATEREP = 1 then (EXTINVMISC - INVDISC - HDRDISC) * ORRATE
                     when ORRATEREP = 2 then (EXTINVMISC - INVDISC - HDRDISC) / ORRATE
              end
              ,
              LOSTAMOUNT = 
              case
                     when ORRATEREP = 1 then SALESLOST * ORRATE 
                     when ORRATEREP = 2 then SALESLOST / ORRATE 
              end
              ,
              SHIPPEDAMOUNT = 
              case
                     when ORRATEREP = 1 then (EXTSHIMISC - SHIDISC - SHHDRDISC) * ORRATE
                     when ORRATEREP = 2 then (EXTSHIMISC - SHIDISC - SHHDRDISC) / ORRATE
              end
       from
       (
              select H.ORDDATE, 0 as EXTINVMISC, 0 as INVDISC, 0 as HDRDISC, 0 as SALESLOST, SH.ORRATE, SH.ORRATEREP, H.ORDNUMBER, SD.EXTSHIMISC, SD.SHIDISC, SD.HDRDISC as 'SHHDRDISC'
              from
              OEORDH H, OESHIH SH ,OESHID SD
              where H.TYPE = 1
			  and H.ORDNUMBER = SH.ORDNUMBER
			  and H.ORDNUMBER = SD.ORDNUMBER
              and CONVERT(DATE,CONVERT(VARCHAR(8),H.ORDDATE),112) between (DateAdd(dd, -{0} + 1,CONVERT(date,'{1}',112))) and CONVERT(date,'{1}',112)
              and SH.SHIUNIQ = SD.SHIUNIQ 
             union 
              select H.ORDDATE, D.EXTINVMISC, D.INVDISC, D.HDRDISC, D.SALESLOST, H.ORRATE, H.ORRATEREP, H.ORDNUMBER, 0 as EXTSHIMISC, 0 as SHIDISC, 0 as 'SHHDRDISC'
              from
              OEORDH H, OEORDD D
              where H.TYPE = 1
			  and H.ORDUNIQ = D.ORDUNIQ
              and CONVERT(DATE,CONVERT(VARCHAR(8),H.ORDDATE),112) between (DateAdd(dd, -{0} + 1,CONVERT(date,'{1}',112))) and CONVERT(date,'{1}',112)
              and D.LINETYPE = 1

       ) a
) b
group by b.ORDDATE
order by b.ORDDATE</value>
    <comment>Activity Trend: {0} = Period length (e.g. 7=week, 30=month), {1} = Session Date</comment>
  </data>
  <data name="ReceiptAppliedAdjustmentDetail" xml:space="preserve">
    <value>SELECT * FROM ARTCP WHERE CODEPAYM= '{0}' AND IDCUST='{1}' AND IDINVC='{2}' AND IDDOCMTCH='{3}' AND TRXTYPE={4}</value>
    <comment>Added for Prepayment AP Invoice Entry</comment>
  </data>
</root>