<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes  
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFilter" xml:space="preserve">
    <value>Add Filter</value>
  </data>
  <data name="ARDocumentInquiry" xml:space="preserve">
    <value>A/R Customer Document Inquiry</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Adjustments" xml:space="preserve">
    <value>Adjustments</value>
  </data>
  <data name="APVendorsTransactions" xml:space="preserve">
    <value>A/P Vendors and Transactions</value>
  </data>
  <data name="ARCustomersTransactions" xml:space="preserve">
    <value>A/R Customers and Transactions</value>
  </data>
  <data name="ARTemplate" xml:space="preserve">
    <value>A/R {0}</value>
  </data>
  <data name="CurrentBalance" xml:space="preserve">
    <value>Current Balance</value>
  </data>
  <data name="CustomerNumber" xml:space="preserve">
    <value>Customer Number</value>
  </data>
  <data name="DocumentDate" xml:space="preserve">
    <value>Document Date</value>
  </data>
  <data name="Documents" xml:space="preserve">
    <value>Documents</value>
  </data>
  <data name="DueDate" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="Equal" xml:space="preserve">
    <value>Is equal to</value>
  </data>
  <data name="GLAccountsNetChanges" xml:space="preserve">
    <value>G/L Accounts and Net Changes</value>
  </data>
  <data name="GLAccountsTransactions" xml:space="preserve">
    <value>G/L Accounts and Transactions</value>
  </data>
  <data name="Greater" xml:space="preserve">
    <value>Is greater than</value>
  </data>
  <data name="ICContractPricing" xml:space="preserve">
    <value>I/C Contract Pricing</value>
  </data>
  <data name="ICTransactions" xml:space="preserve">
    <value>I/C Transactions</value>
  </data>
  <data name="Inquiry" xml:space="preserve">
    <value>Inquiry</value>
  </data>
  <data name="Less" xml:space="preserve">
    <value>Is less than</value>
  </data>
  <data name="OEInvoices" xml:space="preserve">
    <value>O/E Invoices</value>
  </data>
  <data name="OEOrders" xml:space="preserve">
    <value>O/E Orders</value>
  </data>
  <data name="OESales" xml:space="preserve">
    <value>O/E Sales</value>
  </data>
  <data name="OETransactions" xml:space="preserve">
    <value>O/E Transactions</value>
  </data>
  <data name="OrderNumber" xml:space="preserve">
    <value>Order Number</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="PONumber" xml:space="preserve">
    <value>P/O Number</value>
  </data>
  <data name="POTransactions" xml:space="preserve">
    <value>P/O Transactions</value>
  </data>
  <data name="Receipts" xml:space="preserve">
    <value>Receipts</value>
  </data>
  <data name="RecurringCharges" xml:space="preserve">
    <value>Recurring Charges</value>
  </data>
  <data name="Refunds" xml:space="preserve">
    <value>Refunds</value>
  </data>
  <data name="ShipmentNumber" xml:space="preserve">
    <value>Shipment Number</value>
  </data>
  <data name="AR_DocumentType_CreditNote" xml:space="preserve">
    <value>Credit Note</value>
  </data>
  <data name="AR_DocumentType_DebitNote" xml:space="preserve">
    <value>Debit Note</value>
  </data>
  <data name="AR_DocumentType_Interest" xml:space="preserve">
    <value>Interest</value>
  </data>
  <data name="AR_DocumentType_Invoice" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="AR_DocumentType_Prepayment" xml:space="preserve">
    <value>Prepayment</value>
  </data>
  <data name="AR_DocumentType_Receipt" xml:space="preserve">
    <value>Receipt</value>
  </data>
  <data name="AR_DocumentType_Refund" xml:space="preserve">
    <value>Refund</value>
  </data>
  <data name="AR_DocumentType_UnappliedCash" xml:space="preserve">
    <value>Unapplied Cash</value>
  </data>
  <data name="AR_DocumentType_MiscReceipt" xml:space="preserve">
    <value>Miscellaneous Receipt</value>
  </data>
  <data name="DocumentType" xml:space="preserve">
    <value>Document Type</value>
  </data>
  <data name="FullyPaid" xml:space="preserve">
    <value>Fully Paid</value>
  </data>
  <data name="Includes" xml:space="preserve">
    <value>Includes</value>
  </data>
  <data name="CustomerCurrency" xml:space="preserve">
    <value>Customer Currency</value>
  </data>
  <data name="FunctionalCurrency" xml:space="preserve">
    <value>Functional Currency</value>
  </data>
  <data name="RangeErrorEmptyFromValue" xml:space="preserve">
    <value>You must specify a value for the {0} Field</value>
  </data>
  <data name="RangeErrorFromValueGreater" xml:space="preserve">
    <value>The starting value for {0} range must be less than the ending value.</value>
  </data>
  <data name="CustomerInquiryTitle" xml:space="preserve">
    <value>A/R Customer {0}</value>
  </data>
  <data name="APVendorDocuments" xml:space="preserve">
    <value>Vendor Documents</value>
  </data>
  <data name="CustomerDocumentsCust" xml:space="preserve">
    <value>Customer Documents (Customer Currency)</value>
  </data>
  <data name="CustomerDocumentsFunc" xml:space="preserve">
    <value>Customer Documents (Functional Currency)</value>
  </data>
  <data name="GLNetChanges" xml:space="preserve">
    <value>G/L Net Changes</value>
  </data>
  <data name="GLTransactions" xml:space="preserve">
    <value>G/L Transactions</value>
  </data>
  <data name="ICInventoryItems" xml:space="preserve">
    <value>Inventory Items</value>
  </data>
  <data name="OESalesHistory" xml:space="preserve">
    <value>O/E Sales History</value>
  </data>
  <data name="POPurchaseHistory" xml:space="preserve">
    <value>Purchase History</value>
  </data>
  <data name="POPurchaseOrders" xml:space="preserve">
    <value>Purchase Orders</value>
  </data>
  <data name="PrivateTypeDesc" xml:space="preserve">
    <value>Private - Only the user who created this query can use it</value>
  </data>
  <data name="PublicTypeDesc" xml:space="preserve">
    <value>Public - All authorized users can use this query</value>
  </data>
  <data name="QueryName" xml:space="preserve">
    <value>Query Name</value>
  </data>
  <data name="SelectDataSource" xml:space="preserve">
    <value>Select a Data Source</value>
  </data>
  <data name="Private" xml:space="preserve">
    <value>Private</value>
  </data>
  <data name="Public" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="Query" xml:space="preserve">
    <value>Query</value>
  </data>
  <data name="Template" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="SaveReplaceConfirmMessage" xml:space="preserve">
    <value>{0} query {1} already exists. Do you want to replace it?</value>
  </data>
  <data name="SaveQuerySuccessMessage" xml:space="preserve">
    <value>Query has been saved.</value>
  </data>
  <data name="DateModified" xml:space="preserve">
    <value>Date Modified</value>
  </data>
  <data name="InvalidQueryName" xml:space="preserve">
    <value>Query name cannot be empty or contain the following characters: \ / : * ? &lt; &gt; | "</value>
  </data>
  <data name="ApplyFilters" xml:space="preserve">
    <value>Apply Filters</value>
  </data>
  <data name="DeleteQuery" xml:space="preserve">
    <value>Delete Query</value>
  </data>
  <data name="ResetFilters" xml:space="preserve">
    <value>Reset Filters</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="SaveQuery" xml:space="preserve">
    <value>Save Query</value>
  </data>
  <data name="PrivateQueries" xml:space="preserve">
    <value>Private Queries</value>
  </data>
  <data name="PublicQueries" xml:space="preserve">
    <value>Public Queries</value>
  </data>
  <data name="OpenQuery" xml:space="preserve">
    <value>Open Query</value>
  </data>
  <data name="DataSource" xml:space="preserve">
    <value>Data Source</value>
  </data>
  <data name="TabMessage" xml:space="preserve">
    <value>You have no custom queries. To create a custom query, modify a standard query and then save it.</value>
    <comment>Customized Tab Message</comment>
  </data>
  <data name="TabMessageHeadline" xml:space="preserve">
    <value>No Customize Queries</value>
    <comment>Customized Tab Message</comment>
  </data>
  <data name="Personal" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="Shared" xml:space="preserve">
    <value>Shared</value>
  </data>
  <data name="CustomQueries" xml:space="preserve">
    <value>Custom Queries</value>
  </data>
  <data name="StandQueries" xml:space="preserve">
    <value>Standard Queries</value>
  </data>
</root>